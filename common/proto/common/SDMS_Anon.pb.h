// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SDMS_Anon.proto
// Protobuf C++ Version: 4.25.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_SDMS_5fAnon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_SDMS_5fAnon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025002 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "SDMS.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_SDMS_5fAnon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_SDMS_5fAnon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_SDMS_5fAnon_2eproto;
namespace SDMS {
namespace Anon {
class AckReply;
struct AckReplyDefaultTypeInternal;
extern AckReplyDefaultTypeInternal _AckReply_default_instance_;
class AuthStatusReply;
struct AuthStatusReplyDefaultTypeInternal;
extern AuthStatusReplyDefaultTypeInternal _AuthStatusReply_default_instance_;
class AuthenticateByPasswordRequest;
struct AuthenticateByPasswordRequestDefaultTypeInternal;
extern AuthenticateByPasswordRequestDefaultTypeInternal _AuthenticateByPasswordRequest_default_instance_;
class AuthenticateByTokenRequest;
struct AuthenticateByTokenRequestDefaultTypeInternal;
extern AuthenticateByTokenRequestDefaultTypeInternal _AuthenticateByTokenRequest_default_instance_;
class DailyMessageReply;
struct DailyMessageReplyDefaultTypeInternal;
extern DailyMessageReplyDefaultTypeInternal _DailyMessageReply_default_instance_;
class DailyMessageRequest;
struct DailyMessageRequestDefaultTypeInternal;
extern DailyMessageRequestDefaultTypeInternal _DailyMessageRequest_default_instance_;
class GetAuthStatusRequest;
struct GetAuthStatusRequestDefaultTypeInternal;
extern GetAuthStatusRequestDefaultTypeInternal _GetAuthStatusRequest_default_instance_;
class NackReply;
struct NackReplyDefaultTypeInternal;
extern NackReplyDefaultTypeInternal _NackReply_default_instance_;
class VersionReply;
struct VersionReplyDefaultTypeInternal;
extern VersionReplyDefaultTypeInternal _VersionReply_default_instance_;
class VersionRequest;
struct VersionRequestDefaultTypeInternal;
extern VersionRequestDefaultTypeInternal _VersionRequest_default_instance_;
}  // namespace Anon
}  // namespace SDMS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace SDMS {
namespace Anon {
enum Protocol : int {
  ID = 1,
};

bool Protocol_IsValid(int value);
extern const uint32_t Protocol_internal_data_[];
constexpr Protocol Protocol_MIN = static_cast<Protocol>(1);
constexpr Protocol Protocol_MAX = static_cast<Protocol>(1);
constexpr int Protocol_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Protocol_descriptor();
template <typename T>
const std::string& Protocol_Name(T value) {
  static_assert(std::is_same<T, Protocol>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Protocol_Name().");
  return Protocol_Name(static_cast<Protocol>(value));
}
template <>
inline const std::string& Protocol_Name(Protocol value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Protocol_descriptor,
                                                 1, 1>(
      static_cast<int>(value));
}
inline bool Protocol_Parse(absl::string_view name, Protocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Protocol>(
      Protocol_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VersionRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:SDMS.Anon.VersionRequest) */ {
 public:
  inline VersionRequest() : VersionRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VersionRequest(::google::protobuf::internal::ConstantInitialized);

  inline VersionRequest(const VersionRequest& from)
      : VersionRequest(nullptr, from) {}
  VersionRequest(VersionRequest&& from) noexcept
    : VersionRequest() {
    *this = ::std::move(from);
  }

  inline VersionRequest& operator=(const VersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionRequest& operator=(VersionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VersionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VersionRequest* internal_default_instance() {
    return reinterpret_cast<const VersionRequest*>(
               &_VersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(VersionRequest& a, VersionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(VersionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VersionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VersionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VersionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.VersionRequest";
  }
  protected:
  explicit VersionRequest(::google::protobuf::Arena* arena);
  VersionRequest(::google::protobuf::Arena* arena, const VersionRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SDMS.Anon.VersionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class VersionReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.VersionReply) */ {
 public:
  inline VersionReply() : VersionReply(nullptr) {}
  ~VersionReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VersionReply(::google::protobuf::internal::ConstantInitialized);

  inline VersionReply(const VersionReply& from)
      : VersionReply(nullptr, from) {}
  VersionReply(VersionReply&& from) noexcept
    : VersionReply() {
    *this = ::std::move(from);
  }

  inline VersionReply& operator=(const VersionReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionReply& operator=(VersionReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VersionReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const VersionReply* internal_default_instance() {
    return reinterpret_cast<const VersionReply*>(
               &_VersionReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(VersionReply& a, VersionReply& b) {
    a.Swap(&b);
  }
  inline void Swap(VersionReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VersionReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VersionReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VersionReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VersionReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VersionReply& from) {
    VersionReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VersionReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.VersionReply";
  }
  protected:
  explicit VersionReply(::google::protobuf::Arena* arena);
  VersionReply(::google::protobuf::Arena* arena, const VersionReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReleaseYearFieldNumber = 1,
    kReleaseMonthFieldNumber = 2,
    kReleaseDayFieldNumber = 3,
    kReleaseHourFieldNumber = 4,
    kReleaseMinuteFieldNumber = 5,
    kApiMajorFieldNumber = 6,
    kApiMinorFieldNumber = 7,
    kApiPatchFieldNumber = 8,
    kComponentMajorFieldNumber = 9,
    kComponentMinorFieldNumber = 10,
    kComponentPatchFieldNumber = 11,
  };
  // optional uint32 release_year = 1;
  bool has_release_year() const;
  void clear_release_year() ;
  ::uint32_t release_year() const;
  void set_release_year(::uint32_t value);

  private:
  ::uint32_t _internal_release_year() const;
  void _internal_set_release_year(::uint32_t value);

  public:
  // optional uint32 release_month = 2;
  bool has_release_month() const;
  void clear_release_month() ;
  ::uint32_t release_month() const;
  void set_release_month(::uint32_t value);

  private:
  ::uint32_t _internal_release_month() const;
  void _internal_set_release_month(::uint32_t value);

  public:
  // optional uint32 release_day = 3;
  bool has_release_day() const;
  void clear_release_day() ;
  ::uint32_t release_day() const;
  void set_release_day(::uint32_t value);

  private:
  ::uint32_t _internal_release_day() const;
  void _internal_set_release_day(::uint32_t value);

  public:
  // optional uint32 release_hour = 4;
  bool has_release_hour() const;
  void clear_release_hour() ;
  ::uint32_t release_hour() const;
  void set_release_hour(::uint32_t value);

  private:
  ::uint32_t _internal_release_hour() const;
  void _internal_set_release_hour(::uint32_t value);

  public:
  // optional uint32 release_minute = 5;
  bool has_release_minute() const;
  void clear_release_minute() ;
  ::uint32_t release_minute() const;
  void set_release_minute(::uint32_t value);

  private:
  ::uint32_t _internal_release_minute() const;
  void _internal_set_release_minute(::uint32_t value);

  public:
  // optional uint32 api_major = 6;
  bool has_api_major() const;
  void clear_api_major() ;
  ::uint32_t api_major() const;
  void set_api_major(::uint32_t value);

  private:
  ::uint32_t _internal_api_major() const;
  void _internal_set_api_major(::uint32_t value);

  public:
  // optional uint32 api_minor = 7;
  bool has_api_minor() const;
  void clear_api_minor() ;
  ::uint32_t api_minor() const;
  void set_api_minor(::uint32_t value);

  private:
  ::uint32_t _internal_api_minor() const;
  void _internal_set_api_minor(::uint32_t value);

  public:
  // optional uint32 api_patch = 8;
  bool has_api_patch() const;
  void clear_api_patch() ;
  ::uint32_t api_patch() const;
  void set_api_patch(::uint32_t value);

  private:
  ::uint32_t _internal_api_patch() const;
  void _internal_set_api_patch(::uint32_t value);

  public:
  // optional uint32 component_major = 9;
  bool has_component_major() const;
  void clear_component_major() ;
  ::uint32_t component_major() const;
  void set_component_major(::uint32_t value);

  private:
  ::uint32_t _internal_component_major() const;
  void _internal_set_component_major(::uint32_t value);

  public:
  // optional uint32 component_minor = 10;
  bool has_component_minor() const;
  void clear_component_minor() ;
  ::uint32_t component_minor() const;
  void set_component_minor(::uint32_t value);

  private:
  ::uint32_t _internal_component_minor() const;
  void _internal_set_component_minor(::uint32_t value);

  public:
  // optional uint32 component_patch = 11;
  bool has_component_patch() const;
  void clear_component_patch() ;
  ::uint32_t component_patch() const;
  void set_component_patch(::uint32_t value);

  private:
  ::uint32_t _internal_component_patch() const;
  void _internal_set_component_patch(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.VersionReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t release_year_;
    ::uint32_t release_month_;
    ::uint32_t release_day_;
    ::uint32_t release_hour_;
    ::uint32_t release_minute_;
    ::uint32_t api_major_;
    ::uint32_t api_minor_;
    ::uint32_t api_patch_;
    ::uint32_t component_major_;
    ::uint32_t component_minor_;
    ::uint32_t component_patch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class NackReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.NackReply) */ {
 public:
  inline NackReply() : NackReply(nullptr) {}
  ~NackReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NackReply(::google::protobuf::internal::ConstantInitialized);

  inline NackReply(const NackReply& from)
      : NackReply(nullptr, from) {}
  NackReply(NackReply&& from) noexcept
    : NackReply() {
    *this = ::std::move(from);
  }

  inline NackReply& operator=(const NackReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline NackReply& operator=(NackReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NackReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const NackReply* internal_default_instance() {
    return reinterpret_cast<const NackReply*>(
               &_NackReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NackReply& a, NackReply& b) {
    a.Swap(&b);
  }
  inline void Swap(NackReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NackReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NackReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NackReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NackReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NackReply& from) {
    NackReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NackReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.NackReply";
  }
  protected:
  explicit NackReply(::google::protobuf::Arena* arena);
  NackReply(::google::protobuf::Arena* arena, const NackReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrMsgFieldNumber = 2,
    kErrCodeFieldNumber = 1,
  };
  // optional string err_msg = 2;
  bool has_err_msg() const;
  void clear_err_msg() ;
  const std::string& err_msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_err_msg(Arg_&& arg, Args_... args);
  std::string* mutable_err_msg();
  PROTOBUF_NODISCARD std::string* release_err_msg();
  void set_allocated_err_msg(std::string* value);

  private:
  const std::string& _internal_err_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_err_msg(
      const std::string& value);
  std::string* _internal_mutable_err_msg();

  public:
  // required .SDMS.ErrorCode err_code = 1;
  bool has_err_code() const;
  void clear_err_code() ;
  ::SDMS::ErrorCode err_code() const;
  void set_err_code(::SDMS::ErrorCode value);

  private:
  ::SDMS::ErrorCode _internal_err_code() const;
  void _internal_set_err_code(::SDMS::ErrorCode value);

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.NackReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr err_msg_;
    int err_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class GetAuthStatusRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:SDMS.Anon.GetAuthStatusRequest) */ {
 public:
  inline GetAuthStatusRequest() : GetAuthStatusRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAuthStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetAuthStatusRequest(const GetAuthStatusRequest& from)
      : GetAuthStatusRequest(nullptr, from) {}
  GetAuthStatusRequest(GetAuthStatusRequest&& from) noexcept
    : GetAuthStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetAuthStatusRequest& operator=(const GetAuthStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAuthStatusRequest& operator=(GetAuthStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAuthStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAuthStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthStatusRequest*>(
               &_GetAuthStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetAuthStatusRequest& a, GetAuthStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAuthStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAuthStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAuthStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAuthStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAuthStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAuthStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.GetAuthStatusRequest";
  }
  protected:
  explicit GetAuthStatusRequest(::google::protobuf::Arena* arena);
  GetAuthStatusRequest(::google::protobuf::Arena* arena, const GetAuthStatusRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SDMS.Anon.GetAuthStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class DailyMessageRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:SDMS.Anon.DailyMessageRequest) */ {
 public:
  inline DailyMessageRequest() : DailyMessageRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DailyMessageRequest(::google::protobuf::internal::ConstantInitialized);

  inline DailyMessageRequest(const DailyMessageRequest& from)
      : DailyMessageRequest(nullptr, from) {}
  DailyMessageRequest(DailyMessageRequest&& from) noexcept
    : DailyMessageRequest() {
    *this = ::std::move(from);
  }

  inline DailyMessageRequest& operator=(const DailyMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyMessageRequest& operator=(DailyMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DailyMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DailyMessageRequest* internal_default_instance() {
    return reinterpret_cast<const DailyMessageRequest*>(
               &_DailyMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DailyMessageRequest& a, DailyMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyMessageRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DailyMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DailyMessageRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DailyMessageRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DailyMessageRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.DailyMessageRequest";
  }
  protected:
  explicit DailyMessageRequest(::google::protobuf::Arena* arena);
  DailyMessageRequest(::google::protobuf::Arena* arena, const DailyMessageRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SDMS.Anon.DailyMessageRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class DailyMessageReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.DailyMessageReply) */ {
 public:
  inline DailyMessageReply() : DailyMessageReply(nullptr) {}
  ~DailyMessageReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DailyMessageReply(::google::protobuf::internal::ConstantInitialized);

  inline DailyMessageReply(const DailyMessageReply& from)
      : DailyMessageReply(nullptr, from) {}
  DailyMessageReply(DailyMessageReply&& from) noexcept
    : DailyMessageReply() {
    *this = ::std::move(from);
  }

  inline DailyMessageReply& operator=(const DailyMessageReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline DailyMessageReply& operator=(DailyMessageReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DailyMessageReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const DailyMessageReply* internal_default_instance() {
    return reinterpret_cast<const DailyMessageReply*>(
               &_DailyMessageReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DailyMessageReply& a, DailyMessageReply& b) {
    a.Swap(&b);
  }
  inline void Swap(DailyMessageReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DailyMessageReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DailyMessageReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DailyMessageReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DailyMessageReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DailyMessageReply& from) {
    DailyMessageReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DailyMessageReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.DailyMessageReply";
  }
  protected:
  explicit DailyMessageReply(::google::protobuf::Arena* arena);
  DailyMessageReply(::google::protobuf::Arena* arena, const DailyMessageReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // optional string message = 1;
  bool has_message() const;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.DailyMessageReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class AuthenticateByTokenRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.AuthenticateByTokenRequest) */ {
 public:
  inline AuthenticateByTokenRequest() : AuthenticateByTokenRequest(nullptr) {}
  ~AuthenticateByTokenRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateByTokenRequest(::google::protobuf::internal::ConstantInitialized);

  inline AuthenticateByTokenRequest(const AuthenticateByTokenRequest& from)
      : AuthenticateByTokenRequest(nullptr, from) {}
  AuthenticateByTokenRequest(AuthenticateByTokenRequest&& from) noexcept
    : AuthenticateByTokenRequest() {
    *this = ::std::move(from);
  }

  inline AuthenticateByTokenRequest& operator=(const AuthenticateByTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticateByTokenRequest& operator=(AuthenticateByTokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticateByTokenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticateByTokenRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticateByTokenRequest*>(
               &_AuthenticateByTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AuthenticateByTokenRequest& a, AuthenticateByTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthenticateByTokenRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticateByTokenRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticateByTokenRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthenticateByTokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticateByTokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthenticateByTokenRequest& from) {
    AuthenticateByTokenRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticateByTokenRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.AuthenticateByTokenRequest";
  }
  protected:
  explicit AuthenticateByTokenRequest(::google::protobuf::Arena* arena);
  AuthenticateByTokenRequest(::google::protobuf::Arena* arena, const AuthenticateByTokenRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // required string token = 1;
  bool has_token() const;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.AuthenticateByTokenRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class AuthenticateByPasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.AuthenticateByPasswordRequest) */ {
 public:
  inline AuthenticateByPasswordRequest() : AuthenticateByPasswordRequest(nullptr) {}
  ~AuthenticateByPasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticateByPasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline AuthenticateByPasswordRequest(const AuthenticateByPasswordRequest& from)
      : AuthenticateByPasswordRequest(nullptr, from) {}
  AuthenticateByPasswordRequest(AuthenticateByPasswordRequest&& from) noexcept
    : AuthenticateByPasswordRequest() {
    *this = ::std::move(from);
  }

  inline AuthenticateByPasswordRequest& operator=(const AuthenticateByPasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticateByPasswordRequest& operator=(AuthenticateByPasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticateByPasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticateByPasswordRequest* internal_default_instance() {
    return reinterpret_cast<const AuthenticateByPasswordRequest*>(
               &_AuthenticateByPasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AuthenticateByPasswordRequest& a, AuthenticateByPasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthenticateByPasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticateByPasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticateByPasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthenticateByPasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticateByPasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthenticateByPasswordRequest& from) {
    AuthenticateByPasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticateByPasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.AuthenticateByPasswordRequest";
  }
  protected:
  explicit AuthenticateByPasswordRequest(::google::protobuf::Arena* arena);
  AuthenticateByPasswordRequest(::google::protobuf::Arena* arena, const AuthenticateByPasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // required string uid = 1;
  bool has_uid() const;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // required string password = 2;
  bool has_password() const;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.AuthenticateByPasswordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class AuthStatusReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SDMS.Anon.AuthStatusReply) */ {
 public:
  inline AuthStatusReply() : AuthStatusReply(nullptr) {}
  ~AuthStatusReply() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AuthStatusReply(::google::protobuf::internal::ConstantInitialized);

  inline AuthStatusReply(const AuthStatusReply& from)
      : AuthStatusReply(nullptr, from) {}
  AuthStatusReply(AuthStatusReply&& from) noexcept
    : AuthStatusReply() {
    *this = ::std::move(from);
  }

  inline AuthStatusReply& operator=(const AuthStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthStatusReply& operator=(AuthStatusReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthStatusReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthStatusReply* internal_default_instance() {
    return reinterpret_cast<const AuthStatusReply*>(
               &_AuthStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AuthStatusReply& a, AuthStatusReply& b) {
    a.Swap(&b);
  }
  inline void Swap(AuthStatusReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthStatusReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthStatusReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AuthStatusReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthStatusReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AuthStatusReply& from) {
    AuthStatusReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthStatusReply* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.AuthStatusReply";
  }
  protected:
  explicit AuthStatusReply(::google::protobuf::Arena* arena);
  AuthStatusReply(::google::protobuf::Arena* arena, const AuthStatusReply& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 2,
    kAuthFieldNumber = 1,
  };
  // optional string uid = 2;
  bool has_uid() const;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // required bool auth = 1;
  bool has_auth() const;
  void clear_auth() ;
  bool auth() const;
  void set_auth(bool value);

  private:
  bool _internal_auth() const;
  void _internal_set_auth(bool value);

  public:
  // @@protoc_insertion_point(class_scope:SDMS.Anon.AuthStatusReply)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr uid_;
    bool auth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};// -------------------------------------------------------------------

class AckReply final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:SDMS.Anon.AckReply) */ {
 public:
  inline AckReply() : AckReply(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AckReply(::google::protobuf::internal::ConstantInitialized);

  inline AckReply(const AckReply& from)
      : AckReply(nullptr, from) {}
  AckReply(AckReply&& from) noexcept
    : AckReply() {
    *this = ::std::move(from);
  }

  inline AckReply& operator=(const AckReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AckReply& operator=(AckReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AckReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AckReply* internal_default_instance() {
    return reinterpret_cast<const AckReply*>(
               &_AckReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AckReply& a, AckReply& b) {
    a.Swap(&b);
  }
  inline void Swap(AckReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AckReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AckReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AckReply>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AckReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AckReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SDMS.Anon.AckReply";
  }
  protected:
  explicit AckReply(::google::protobuf::Arena* arena);
  AckReply(::google::protobuf::Arena* arena, const AckReply& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SDMS.Anon.AckReply)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_SDMS_5fAnon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AckReply

// -------------------------------------------------------------------

// NackReply

// required .SDMS.ErrorCode err_code = 1;
inline bool NackReply::has_err_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NackReply::clear_err_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.err_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::SDMS::ErrorCode NackReply::err_code() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.NackReply.err_code)
  return _internal_err_code();
}
inline void NackReply::set_err_code(::SDMS::ErrorCode value) {
  _internal_set_err_code(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.NackReply.err_code)
}
inline ::SDMS::ErrorCode NackReply::_internal_err_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::SDMS::ErrorCode>(_impl_.err_code_);
}
inline void NackReply::_internal_set_err_code(::SDMS::ErrorCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::SDMS::ErrorCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.err_code_ = value;
}

// optional string err_msg = 2;
inline bool NackReply::has_err_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NackReply::clear_err_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.err_msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NackReply::err_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.NackReply.err_msg)
  return _internal_err_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NackReply::set_err_msg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.err_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.NackReply.err_msg)
}
inline std::string* NackReply::mutable_err_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_err_msg();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.NackReply.err_msg)
  return _s;
}
inline const std::string& NackReply::_internal_err_msg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.err_msg_.Get();
}
inline void NackReply::_internal_set_err_msg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.err_msg_.Set(value, GetArena());
}
inline std::string* NackReply::_internal_mutable_err_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.err_msg_.Mutable( GetArena());
}
inline std::string* NackReply::release_err_msg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.NackReply.err_msg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.err_msg_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.err_msg_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void NackReply::set_allocated_err_msg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.err_msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.err_msg_.IsDefault()) {
          _impl_.err_msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.NackReply.err_msg)
}

// -------------------------------------------------------------------

// VersionRequest

// -------------------------------------------------------------------

// VersionReply

// optional uint32 release_year = 1;
inline bool VersionReply::has_release_year() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void VersionReply::clear_release_year() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.release_year_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t VersionReply::release_year() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.release_year)
  return _internal_release_year();
}
inline void VersionReply::set_release_year(::uint32_t value) {
  _internal_set_release_year(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.release_year)
}
inline ::uint32_t VersionReply::_internal_release_year() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.release_year_;
}
inline void VersionReply::_internal_set_release_year(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.release_year_ = value;
}

// optional uint32 release_month = 2;
inline bool VersionReply::has_release_month() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void VersionReply::clear_release_month() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.release_month_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t VersionReply::release_month() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.release_month)
  return _internal_release_month();
}
inline void VersionReply::set_release_month(::uint32_t value) {
  _internal_set_release_month(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.release_month)
}
inline ::uint32_t VersionReply::_internal_release_month() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.release_month_;
}
inline void VersionReply::_internal_set_release_month(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.release_month_ = value;
}

// optional uint32 release_day = 3;
inline bool VersionReply::has_release_day() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void VersionReply::clear_release_day() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.release_day_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t VersionReply::release_day() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.release_day)
  return _internal_release_day();
}
inline void VersionReply::set_release_day(::uint32_t value) {
  _internal_set_release_day(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.release_day)
}
inline ::uint32_t VersionReply::_internal_release_day() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.release_day_;
}
inline void VersionReply::_internal_set_release_day(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.release_day_ = value;
}

// optional uint32 release_hour = 4;
inline bool VersionReply::has_release_hour() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void VersionReply::clear_release_hour() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.release_hour_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t VersionReply::release_hour() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.release_hour)
  return _internal_release_hour();
}
inline void VersionReply::set_release_hour(::uint32_t value) {
  _internal_set_release_hour(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.release_hour)
}
inline ::uint32_t VersionReply::_internal_release_hour() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.release_hour_;
}
inline void VersionReply::_internal_set_release_hour(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.release_hour_ = value;
}

// optional uint32 release_minute = 5;
inline bool VersionReply::has_release_minute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void VersionReply::clear_release_minute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.release_minute_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t VersionReply::release_minute() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.release_minute)
  return _internal_release_minute();
}
inline void VersionReply::set_release_minute(::uint32_t value) {
  _internal_set_release_minute(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.release_minute)
}
inline ::uint32_t VersionReply::_internal_release_minute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.release_minute_;
}
inline void VersionReply::_internal_set_release_minute(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.release_minute_ = value;
}

// optional uint32 api_major = 6;
inline bool VersionReply::has_api_major() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void VersionReply::clear_api_major() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.api_major_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t VersionReply::api_major() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.api_major)
  return _internal_api_major();
}
inline void VersionReply::set_api_major(::uint32_t value) {
  _internal_set_api_major(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.api_major)
}
inline ::uint32_t VersionReply::_internal_api_major() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.api_major_;
}
inline void VersionReply::_internal_set_api_major(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.api_major_ = value;
}

// optional uint32 api_minor = 7;
inline bool VersionReply::has_api_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void VersionReply::clear_api_minor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.api_minor_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t VersionReply::api_minor() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.api_minor)
  return _internal_api_minor();
}
inline void VersionReply::set_api_minor(::uint32_t value) {
  _internal_set_api_minor(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.api_minor)
}
inline ::uint32_t VersionReply::_internal_api_minor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.api_minor_;
}
inline void VersionReply::_internal_set_api_minor(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.api_minor_ = value;
}

// optional uint32 api_patch = 8;
inline bool VersionReply::has_api_patch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void VersionReply::clear_api_patch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.api_patch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t VersionReply::api_patch() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.api_patch)
  return _internal_api_patch();
}
inline void VersionReply::set_api_patch(::uint32_t value) {
  _internal_set_api_patch(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.api_patch)
}
inline ::uint32_t VersionReply::_internal_api_patch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.api_patch_;
}
inline void VersionReply::_internal_set_api_patch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.api_patch_ = value;
}

// optional uint32 component_major = 9;
inline bool VersionReply::has_component_major() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void VersionReply::clear_component_major() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_major_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t VersionReply::component_major() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.component_major)
  return _internal_component_major();
}
inline void VersionReply::set_component_major(::uint32_t value) {
  _internal_set_component_major(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.component_major)
}
inline ::uint32_t VersionReply::_internal_component_major() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_major_;
}
inline void VersionReply::_internal_set_component_major(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.component_major_ = value;
}

// optional uint32 component_minor = 10;
inline bool VersionReply::has_component_minor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void VersionReply::clear_component_minor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_minor_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t VersionReply::component_minor() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.component_minor)
  return _internal_component_minor();
}
inline void VersionReply::set_component_minor(::uint32_t value) {
  _internal_set_component_minor(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.component_minor)
}
inline ::uint32_t VersionReply::_internal_component_minor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_minor_;
}
inline void VersionReply::_internal_set_component_minor(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.component_minor_ = value;
}

// optional uint32 component_patch = 11;
inline bool VersionReply::has_component_patch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void VersionReply::clear_component_patch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.component_patch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint32_t VersionReply::component_patch() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.VersionReply.component_patch)
  return _internal_component_patch();
}
inline void VersionReply::set_component_patch(::uint32_t value) {
  _internal_set_component_patch(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.VersionReply.component_patch)
}
inline ::uint32_t VersionReply::_internal_component_patch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.component_patch_;
}
inline void VersionReply::_internal_set_component_patch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.component_patch_ = value;
}

// -------------------------------------------------------------------

// GetAuthStatusRequest

// -------------------------------------------------------------------

// AuthenticateByPasswordRequest

// required string uid = 1;
inline bool AuthenticateByPasswordRequest::has_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AuthenticateByPasswordRequest::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AuthenticateByPasswordRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.AuthenticateByPasswordRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateByPasswordRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.AuthenticateByPasswordRequest.uid)
}
inline std::string* AuthenticateByPasswordRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.AuthenticateByPasswordRequest.uid)
  return _s;
}
inline const std::string& AuthenticateByPasswordRequest::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_.Get();
}
inline void AuthenticateByPasswordRequest::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* AuthenticateByPasswordRequest::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* AuthenticateByPasswordRequest::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.AuthenticateByPasswordRequest.uid)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.uid_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uid_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AuthenticateByPasswordRequest::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uid_.IsDefault()) {
          _impl_.uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.AuthenticateByPasswordRequest.uid)
}

// required string password = 2;
inline bool AuthenticateByPasswordRequest::has_password() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AuthenticateByPasswordRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AuthenticateByPasswordRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.AuthenticateByPasswordRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateByPasswordRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.AuthenticateByPasswordRequest.password)
}
inline std::string* AuthenticateByPasswordRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.AuthenticateByPasswordRequest.password)
  return _s;
}
inline const std::string& AuthenticateByPasswordRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void AuthenticateByPasswordRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* AuthenticateByPasswordRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* AuthenticateByPasswordRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.AuthenticateByPasswordRequest.password)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.password_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AuthenticateByPasswordRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.AuthenticateByPasswordRequest.password)
}

// -------------------------------------------------------------------

// AuthenticateByTokenRequest

// required string token = 1;
inline bool AuthenticateByTokenRequest::has_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AuthenticateByTokenRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AuthenticateByTokenRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.AuthenticateByTokenRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticateByTokenRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.AuthenticateByTokenRequest.token)
}
inline std::string* AuthenticateByTokenRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.AuthenticateByTokenRequest.token)
  return _s;
}
inline const std::string& AuthenticateByTokenRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void AuthenticateByTokenRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* AuthenticateByTokenRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* AuthenticateByTokenRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.AuthenticateByTokenRequest.token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.token_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AuthenticateByTokenRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.AuthenticateByTokenRequest.token)
}

// -------------------------------------------------------------------

// AuthStatusReply

// required bool auth = 1;
inline bool AuthStatusReply::has_auth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AuthStatusReply::clear_auth() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auth_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool AuthStatusReply::auth() const {
  // @@protoc_insertion_point(field_get:SDMS.Anon.AuthStatusReply.auth)
  return _internal_auth();
}
inline void AuthStatusReply::set_auth(bool value) {
  _internal_set_auth(value);
  // @@protoc_insertion_point(field_set:SDMS.Anon.AuthStatusReply.auth)
}
inline bool AuthStatusReply::_internal_auth() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auth_;
}
inline void AuthStatusReply::_internal_set_auth(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.auth_ = value;
}

// optional string uid = 2;
inline bool AuthStatusReply::has_uid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AuthStatusReply::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AuthStatusReply::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.AuthStatusReply.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthStatusReply::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.AuthStatusReply.uid)
}
inline std::string* AuthStatusReply::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.AuthStatusReply.uid)
  return _s;
}
inline const std::string& AuthStatusReply::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_.Get();
}
inline void AuthStatusReply::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* AuthStatusReply::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* AuthStatusReply::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.AuthStatusReply.uid)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.uid_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uid_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AuthStatusReply::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uid_.IsDefault()) {
          _impl_.uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.AuthStatusReply.uid)
}

// -------------------------------------------------------------------

// DailyMessageRequest

// -------------------------------------------------------------------

// DailyMessageReply

// optional string message = 1;
inline bool DailyMessageReply::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DailyMessageReply::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DailyMessageReply::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SDMS.Anon.DailyMessageReply.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DailyMessageReply::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SDMS.Anon.DailyMessageReply.message)
}
inline std::string* DailyMessageReply::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:SDMS.Anon.DailyMessageReply.message)
  return _s;
}
inline const std::string& DailyMessageReply::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void DailyMessageReply::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* DailyMessageReply::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* DailyMessageReply::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SDMS.Anon.DailyMessageReply.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void DailyMessageReply::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SDMS.Anon.DailyMessageReply.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Anon
}  // namespace SDMS


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::SDMS::Anon::Protocol> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::SDMS::Anon::Protocol>() {
  return ::SDMS::Anon::Protocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_SDMS_5fAnon_2eproto_2epb_2eh
