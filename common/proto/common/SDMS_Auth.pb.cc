// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SDMS_Auth.proto

#include "SDMS_Auth.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace SDMS {
namespace Auth {

inline constexpr UserViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UserViewRequest::UserViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserViewRequestDefaultTypeInternal() {}
  union {
    UserViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserViewRequestDefaultTypeInternal _UserViewRequest_default_instance_;

inline constexpr UserUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UserUpdateRequest::UserUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserUpdateRequestDefaultTypeInternal() {}
  union {
    UserUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserUpdateRequestDefaultTypeInternal _UserUpdateRequest_default_instance_;

inline constexpr UserSetRecentEPRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ep_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserSetRecentEPRequest::UserSetRecentEPRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserSetRecentEPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSetRecentEPRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSetRecentEPRequestDefaultTypeInternal() {}
  union {
    UserSetRecentEPRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSetRecentEPRequestDefaultTypeInternal _UserSetRecentEPRequest_default_instance_;

inline constexpr UserSetAccessTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        refresh_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_in_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserSetAccessTokenRequest::UserSetAccessTokenRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserSetAccessTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSetAccessTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSetAccessTokenRequestDefaultTypeInternal() {}
  union {
    UserSetAccessTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSetAccessTokenRequestDefaultTypeInternal _UserSetAccessTokenRequest_default_instance_;

inline constexpr UserListCollabRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserListCollabRequest::UserListCollabRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserListCollabRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListCollabRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListCollabRequestDefaultTypeInternal() {}
  union {
    UserListCollabRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListCollabRequestDefaultTypeInternal _UserListCollabRequest_default_instance_;

inline constexpr UserListAllRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserListAllRequest::UserListAllRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserListAllRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListAllRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListAllRequestDefaultTypeInternal() {}
  union {
    UserListAllRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListAllRequestDefaultTypeInternal _UserListAllRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR UserGetRecentEPRequest::UserGetRecentEPRequest(::_pbi::ConstantInitialized) {}
struct UserGetRecentEPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserGetRecentEPRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserGetRecentEPRequestDefaultTypeInternal() {}
  union {
    UserGetRecentEPRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserGetRecentEPRequestDefaultTypeInternal _UserGetRecentEPRequest_default_instance_;

inline constexpr UserGetRecentEPReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ep_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserGetRecentEPReply::UserGetRecentEPReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserGetRecentEPReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserGetRecentEPReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserGetRecentEPReplyDefaultTypeInternal() {}
  union {
    UserGetRecentEPReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserGetRecentEPReplyDefaultTypeInternal _UserGetRecentEPReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR UserGetAccessTokenRequest::UserGetAccessTokenRequest(::_pbi::ConstantInitialized) {}
struct UserGetAccessTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserGetAccessTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserGetAccessTokenRequestDefaultTypeInternal() {}
  union {
    UserGetAccessTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserGetAccessTokenRequestDefaultTypeInternal _UserGetAccessTokenRequest_default_instance_;

inline constexpr UserFindByUUIDsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uuid_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserFindByUUIDsRequest::UserFindByUUIDsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserFindByUUIDsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserFindByUUIDsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserFindByUUIDsRequestDefaultTypeInternal() {}
  union {
    UserFindByUUIDsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserFindByUUIDsRequestDefaultTypeInternal _UserFindByUUIDsRequest_default_instance_;

inline constexpr UserFindByNameUIDRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserFindByNameUIDRequest::UserFindByNameUIDRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserFindByNameUIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserFindByNameUIDRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserFindByNameUIDRequestDefaultTypeInternal() {}
  union {
    UserFindByNameUIDRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserFindByNameUIDRequestDefaultTypeInternal _UserFindByNameUIDRequest_default_instance_;

inline constexpr UserCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uuid_{},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UserCreateRequest::UserCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserCreateRequestDefaultTypeInternal() {}
  union {
    UserCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserCreateRequestDefaultTypeInternal _UserCreateRequest_default_instance_;

inline constexpr UserAccessTokenReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_in_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserAccessTokenReply::UserAccessTokenReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserAccessTokenReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserAccessTokenReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserAccessTokenReplyDefaultTypeInternal() {}
  union {
    UserAccessTokenReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserAccessTokenReplyDefaultTypeInternal _UserAccessTokenReply_default_instance_;

inline constexpr TopicViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TopicViewRequest::TopicViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicViewRequestDefaultTypeInternal() {}
  union {
    TopicViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicViewRequestDefaultTypeInternal _TopicViewRequest_default_instance_;

inline constexpr TopicSearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        phrase_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TopicSearchRequest::TopicSearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicSearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicSearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicSearchRequestDefaultTypeInternal() {}
  union {
    TopicSearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicSearchRequestDefaultTypeInternal _TopicSearchRequest_default_instance_;

inline constexpr TopicListTopicsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        topic_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TopicListTopicsRequest::TopicListTopicsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicListTopicsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicListTopicsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicListTopicsRequestDefaultTypeInternal() {}
  union {
    TopicListTopicsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicListTopicsRequestDefaultTypeInternal _TopicListTopicsRequest_default_instance_;

inline constexpr TaskViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TaskViewRequest::TaskViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaskViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskViewRequestDefaultTypeInternal() {}
  union {
    TaskViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskViewRequestDefaultTypeInternal _TaskViewRequest_default_instance_;

inline constexpr TaskListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{},
        since_{0u},
        from_{0u},
        to_{0u},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TaskListRequest::TaskListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaskListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskListRequestDefaultTypeInternal() {}
  union {
    TaskListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskListRequestDefaultTypeInternal _TaskListRequest_default_instance_;

inline constexpr TagSearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TagSearchRequest::TagSearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TagSearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TagSearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TagSearchRequestDefaultTypeInternal() {}
  union {
    TagSearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TagSearchRequestDefaultTypeInternal _TagSearchRequest_default_instance_;

inline constexpr TagListByCountRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TagListByCountRequest::TagListByCountRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TagListByCountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TagListByCountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TagListByCountRequestDefaultTypeInternal() {}
  union {
    TagListByCountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TagListByCountRequestDefaultTypeInternal _TagListByCountRequest_default_instance_;

inline constexpr SearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        cat_tags_{},
        coll_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        meta_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mode_{static_cast< ::SDMS::SearchMode >(0)},
        from_{0u},
        to_{0u},
        published_{false},
        meta_err_{false},
        sort_rev_{false},
        sort_{static_cast< ::SDMS::SortOption >(0)},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SearchRequest::SearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchRequestDefaultTypeInternal() {}
  union {
    SearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;

inline constexpr SchemaViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resolve_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaViewRequest::SchemaViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaViewRequestDefaultTypeInternal() {}
  union {
    SchemaViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaViewRequestDefaultTypeInternal _SchemaViewRequest_default_instance_;

inline constexpr SchemaUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_new_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_{false},
        sys_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaUpdateRequest::SchemaUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaUpdateRequestDefaultTypeInternal() {}
  union {
    SchemaUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaUpdateRequestDefaultTypeInternal _SchemaUpdateRequest_default_instance_;

inline constexpr SchemaSearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sort_{static_cast< ::SDMS::SortOption >(0)},
        sort_rev_{false},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaSearchRequest::SchemaSearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaSearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaSearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaSearchRequestDefaultTypeInternal() {}
  union {
    SchemaSearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaSearchRequestDefaultTypeInternal _SchemaSearchRequest_default_instance_;

inline constexpr SchemaReviseRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_{false},
        sys_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaReviseRequest::SchemaReviseRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaReviseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaReviseRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaReviseRequestDefaultTypeInternal() {}
  union {
    SchemaReviseRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaReviseRequestDefaultTypeInternal _SchemaReviseRequest_default_instance_;

inline constexpr SchemaDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SchemaDeleteRequest::SchemaDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaDeleteRequestDefaultTypeInternal() {}
  union {
    SchemaDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaDeleteRequestDefaultTypeInternal _SchemaDeleteRequest_default_instance_;

inline constexpr SchemaCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_{false},
        sys_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaCreateRequest::SchemaCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaCreateRequestDefaultTypeInternal() {}
  union {
    SchemaCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaCreateRequestDefaultTypeInternal _SchemaCreateRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RevokeCredentialsRequest::RevokeCredentialsRequest(::_pbi::ConstantInitialized) {}
struct RevokeCredentialsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevokeCredentialsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevokeCredentialsRequestDefaultTypeInternal() {}
  union {
    RevokeCredentialsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevokeCredentialsRequestDefaultTypeInternal _RevokeCredentialsRequest_default_instance_;

inline constexpr RepoViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoViewRequest::RepoViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoViewRequestDefaultTypeInternal() {}
  union {
    RepoViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoViewRequestDefaultTypeInternal _RepoViewRequest_default_instance_;

inline constexpr RepoViewAllocationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoViewAllocationRequest::RepoViewAllocationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoViewAllocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoViewAllocationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoViewAllocationRequestDefaultTypeInternal() {}
  union {
    RepoViewAllocationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoViewAllocationRequestDefaultTypeInternal _RepoViewAllocationRequest_default_instance_;

inline constexpr RepoUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exp_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR RepoUpdateRequest::RepoUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoUpdateRequestDefaultTypeInternal() {}
  union {
    RepoUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoUpdateRequestDefaultTypeInternal _RepoUpdateRequest_default_instance_;

inline constexpr RepoPathDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoPathDeleteRequest::RepoPathDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoPathDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoPathDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoPathDeleteRequestDefaultTypeInternal() {}
  union {
    RepoPathDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoPathDeleteRequestDefaultTypeInternal _RepoPathDeleteRequest_default_instance_;

inline constexpr RepoPathCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoPathCreateRequest::RepoPathCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoPathCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoPathCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoPathCreateRequestDefaultTypeInternal() {}
  union {
    RepoPathCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoPathCreateRequestDefaultTypeInternal _RepoPathCreateRequest_default_instance_;

inline constexpr RepoListSubjectAllocationsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stats_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RepoListSubjectAllocationsRequest::RepoListSubjectAllocationsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoListSubjectAllocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoListSubjectAllocationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoListSubjectAllocationsRequestDefaultTypeInternal() {}
  union {
    RepoListSubjectAllocationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoListSubjectAllocationsRequestDefaultTypeInternal _RepoListSubjectAllocationsRequest_default_instance_;

inline constexpr RepoListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{false},
        all_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RepoListRequest::RepoListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoListRequestDefaultTypeInternal() {}
  union {
    RepoListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoListRequestDefaultTypeInternal _RepoListRequest_default_instance_;

inline constexpr RepoListObjectAllocationsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoListObjectAllocationsRequest::RepoListObjectAllocationsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoListObjectAllocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoListObjectAllocationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoListObjectAllocationsRequestDefaultTypeInternal() {}
  union {
    RepoListObjectAllocationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoListObjectAllocationsRequestDefaultTypeInternal _RepoListObjectAllocationsRequest_default_instance_;

inline constexpr RepoListAllocationsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoListAllocationsRequest::RepoListAllocationsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoListAllocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoListAllocationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoListAllocationsRequestDefaultTypeInternal() {}
  union {
    RepoListAllocationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoListAllocationsRequestDefaultTypeInternal _RepoListAllocationsRequest_default_instance_;

inline constexpr RepoDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoDeleteRequest::RepoDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDeleteRequestDefaultTypeInternal() {}
  union {
    RepoDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDeleteRequestDefaultTypeInternal _RepoDeleteRequest_default_instance_;

inline constexpr RepoCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exp_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR RepoCreateRequest::RepoCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoCreateRequestDefaultTypeInternal() {}
  union {
    RepoCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoCreateRequestDefaultTypeInternal _RepoCreateRequest_default_instance_;

inline constexpr RepoCalcSizeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{},
        recurse_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RepoCalcSizeRequest::RepoCalcSizeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoCalcSizeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoCalcSizeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoCalcSizeRequestDefaultTypeInternal() {}
  union {
    RepoCalcSizeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoCalcSizeRequestDefaultTypeInternal _RepoCalcSizeRequest_default_instance_;

inline constexpr RepoAuthzRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoAuthzRequest::RepoAuthzRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAuthzRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAuthzRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAuthzRequestDefaultTypeInternal() {}
  union {
    RepoAuthzRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAuthzRequestDefaultTypeInternal _RepoAuthzRequest_default_instance_;

inline constexpr RepoAllocationStatsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationStatsRequest::RepoAllocationStatsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationStatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationStatsRequestDefaultTypeInternal() {}
  union {
    RepoAllocationStatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationStatsRequestDefaultTypeInternal _RepoAllocationStatsRequest_default_instance_;

inline constexpr RepoAllocationSetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_limit_{::uint64_t{0u}},
        rec_limit_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationSetRequest::RepoAllocationSetRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationSetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationSetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationSetRequestDefaultTypeInternal() {}
  union {
    RepoAllocationSetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationSetRequestDefaultTypeInternal _RepoAllocationSetRequest_default_instance_;

inline constexpr RepoAllocationSetDefaultRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationSetDefaultRequest::RepoAllocationSetDefaultRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationSetDefaultRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationSetDefaultRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationSetDefaultRequestDefaultTypeInternal() {}
  union {
    RepoAllocationSetDefaultRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationSetDefaultRequestDefaultTypeInternal _RepoAllocationSetDefaultRequest_default_instance_;

inline constexpr RepoAllocationDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationDeleteRequest::RepoAllocationDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationDeleteRequestDefaultTypeInternal() {}
  union {
    RepoAllocationDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationDeleteRequestDefaultTypeInternal _RepoAllocationDeleteRequest_default_instance_;

inline constexpr RepoAllocationCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_limit_{::uint64_t{0u}},
        rec_limit_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationCreateRequest::RepoAllocationCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationCreateRequestDefaultTypeInternal() {}
  union {
    RepoAllocationCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationCreateRequestDefaultTypeInternal _RepoAllocationCreateRequest_default_instance_;

inline constexpr RecordViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordViewRequest::RecordViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordViewRequestDefaultTypeInternal() {}
  union {
    RecordViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordViewRequestDefaultTypeInternal _RecordViewRequest_default_instance_;

inline constexpr RecordUpdateBatchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        records_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RecordUpdateBatchRequest::RecordUpdateBatchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordUpdateBatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordUpdateBatchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordUpdateBatchRequestDefaultTypeInternal() {}
  union {
    RecordUpdateBatchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordUpdateBatchRequestDefaultTypeInternal _RecordUpdateBatchRequest_default_instance_;

inline constexpr RecordOwnerChangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{},
        coll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        repo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proj_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        check_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordOwnerChangeRequest::RecordOwnerChangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordOwnerChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordOwnerChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordOwnerChangeRequestDefaultTypeInternal() {}
  union {
    RecordOwnerChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordOwnerChangeRequestDefaultTypeInternal _RecordOwnerChangeRequest_default_instance_;

inline constexpr RecordLockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{},
        lock_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordLockRequest::RecordLockRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordLockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordLockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordLockRequestDefaultTypeInternal() {}
  union {
    RecordLockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordLockRequestDefaultTypeInternal _RecordLockRequest_default_instance_;

inline constexpr RecordListByAllocRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RecordListByAllocRequest::RecordListByAllocRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordListByAllocRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordListByAllocRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordListByAllocRequestDefaultTypeInternal() {}
  union {
    RecordListByAllocRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordListByAllocRequestDefaultTypeInternal _RecordListByAllocRequest_default_instance_;

inline constexpr RecordGetDependencyGraphRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RecordGetDependencyGraphRequest::RecordGetDependencyGraphRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordGetDependencyGraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordGetDependencyGraphRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordGetDependencyGraphRequestDefaultTypeInternal() {}
  union {
    RecordGetDependencyGraphRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordGetDependencyGraphRequestDefaultTypeInternal _RecordGetDependencyGraphRequest_default_instance_;

inline constexpr RecordExportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordExportRequest::RecordExportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordExportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordExportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordExportRequestDefaultTypeInternal() {}
  union {
    RecordExportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordExportRequestDefaultTypeInternal _RecordExportRequest_default_instance_;

inline constexpr RecordExportReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : record_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordExportReply::RecordExportReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordExportReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordExportReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordExportReplyDefaultTypeInternal() {}
  union {
    RecordExportReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordExportReplyDefaultTypeInternal _RecordExportReply_default_instance_;

inline constexpr RecordDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordDeleteRequest::RecordDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDeleteRequestDefaultTypeInternal() {}
  union {
    RecordDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDeleteRequestDefaultTypeInternal _RecordDeleteRequest_default_instance_;

inline constexpr RecordCreateBatchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        records_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RecordCreateBatchRequest::RecordCreateBatchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordCreateBatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordCreateBatchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordCreateBatchRequestDefaultTypeInternal() {}
  union {
    RecordCreateBatchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordCreateBatchRequestDefaultTypeInternal _RecordCreateBatchRequest_default_instance_;

inline constexpr RecordAllocChangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{},
        repo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proj_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        check_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordAllocChangeRequest::RecordAllocChangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordAllocChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordAllocChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordAllocChangeRequestDefaultTypeInternal() {}
  union {
    RecordAllocChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordAllocChangeRequestDefaultTypeInternal _RecordAllocChangeRequest_default_instance_;

inline constexpr QueryViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR QueryViewRequest::QueryViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryViewRequestDefaultTypeInternal() {}
  union {
    QueryViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryViewRequestDefaultTypeInternal _QueryViewRequest_default_instance_;

inline constexpr QueryListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR QueryListRequest::QueryListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryListRequestDefaultTypeInternal() {}
  union {
    QueryListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryListRequestDefaultTypeInternal _QueryListRequest_default_instance_;

inline constexpr QueryExecRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR QueryExecRequest::QueryExecRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryExecRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryExecRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryExecRequestDefaultTypeInternal() {}
  union {
    QueryExecRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryExecRequestDefaultTypeInternal _QueryExecRequest_default_instance_;

inline constexpr QueryDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDeleteRequest::QueryDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDeleteRequestDefaultTypeInternal() {}
  union {
    QueryDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDeleteRequestDefaultTypeInternal _QueryDeleteRequest_default_instance_;

inline constexpr ProjectViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ProjectViewRequest::ProjectViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectViewRequestDefaultTypeInternal() {}
  union {
    ProjectViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectViewRequestDefaultTypeInternal _ProjectViewRequest_default_instance_;

inline constexpr ProjectUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        member_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_set_{false},
        member_set_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectUpdateRequest::ProjectUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectUpdateRequestDefaultTypeInternal() {}
  union {
    ProjectUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectUpdateRequestDefaultTypeInternal _ProjectUpdateRequest_default_instance_;

inline constexpr ProjectSearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scope_{},
        text_query_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ProjectSearchRequest::ProjectSearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectSearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectSearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectSearchRequestDefaultTypeInternal() {}
  union {
    ProjectSearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectSearchRequestDefaultTypeInternal _ProjectSearchRequest_default_instance_;

inline constexpr ProjectListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        as_owner_{false},
        as_admin_{false},
        as_member_{false},
        sort_rev_{false},
        sort_{static_cast< ::SDMS::SortOption >(0)},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectListRequest::ProjectListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectListRequestDefaultTypeInternal() {}
  union {
    ProjectListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectListRequestDefaultTypeInternal _ProjectListRequest_default_instance_;

inline constexpr ProjectGetRoleRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ProjectGetRoleRequest::ProjectGetRoleRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectGetRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectGetRoleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectGetRoleRequestDefaultTypeInternal() {}
  union {
    ProjectGetRoleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectGetRoleRequestDefaultTypeInternal _ProjectGetRoleRequest_default_instance_;

inline constexpr ProjectGetRoleReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        role_{static_cast< ::SDMS::ProjectRole >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectGetRoleReply::ProjectGetRoleReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectGetRoleReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectGetRoleReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectGetRoleReplyDefaultTypeInternal() {}
  union {
    ProjectGetRoleReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectGetRoleReplyDefaultTypeInternal _ProjectGetRoleReply_default_instance_;

inline constexpr ProjectDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectDeleteRequest::ProjectDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectDeleteRequestDefaultTypeInternal() {}
  union {
    ProjectDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectDeleteRequestDefaultTypeInternal _ProjectDeleteRequest_default_instance_;

inline constexpr ProjectCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        member_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ProjectCreateRequest::ProjectCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectCreateRequestDefaultTypeInternal() {}
  union {
    ProjectCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectCreateRequestDefaultTypeInternal _ProjectCreateRequest_default_instance_;

inline constexpr NoteViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR NoteViewRequest::NoteViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteViewRequestDefaultTypeInternal() {}
  union {
    NoteViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteViewRequestDefaultTypeInternal _NoteViewRequest_default_instance_;

inline constexpr NoteUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_type_{static_cast< ::SDMS::NoteType >(0)},
        new_state_{static_cast< ::SDMS::NoteState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NoteUpdateRequest::NoteUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteUpdateRequestDefaultTypeInternal() {}
  union {
    NoteUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteUpdateRequestDefaultTypeInternal _NoteUpdateRequest_default_instance_;

inline constexpr NoteListBySubjectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR NoteListBySubjectRequest::NoteListBySubjectRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteListBySubjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteListBySubjectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteListBySubjectRequestDefaultTypeInternal() {}
  union {
    NoteListBySubjectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteListBySubjectRequestDefaultTypeInternal _NoteListBySubjectRequest_default_instance_;

inline constexpr NoteCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::SDMS::NoteType >(0)},
        activate_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NoteCreateRequest::NoteCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteCreateRequestDefaultTypeInternal() {}
  union {
    NoteCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteCreateRequestDefaultTypeInternal _NoteCreateRequest_default_instance_;

inline constexpr NoteCommentEditRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_idx_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NoteCommentEditRequest::NoteCommentEditRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteCommentEditRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteCommentEditRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteCommentEditRequestDefaultTypeInternal() {}
  union {
    NoteCommentEditRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteCommentEditRequestDefaultTypeInternal _NoteCommentEditRequest_default_instance_;

inline constexpr MetadataValidateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MetadataValidateRequest::MetadataValidateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MetadataValidateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetadataValidateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetadataValidateRequestDefaultTypeInternal() {}
  union {
    MetadataValidateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetadataValidateRequestDefaultTypeInternal _MetadataValidateRequest_default_instance_;

inline constexpr MetadataValidateReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errors_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MetadataValidateReply::MetadataValidateReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MetadataValidateReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetadataValidateReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetadataValidateReplyDefaultTypeInternal() {}
  union {
    MetadataValidateReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetadataValidateReplyDefaultTypeInternal _MetadataValidateReply_default_instance_;

inline constexpr GroupViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GroupViewRequest::GroupViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupViewRequestDefaultTypeInternal() {}
  union {
    GroupViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupViewRequestDefaultTypeInternal _GroupViewRequest_default_instance_;

inline constexpr GroupUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        add_uid_{},
        rem_uid_{},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GroupUpdateRequest::GroupUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupUpdateRequestDefaultTypeInternal() {}
  union {
    GroupUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupUpdateRequestDefaultTypeInternal _GroupUpdateRequest_default_instance_;

inline constexpr GroupListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GroupListRequest::GroupListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupListRequestDefaultTypeInternal() {}
  union {
    GroupListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupListRequestDefaultTypeInternal _GroupListRequest_default_instance_;

inline constexpr GroupDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GroupDeleteRequest::GroupDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDeleteRequestDefaultTypeInternal() {}
  union {
    GroupDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDeleteRequestDefaultTypeInternal _GroupDeleteRequest_default_instance_;

inline constexpr GetPermsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        perms_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GetPermsRequest::GetPermsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPermsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermsRequestDefaultTypeInternal() {}
  union {
    GetPermsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermsRequestDefaultTypeInternal _GetPermsRequest_default_instance_;

inline constexpr GetPermsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        granted_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GetPermsReply::GetPermsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPermsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermsReplyDefaultTypeInternal() {}
  union {
    GetPermsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermsReplyDefaultTypeInternal _GetPermsReply_default_instance_;

inline constexpr GenerateCredentialsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateCredentialsRequest::GenerateCredentialsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateCredentialsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateCredentialsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateCredentialsRequestDefaultTypeInternal() {}
  union {
    GenerateCredentialsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateCredentialsRequestDefaultTypeInternal _GenerateCredentialsRequest_default_instance_;

inline constexpr GenerateCredentialsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pub_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priv_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GenerateCredentialsReply::GenerateCredentialsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateCredentialsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateCredentialsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateCredentialsReplyDefaultTypeInternal() {}
  union {
    GenerateCredentialsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateCredentialsReplyDefaultTypeInternal _GenerateCredentialsReply_default_instance_;

inline constexpr DataPutRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypt_{static_cast< ::SDMS::Encryption >(0)},
        check_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DataPutRequest::DataPutRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataPutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataPutRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataPutRequestDefaultTypeInternal() {}
  union {
    DataPutRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataPutRequestDefaultTypeInternal _DataPutRequest_default_instance_;

inline constexpr DataPathRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DataPathRequest::DataPathRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataPathRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataPathRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataPathRequestDefaultTypeInternal() {}
  union {
    DataPathRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataPathRequestDefaultTypeInternal _DataPathRequest_default_instance_;

inline constexpr DataPathReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DataPathReply::DataPathReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataPathReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataPathReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataPathReplyDefaultTypeInternal() {}
  union {
    DataPathReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataPathReplyDefaultTypeInternal _DataPathReply_default_instance_;

inline constexpr DataGetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encrypt_{static_cast< ::SDMS::Encryption >(0)},
        orig_fname_{false},
        check_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DataGetRequest::DataGetRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataGetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataGetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataGetRequestDefaultTypeInternal() {}
  union {
    DataGetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataGetRequestDefaultTypeInternal _DataGetRequest_default_instance_;

inline constexpr DataDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataDeleteRequest::DataDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataDeleteRequestDefaultTypeInternal() {}
  union {
    DataDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataDeleteRequestDefaultTypeInternal _DataDeleteRequest_default_instance_;

inline constexpr CollWriteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        add_{},
        rem_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rem_all_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CollWriteRequest::CollWriteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollWriteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollWriteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollWriteRequestDefaultTypeInternal() {}
  union {
    CollWriteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollWriteRequestDefaultTypeInternal _CollWriteRequest_default_instance_;

inline constexpr CollViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CollViewRequest::CollViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollViewRequestDefaultTypeInternal() {}
  union {
    CollViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollViewRequestDefaultTypeInternal _CollViewRequest_default_instance_;

inline constexpr CollUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tags_clear_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CollUpdateRequest::CollUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollUpdateRequestDefaultTypeInternal() {}
  union {
    CollUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollUpdateRequestDefaultTypeInternal _CollUpdateRequest_default_instance_;

inline constexpr CollReadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_{false},
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CollReadRequest::CollReadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollReadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollReadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollReadRequestDefaultTypeInternal() {}
  union {
    CollReadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollReadRequestDefaultTypeInternal _CollReadRequest_default_instance_;

inline constexpr CollMoveRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{},
        src_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dst_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CollMoveRequest::CollMoveRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollMoveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollMoveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollMoveRequestDefaultTypeInternal() {}
  union {
    CollMoveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollMoveRequestDefaultTypeInternal _CollMoveRequest_default_instance_;

inline constexpr CollListPublishedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u},
        count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CollListPublishedRequest::CollListPublishedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollListPublishedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollListPublishedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollListPublishedRequestDefaultTypeInternal() {}
  union {
    CollListPublishedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollListPublishedRequestDefaultTypeInternal _CollListPublishedRequest_default_instance_;

inline constexpr CollGetParentsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inclusive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CollGetParentsRequest::CollGetParentsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollGetParentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollGetParentsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollGetParentsRequestDefaultTypeInternal() {}
  union {
    CollGetParentsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollGetParentsRequestDefaultTypeInternal _CollGetParentsRequest_default_instance_;

inline constexpr CollGetOffsetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_sz_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CollGetOffsetRequest::CollGetOffsetRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollGetOffsetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollGetOffsetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollGetOffsetRequestDefaultTypeInternal() {}
  union {
    CollGetOffsetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollGetOffsetRequestDefaultTypeInternal _CollGetOffsetRequest_default_instance_;

inline constexpr CollGetOffsetReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CollGetOffsetReply::CollGetOffsetReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollGetOffsetReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollGetOffsetReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollGetOffsetReplyDefaultTypeInternal() {}
  union {
    CollGetOffsetReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollGetOffsetReplyDefaultTypeInternal _CollGetOffsetReply_default_instance_;

inline constexpr CollDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CollDeleteRequest::CollDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollDeleteRequestDefaultTypeInternal() {}
  union {
    CollDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollDeleteRequestDefaultTypeInternal _CollDeleteRequest_default_instance_;

inline constexpr CollCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CollCreateRequest::CollCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollCreateRequestDefaultTypeInternal() {}
  union {
    CollCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollCreateRequestDefaultTypeInternal _CollCreateRequest_default_instance_;

inline constexpr CheckPermsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        perms_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CheckPermsRequest::CheckPermsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckPermsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermsRequestDefaultTypeInternal() {}
  union {
    CheckPermsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermsRequestDefaultTypeInternal _CheckPermsRequest_default_instance_;

inline constexpr CheckPermsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        granted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CheckPermsReply::CheckPermsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckPermsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermsReplyDefaultTypeInternal() {}
  union {
    CheckPermsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermsReplyDefaultTypeInternal _CheckPermsReply_default_instance_;

inline constexpr ACLViewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ACLViewRequest::ACLViewRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLViewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLViewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLViewRequestDefaultTypeInternal() {}
  union {
    ACLViewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLViewRequestDefaultTypeInternal _ACLViewRequest_default_instance_;

inline constexpr ACLUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rules_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ACLUpdateRequest::ACLUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLUpdateRequestDefaultTypeInternal() {}
  union {
    ACLUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLUpdateRequestDefaultTypeInternal _ACLUpdateRequest_default_instance_;

inline constexpr ACLSharedListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inc_users_{false},
        inc_projects_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ACLSharedListRequest::ACLSharedListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLSharedListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLSharedListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLSharedListRequestDefaultTypeInternal() {}
  union {
    ACLSharedListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLSharedListRequestDefaultTypeInternal _ACLSharedListRequest_default_instance_;

inline constexpr ACLSharedListItemsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ACLSharedListItemsRequest::ACLSharedListItemsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLSharedListItemsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLSharedListItemsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLSharedListItemsRequestDefaultTypeInternal() {}
  union {
    ACLSharedListItemsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLSharedListItemsRequestDefaultTypeInternal _ACLSharedListItemsRequest_default_instance_;

inline constexpr TopicDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        topic_{},
        offset_{0u},
        count_{0u},
        total_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TopicDataReply::TopicDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicDataReplyDefaultTypeInternal() {}
  union {
    TopicDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicDataReplyDefaultTypeInternal _TopicDataReply_default_instance_;

inline constexpr TaskDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskDataReply::TaskDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaskDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDataReplyDefaultTypeInternal() {}
  union {
    TaskDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDataReplyDefaultTypeInternal _TaskDataReply_default_instance_;

inline constexpr TagDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_{},
        offset_{0u},
        count_{0u},
        total_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TagDataReply::TagDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TagDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TagDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TagDataReplyDefaultTypeInternal() {}
  union {
    TagDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TagDataReplyDefaultTypeInternal _TagDataReply_default_instance_;

inline constexpr SchemaDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        schema_{},
        offset_{0u},
        count_{0u},
        total_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaDataReply::SchemaDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaDataReplyDefaultTypeInternal() {}
  union {
    SchemaDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaDataReplyDefaultTypeInternal _SchemaDataReply_default_instance_;

inline constexpr RepoDataSizeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : size_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoDataSizeReply::RepoDataSizeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDataSizeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDataSizeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDataSizeReplyDefaultTypeInternal() {}
  union {
    RepoDataSizeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDataSizeReplyDefaultTypeInternal _RepoDataSizeReply_default_instance_;

inline constexpr RepoDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : repo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoDataReply::RepoDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDataReplyDefaultTypeInternal() {}
  union {
    RepoDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDataReplyDefaultTypeInternal _RepoDataReply_default_instance_;

inline constexpr RepoDataGetSizeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loc_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoDataGetSizeRequest::RepoDataGetSizeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDataGetSizeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDataGetSizeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDataGetSizeRequestDefaultTypeInternal() {}
  union {
    RepoDataGetSizeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDataGetSizeRequestDefaultTypeInternal _RepoDataGetSizeRequest_default_instance_;

inline constexpr RepoDataDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loc_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoDataDeleteRequest::RepoDataDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDataDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDataDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDataDeleteRequestDefaultTypeInternal() {}
  union {
    RepoDataDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDataDeleteRequestDefaultTypeInternal _RepoDataDeleteRequest_default_instance_;

inline constexpr RepoCalcSizeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stats_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoCalcSizeReply::RepoCalcSizeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoCalcSizeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoCalcSizeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoCalcSizeReplyDefaultTypeInternal() {}
  union {
    RepoCalcSizeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoCalcSizeReplyDefaultTypeInternal _RepoCalcSizeReply_default_instance_;

inline constexpr RepoAllocationStatsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        alloc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationStatsReply::RepoAllocationStatsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationStatsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationStatsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationStatsReplyDefaultTypeInternal() {}
  union {
    RepoAllocationStatsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationStatsReplyDefaultTypeInternal _RepoAllocationStatsReply_default_instance_;

inline constexpr RecordUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        dep_add_{},
        dep_rem_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tags_clear_{false},
        mdset_{false},
        sch_enforce_{false},
        ext_auto_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordUpdateRequest::RecordUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordUpdateRequestDefaultTypeInternal() {}
  union {
    RecordUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordUpdateRequestDefaultTypeInternal _RecordUpdateRequest_default_instance_;

inline constexpr RecordCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        deps_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        repo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        external_{false},
        ext_auto_{false},
        sch_enforce_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RecordCreateRequest::RecordCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordCreateRequestDefaultTypeInternal() {}
  union {
    RecordCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordCreateRequestDefaultTypeInternal _RecordCreateRequest_default_instance_;

inline constexpr RecordAllocChangeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr},
        act_size_{::uint64_t{0u}},
        act_cnt_{0u},
        tot_cnt_{0u},
        data_limit_{::uint64_t{0u}},
        data_size_{::uint64_t{0u}},
        rec_limit_{0u},
        rec_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RecordAllocChangeReply::RecordAllocChangeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordAllocChangeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordAllocChangeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordAllocChangeReplyDefaultTypeInternal() {}
  union {
    RecordAllocChangeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordAllocChangeReplyDefaultTypeInternal _RecordAllocChangeReply_default_instance_;

inline constexpr QueryUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        query_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryUpdateRequest::QueryUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUpdateRequestDefaultTypeInternal() {}
  union {
    QueryUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUpdateRequestDefaultTypeInternal _QueryUpdateRequest_default_instance_;

inline constexpr QueryDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        query_{nullptr},
        ct_{0u},
        ut_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDataReply::QueryDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDataReplyDefaultTypeInternal() {}
  union {
    QueryDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDataReplyDefaultTypeInternal _QueryDataReply_default_instance_;

inline constexpr QueryCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        query_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryCreateRequest::QueryCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCreateRequestDefaultTypeInternal() {}
  union {
    QueryCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCreateRequestDefaultTypeInternal _QueryCreateRequest_default_instance_;

inline constexpr GroupDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : group_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GroupDataReply::GroupDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDataReplyDefaultTypeInternal() {}
  union {
    GroupDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDataReplyDefaultTypeInternal _GroupDataReply_default_instance_;

inline constexpr GroupCreateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GroupCreateRequest::GroupCreateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupCreateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupCreateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupCreateRequestDefaultTypeInternal() {}
  union {
    GroupCreateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupCreateRequestDefaultTypeInternal _GroupCreateRequest_default_instance_;

inline constexpr ACLDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rule_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ACLDataReply::ACLDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLDataReplyDefaultTypeInternal() {}
  union {
    ACLDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLDataReplyDefaultTypeInternal _ACLDataReply_default_instance_;

inline constexpr RepoAllocationsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alloc_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepoAllocationsReply::RepoAllocationsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoAllocationsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoAllocationsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoAllocationsReplyDefaultTypeInternal() {}
  union {
    RepoAllocationsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoAllocationsReplyDefaultTypeInternal _RepoAllocationsReply_default_instance_;

inline constexpr RecordOwnerChangeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        alloc_{},
        task_{nullptr},
        act_size_{::uint64_t{0u}},
        act_cnt_{0u},
        tot_cnt_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RecordOwnerChangeReply::RecordOwnerChangeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordOwnerChangeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordOwnerChangeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordOwnerChangeReplyDefaultTypeInternal() {}
  union {
    RecordOwnerChangeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordOwnerChangeReplyDefaultTypeInternal _RecordOwnerChangeReply_default_instance_;

inline constexpr RecordDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        update_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordDataReply::RecordDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDataReplyDefaultTypeInternal() {}
  union {
    RecordDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDataReplyDefaultTypeInternal _RecordDataReply_default_instance_;

inline constexpr NoteDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : note_{},
        update_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NoteDataReply::NoteDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteDataReplyDefaultTypeInternal() {}
  union {
    NoteDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteDataReplyDefaultTypeInternal _NoteDataReply_default_instance_;

inline constexpr ListingReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{},
        offset_{0u},
        count_{0u},
        total_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ListingReply::ListingReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListingReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListingReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListingReplyDefaultTypeInternal() {}
  union {
    ListingReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListingReplyDefaultTypeInternal _ListingReply_default_instance_;

inline constexpr DataPutReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{nullptr},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DataPutReply::DataPutReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataPutReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataPutReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataPutReplyDefaultTypeInternal() {}
  union {
    DataPutReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataPutReplyDefaultTypeInternal _DataPutReply_default_instance_;

inline constexpr DataGetReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DataGetReply::DataGetReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataGetReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataGetReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataGetReplyDefaultTypeInternal() {}
  union {
    DataGetReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataGetReplyDefaultTypeInternal _DataGetReply_default_instance_;

inline constexpr CollDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : coll_{},
        update_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CollDataReply::CollDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollDataReplyDefaultTypeInternal() {}
  union {
    CollDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollDataReplyDefaultTypeInternal _CollDataReply_default_instance_;

inline constexpr UserDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{},
        offset_{0u},
        count_{0u},
        total_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UserDataReply::UserDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDataReplyDefaultTypeInternal() {}
  union {
    UserDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDataReplyDefaultTypeInternal _UserDataReply_default_instance_;

inline constexpr ProjectDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proj_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectDataReply::ProjectDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectDataReplyDefaultTypeInternal() {}
  union {
    ProjectDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectDataReplyDefaultTypeInternal _ProjectDataReply_default_instance_;

inline constexpr CollPathReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CollPathReply::CollPathReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollPathReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollPathReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollPathReplyDefaultTypeInternal() {}
  union {
    CollPathReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollPathReplyDefaultTypeInternal _CollPathReply_default_instance_;
}  // namespace Auth
}  // namespace SDMS
static ::_pb::Metadata file_level_metadata_SDMS_5fAuth_2eproto[136];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_SDMS_5fAuth_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_SDMS_5fAuth_2eproto = nullptr;
const ::uint32_t TableStruct_SDMS_5fAuth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsRequest, _impl_.domain_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsRequest, _impl_.uid_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RevokeCredentialsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsReply, _impl_.pub_key_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GenerateCredentialsReply, _impl_.priv_key_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsRequest, _impl_.perms_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CheckPermsReply, _impl_.granted_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsRequest, _impl_.perms_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GetPermsReply, _impl_.granted_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserViewRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserViewRequest, _impl_.details_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserDataReply, _impl_.total_),
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetAccessTokenRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetAccessTokenRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetAccessTokenRequest, _impl_.access_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetAccessTokenRequest, _impl_.expires_in_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetAccessTokenRequest, _impl_.refresh_),
    0,
    2,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserGetAccessTokenRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserAccessTokenReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserAccessTokenReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserAccessTokenReply, _impl_.access_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserAccessTokenReply, _impl_.expires_in_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserCreateRequest, _impl_.secret_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    5,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByUUIDsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByUUIDsRequest, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByNameUIDRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByNameUIDRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByNameUIDRequest, _impl_.name_uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByNameUIDRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserFindByNameUIDRequest, _impl_.count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserUpdateRequest, _impl_.options_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListAllRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListAllRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListAllRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListAllRequest, _impl_.count_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListCollabRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListCollabRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListCollabRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserListCollabRequest, _impl_.count_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserGetRecentEPRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserGetRecentEPReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserGetRecentEPReply, _impl_.ep_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetRecentEPRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::UserSetRecentEPRequest, _impl_.ep_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ListingReply, _impl_.total_),
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordListByAllocRequest, _impl_.count_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordViewRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordViewRequest, _impl_.details_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordDataReply, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordDataReply, _impl_.update_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.external_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.repo_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.ext_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.ext_auto_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.deps_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.sch_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateRequest, _impl_.sch_enforce_),
    0,
    1,
    ~0u,
    2,
    3,
    4,
    9,
    5,
    6,
    7,
    10,
    ~0u,
    8,
    11,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateBatchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateBatchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordCreateBatchRequest, _impl_.records_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.tags_clear_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.mdset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.sch_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.sch_enforce_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.ext_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.ext_auto_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.dep_add_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateRequest, _impl_.dep_rem_),
    0,
    1,
    2,
    ~0u,
    8,
    3,
    4,
    9,
    5,
    10,
    6,
    7,
    11,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateBatchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateBatchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordUpdateBatchRequest, _impl_.records_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordExportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordExportRequest, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordExportReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordExportReply, _impl_.record_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordLockRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordLockRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordLockRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordLockRequest, _impl_.lock_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordDeleteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordGetDependencyGraphRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordGetDependencyGraphRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordGetDependencyGraphRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _impl_.repo_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _impl_.proj_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeRequest, _impl_.check_),
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.act_cnt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.act_size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.tot_cnt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.data_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.data_size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.rec_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.rec_count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordAllocChangeReply, _impl_.task_),
    2,
    1,
    3,
    4,
    5,
    6,
    7,
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_.coll_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_.repo_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_.proj_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeRequest, _impl_.check_),
    ~0u,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_.act_cnt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_.act_size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_.tot_cnt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_.alloc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RecordOwnerChangeReply, _impl_.task_),
    2,
    1,
    3,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_.encrypt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_.orig_fname_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetRequest, _impl_.check_),
    ~0u,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_.encrypt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_.ext_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutRequest, _impl_.check_),
    0,
    1,
    3,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetReply, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataGetReply, _impl_.task_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutReply, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPutReply, _impl_.task_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataDeleteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathRequest, _impl_.domain_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::DataPathReply, _impl_.path_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.published_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.cat_tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.to_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.coll_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.sch_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.meta_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.meta_err_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.sort_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.sort_rev_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SearchRequest, _impl_.count_),
    6,
    9,
    0,
    1,
    ~0u,
    ~0u,
    7,
    8,
    2,
    3,
    ~0u,
    4,
    5,
    10,
    12,
    11,
    13,
    14,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollViewRequest, _impl_.id_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollDataReply, _impl_.coll_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollDataReply, _impl_.update_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _impl_.details_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollReadRequest, _impl_.count_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.topic_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollCreateRequest, _impl_.tags_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.topic_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollUpdateRequest, _impl_.tags_clear_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    5,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollDeleteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _impl_.add_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _impl_.rem_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollWriteRequest, _impl_.rem_all_),
    0,
    ~0u,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollMoveRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollMoveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollMoveRequest, _impl_.src_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollMoveRequest, _impl_.dst_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollMoveRequest, _impl_.item_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetParentsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetParentsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetParentsRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetParentsRequest, _impl_.inclusive_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollPathReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollPathReply, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetRequest, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetRequest, _impl_.page_sz_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetReply, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetReply, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollGetOffsetReply, _impl_.offset_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollListPublishedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollListPublishedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollListPublishedRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollListPublishedRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::CollListPublishedRequest, _impl_.count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupCreateRequest, _impl_.group_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.gid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.add_uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupUpdateRequest, _impl_.rem_uid_),
    0,
    1,
    2,
    3,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDataReply, _impl_.group_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDeleteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDeleteRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupDeleteRequest, _impl_.gid_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupListRequest, _impl_.uid_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupViewRequest, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::GroupViewRequest, _impl_.gid_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLViewRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLUpdateRequest, _impl_.rules_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListRequest, _impl_.inc_users_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListRequest, _impl_.inc_projects_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListItemsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListItemsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLSharedListItemsRequest, _impl_.owner_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ACLDataReply, _impl_.rule_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectViewRequest, _impl_.id_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectDataReply, _impl_.proj_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectCreateRequest, _impl_.member_),
    0,
    1,
    2,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.admin_set_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.member_set_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectUpdateRequest, _impl_.member_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectDeleteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.as_owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.as_admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.as_member_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.sort_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.sort_rev_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectListRequest, _impl_.count_),
    0,
    1,
    2,
    3,
    5,
    4,
    6,
    7,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectSearchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectSearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectSearchRequest, _impl_.text_query_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectSearchRequest, _impl_.scope_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleRequest, _impl_.subject_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::ProjectGetRoleReply, _impl_.role_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataDeleteRequest, _impl_.loc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataGetSizeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataGetSizeRequest, _impl_.loc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataSizeReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataSizeReply, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathCreateRequest, _impl_.path_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathDeleteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoPathDeleteRequest, _impl_.path_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListRequest, _impl_.details_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListRequest, _impl_.all_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.domain_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.exp_path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.pub_key_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.capacity_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCreateRequest, _impl_.admin_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.domain_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.exp_path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.pub_key_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.capacity_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoUpdateRequest, _impl_.admin_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDeleteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDeleteRequest, _impl_.id_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoDataReply, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeRequest, _impl_.recurse_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeRequest, _impl_.item_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoCalcSizeReply, _impl_.stats_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListAllocationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListAllocationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListAllocationsRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListSubjectAllocationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListSubjectAllocationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListSubjectAllocationsRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListSubjectAllocationsRequest, _impl_.stats_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListObjectAllocationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListObjectAllocationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoListObjectAllocationsRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewAllocationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewAllocationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewAllocationRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoViewAllocationRequest, _impl_.subject_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationsReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationsReply, _impl_.alloc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsRequest, _impl_.subject_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationStatsReply, _impl_.alloc_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _impl_.data_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationCreateRequest, _impl_.rec_limit_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _impl_.data_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetRequest, _impl_.rec_limit_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetDefaultRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetDefaultRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetDefaultRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationSetDefaultRequest, _impl_.subject_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationDeleteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationDeleteRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAllocationDeleteRequest, _impl_.subject_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _impl_.client_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _impl_.file_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::RepoAuthzRequest, _impl_.action_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryCreateRequest, _impl_.query_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryUpdateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryUpdateRequest, _impl_.query_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDeleteRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryListRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryListRequest, _impl_.count_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryViewRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryExecRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryExecRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryExecRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryExecRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryExecRequest, _impl_.count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::QueryDataReply, _impl_.query_),
    0,
    1,
    2,
    4,
    5,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteListBySubjectRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteListBySubjectRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteListBySubjectRequest, _impl_.subject_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteViewRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_.comment_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCreateRequest, _impl_.activate_),
    3,
    0,
    1,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_.comment_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_.new_type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_.new_state_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteUpdateRequest, _impl_.new_title_),
    0,
    1,
    3,
    4,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCommentEditRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCommentEditRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCommentEditRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCommentEditRequest, _impl_.comment_idx_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteCommentEditRequest, _impl_.comment_),
    0,
    2,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteDataReply, _impl_.note_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::NoteDataReply, _impl_.update_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskViewRequest, _impl_.task_id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.since_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.to_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskListRequest, _impl_.count_),
    0,
    1,
    2,
    ~0u,
    3,
    4,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TaskDataReply, _impl_.task_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagSearchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagSearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagSearchRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagSearchRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagSearchRequest, _impl_.count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagListByCountRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagListByCountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagListByCountRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagListByCountRequest, _impl_.count_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TagDataReply, _impl_.total_),
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateRequest, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateRequest, _impl_.sch_id_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::MetadataValidateReply, _impl_.errors_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaViewRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaViewRequest, _impl_.resolve_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.sort_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.sort_rev_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaSearchRequest, _impl_.count_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _impl_.schema_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDataReply, _impl_.total_),
    ~0u,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_.pub_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_.sys_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaCreateRequest, _impl_.def_),
    0,
    1,
    3,
    4,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.id_new_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.pub_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.sys_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaUpdateRequest, _impl_.def_),
    0,
    1,
    2,
    4,
    5,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_.pub_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_.sys_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaReviseRequest, _impl_.def_),
    0,
    1,
    3,
    4,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDeleteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::SchemaDeleteRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicListTopicsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicListTopicsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicListTopicsRequest, _impl_.topic_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicListTopicsRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicListTopicsRequest, _impl_.count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicViewRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicViewRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicViewRequest, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicSearchRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicSearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicSearchRequest, _impl_.phrase_),
    0,
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _impl_.topic_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::Auth::TopicDataReply, _impl_.total_),
    ~0u,
    0,
    1,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::SDMS::Auth::GenerateCredentialsRequest)},
        {12, -1, -1, sizeof(::SDMS::Auth::RevokeCredentialsRequest)},
        {20, 30, -1, sizeof(::SDMS::Auth::GenerateCredentialsReply)},
        {32, 42, -1, sizeof(::SDMS::Auth::CheckPermsRequest)},
        {44, 53, -1, sizeof(::SDMS::Auth::CheckPermsReply)},
        {54, 64, -1, sizeof(::SDMS::Auth::GetPermsRequest)},
        {66, 75, -1, sizeof(::SDMS::Auth::GetPermsReply)},
        {76, 86, -1, sizeof(::SDMS::Auth::UserViewRequest)},
        {88, 100, -1, sizeof(::SDMS::Auth::UserDataReply)},
        {104, 115, -1, sizeof(::SDMS::Auth::UserSetAccessTokenRequest)},
        {118, -1, -1, sizeof(::SDMS::Auth::UserGetAccessTokenRequest)},
        {126, 136, -1, sizeof(::SDMS::Auth::UserAccessTokenReply)},
        {138, 153, -1, sizeof(::SDMS::Auth::UserCreateRequest)},
        {160, -1, -1, sizeof(::SDMS::Auth::UserFindByUUIDsRequest)},
        {169, 180, -1, sizeof(::SDMS::Auth::UserFindByNameUIDRequest)},
        {183, 195, -1, sizeof(::SDMS::Auth::UserUpdateRequest)},
        {199, 209, -1, sizeof(::SDMS::Auth::UserListAllRequest)},
        {211, 221, -1, sizeof(::SDMS::Auth::UserListCollabRequest)},
        {223, -1, -1, sizeof(::SDMS::Auth::UserGetRecentEPRequest)},
        {231, -1, -1, sizeof(::SDMS::Auth::UserGetRecentEPReply)},
        {240, -1, -1, sizeof(::SDMS::Auth::UserSetRecentEPRequest)},
        {249, 261, -1, sizeof(::SDMS::Auth::ListingReply)},
        {265, 277, -1, sizeof(::SDMS::Auth::RecordListByAllocRequest)},
        {281, 291, -1, sizeof(::SDMS::Auth::RecordViewRequest)},
        {293, -1, -1, sizeof(::SDMS::Auth::RecordDataReply)},
        {303, 325, -1, sizeof(::SDMS::Auth::RecordCreateRequest)},
        {339, 348, -1, sizeof(::SDMS::Auth::RecordCreateBatchRequest)},
        {349, 372, -1, sizeof(::SDMS::Auth::RecordUpdateRequest)},
        {387, 396, -1, sizeof(::SDMS::Auth::RecordUpdateBatchRequest)},
        {397, -1, -1, sizeof(::SDMS::Auth::RecordExportRequest)},
        {406, -1, -1, sizeof(::SDMS::Auth::RecordExportReply)},
        {415, 425, -1, sizeof(::SDMS::Auth::RecordLockRequest)},
        {427, -1, -1, sizeof(::SDMS::Auth::RecordDeleteRequest)},
        {436, 445, -1, sizeof(::SDMS::Auth::RecordGetDependencyGraphRequest)},
        {446, 458, -1, sizeof(::SDMS::Auth::RecordAllocChangeRequest)},
        {462, 478, -1, sizeof(::SDMS::Auth::RecordAllocChangeReply)},
        {486, 499, -1, sizeof(::SDMS::Auth::RecordOwnerChangeRequest)},
        {504, 517, -1, sizeof(::SDMS::Auth::RecordOwnerChangeReply)},
        {522, 535, -1, sizeof(::SDMS::Auth::DataGetRequest)},
        {540, 553, -1, sizeof(::SDMS::Auth::DataPutRequest)},
        {558, 568, -1, sizeof(::SDMS::Auth::DataGetReply)},
        {570, 580, -1, sizeof(::SDMS::Auth::DataPutReply)},
        {582, -1, -1, sizeof(::SDMS::Auth::DataDeleteRequest)},
        {591, 601, -1, sizeof(::SDMS::Auth::DataPathRequest)},
        {603, 612, -1, sizeof(::SDMS::Auth::DataPathReply)},
        {613, 639, -1, sizeof(::SDMS::Auth::SearchRequest)},
        {657, 666, -1, sizeof(::SDMS::Auth::CollViewRequest)},
        {667, -1, -1, sizeof(::SDMS::Auth::CollDataReply)},
        {677, 689, -1, sizeof(::SDMS::Auth::CollReadRequest)},
        {693, 707, -1, sizeof(::SDMS::Auth::CollCreateRequest)},
        {713, 728, -1, sizeof(::SDMS::Auth::CollUpdateRequest)},
        {735, -1, -1, sizeof(::SDMS::Auth::CollDeleteRequest)},
        {744, 756, -1, sizeof(::SDMS::Auth::CollWriteRequest)},
        {760, 771, -1, sizeof(::SDMS::Auth::CollMoveRequest)},
        {774, 784, -1, sizeof(::SDMS::Auth::CollGetParentsRequest)},
        {786, -1, -1, sizeof(::SDMS::Auth::CollPathReply)},
        {795, 806, -1, sizeof(::SDMS::Auth::CollGetOffsetRequest)},
        {809, 820, -1, sizeof(::SDMS::Auth::CollGetOffsetReply)},
        {823, 834, -1, sizeof(::SDMS::Auth::CollListPublishedRequest)},
        {837, 846, -1, sizeof(::SDMS::Auth::GroupCreateRequest)},
        {847, 861, -1, sizeof(::SDMS::Auth::GroupUpdateRequest)},
        {867, -1, -1, sizeof(::SDMS::Auth::GroupDataReply)},
        {876, 886, -1, sizeof(::SDMS::Auth::GroupDeleteRequest)},
        {888, 897, -1, sizeof(::SDMS::Auth::GroupListRequest)},
        {898, 908, -1, sizeof(::SDMS::Auth::GroupViewRequest)},
        {910, 919, -1, sizeof(::SDMS::Auth::ACLViewRequest)},
        {920, 930, -1, sizeof(::SDMS::Auth::ACLUpdateRequest)},
        {932, 942, -1, sizeof(::SDMS::Auth::ACLSharedListRequest)},
        {944, 953, -1, sizeof(::SDMS::Auth::ACLSharedListItemsRequest)},
        {954, -1, -1, sizeof(::SDMS::Auth::ACLDataReply)},
        {963, 972, -1, sizeof(::SDMS::Auth::ProjectViewRequest)},
        {973, -1, -1, sizeof(::SDMS::Auth::ProjectDataReply)},
        {982, 995, -1, sizeof(::SDMS::Auth::ProjectCreateRequest)},
        {1000, 1015, -1, sizeof(::SDMS::Auth::ProjectUpdateRequest)},
        {1022, -1, -1, sizeof(::SDMS::Auth::ProjectDeleteRequest)},
        {1031, 1047, -1, sizeof(::SDMS::Auth::ProjectListRequest)},
        {1055, 1065, -1, sizeof(::SDMS::Auth::ProjectSearchRequest)},
        {1067, 1077, -1, sizeof(::SDMS::Auth::ProjectGetRoleRequest)},
        {1079, 1088, -1, sizeof(::SDMS::Auth::ProjectGetRoleReply)},
        {1089, -1, -1, sizeof(::SDMS::Auth::RepoDataDeleteRequest)},
        {1098, -1, -1, sizeof(::SDMS::Auth::RepoDataGetSizeRequest)},
        {1107, -1, -1, sizeof(::SDMS::Auth::RepoDataSizeReply)},
        {1116, 1125, -1, sizeof(::SDMS::Auth::RepoPathCreateRequest)},
        {1126, 1135, -1, sizeof(::SDMS::Auth::RepoPathDeleteRequest)},
        {1136, 1146, -1, sizeof(::SDMS::Auth::RepoListRequest)},
        {1148, 1157, -1, sizeof(::SDMS::Auth::RepoViewRequest)},
        {1158, 1177, -1, sizeof(::SDMS::Auth::RepoCreateRequest)},
        {1188, 1207, -1, sizeof(::SDMS::Auth::RepoUpdateRequest)},
        {1218, 1227, -1, sizeof(::SDMS::Auth::RepoDeleteRequest)},
        {1228, -1, -1, sizeof(::SDMS::Auth::RepoDataReply)},
        {1237, 1247, -1, sizeof(::SDMS::Auth::RepoCalcSizeRequest)},
        {1249, -1, -1, sizeof(::SDMS::Auth::RepoCalcSizeReply)},
        {1258, 1267, -1, sizeof(::SDMS::Auth::RepoListAllocationsRequest)},
        {1268, 1278, -1, sizeof(::SDMS::Auth::RepoListSubjectAllocationsRequest)},
        {1280, 1289, -1, sizeof(::SDMS::Auth::RepoListObjectAllocationsRequest)},
        {1290, 1300, -1, sizeof(::SDMS::Auth::RepoViewAllocationRequest)},
        {1302, -1, -1, sizeof(::SDMS::Auth::RepoAllocationsReply)},
        {1311, 1321, -1, sizeof(::SDMS::Auth::RepoAllocationStatsRequest)},
        {1323, 1332, -1, sizeof(::SDMS::Auth::RepoAllocationStatsReply)},
        {1333, 1345, -1, sizeof(::SDMS::Auth::RepoAllocationCreateRequest)},
        {1349, 1361, -1, sizeof(::SDMS::Auth::RepoAllocationSetRequest)},
        {1365, 1375, -1, sizeof(::SDMS::Auth::RepoAllocationSetDefaultRequest)},
        {1377, 1387, -1, sizeof(::SDMS::Auth::RepoAllocationDeleteRequest)},
        {1389, 1401, -1, sizeof(::SDMS::Auth::RepoAuthzRequest)},
        {1405, 1415, -1, sizeof(::SDMS::Auth::QueryCreateRequest)},
        {1417, 1428, -1, sizeof(::SDMS::Auth::QueryUpdateRequest)},
        {1431, -1, -1, sizeof(::SDMS::Auth::QueryDeleteRequest)},
        {1440, 1450, -1, sizeof(::SDMS::Auth::QueryListRequest)},
        {1452, 1461, -1, sizeof(::SDMS::Auth::QueryViewRequest)},
        {1462, 1473, -1, sizeof(::SDMS::Auth::QueryExecRequest)},
        {1476, 1490, -1, sizeof(::SDMS::Auth::QueryDataReply)},
        {1496, 1505, -1, sizeof(::SDMS::Auth::NoteListBySubjectRequest)},
        {1506, 1515, -1, sizeof(::SDMS::Auth::NoteViewRequest)},
        {1516, 1529, -1, sizeof(::SDMS::Auth::NoteCreateRequest)},
        {1534, 1547, -1, sizeof(::SDMS::Auth::NoteUpdateRequest)},
        {1552, 1563, -1, sizeof(::SDMS::Auth::NoteCommentEditRequest)},
        {1566, -1, -1, sizeof(::SDMS::Auth::NoteDataReply)},
        {1576, 1585, -1, sizeof(::SDMS::Auth::TaskViewRequest)},
        {1586, 1600, -1, sizeof(::SDMS::Auth::TaskListRequest)},
        {1606, -1, -1, sizeof(::SDMS::Auth::TaskDataReply)},
        {1615, 1626, -1, sizeof(::SDMS::Auth::TagSearchRequest)},
        {1629, 1639, -1, sizeof(::SDMS::Auth::TagListByCountRequest)},
        {1641, 1653, -1, sizeof(::SDMS::Auth::TagDataReply)},
        {1657, 1667, -1, sizeof(::SDMS::Auth::MetadataValidateRequest)},
        {1669, 1678, -1, sizeof(::SDMS::Auth::MetadataValidateReply)},
        {1679, 1689, -1, sizeof(::SDMS::Auth::SchemaViewRequest)},
        {1691, 1706, -1, sizeof(::SDMS::Auth::SchemaSearchRequest)},
        {1713, 1725, -1, sizeof(::SDMS::Auth::SchemaDataReply)},
        {1729, 1742, -1, sizeof(::SDMS::Auth::SchemaCreateRequest)},
        {1747, 1761, -1, sizeof(::SDMS::Auth::SchemaUpdateRequest)},
        {1767, 1780, -1, sizeof(::SDMS::Auth::SchemaReviseRequest)},
        {1785, 1794, -1, sizeof(::SDMS::Auth::SchemaDeleteRequest)},
        {1795, 1806, -1, sizeof(::SDMS::Auth::TopicListTopicsRequest)},
        {1809, 1818, -1, sizeof(::SDMS::Auth::TopicViewRequest)},
        {1819, 1828, -1, sizeof(::SDMS::Auth::TopicSearchRequest)},
        {1829, 1841, -1, sizeof(::SDMS::Auth::TopicDataReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::SDMS::Auth::_GenerateCredentialsRequest_default_instance_._instance,
    &::SDMS::Auth::_RevokeCredentialsRequest_default_instance_._instance,
    &::SDMS::Auth::_GenerateCredentialsReply_default_instance_._instance,
    &::SDMS::Auth::_CheckPermsRequest_default_instance_._instance,
    &::SDMS::Auth::_CheckPermsReply_default_instance_._instance,
    &::SDMS::Auth::_GetPermsRequest_default_instance_._instance,
    &::SDMS::Auth::_GetPermsReply_default_instance_._instance,
    &::SDMS::Auth::_UserViewRequest_default_instance_._instance,
    &::SDMS::Auth::_UserDataReply_default_instance_._instance,
    &::SDMS::Auth::_UserSetAccessTokenRequest_default_instance_._instance,
    &::SDMS::Auth::_UserGetAccessTokenRequest_default_instance_._instance,
    &::SDMS::Auth::_UserAccessTokenReply_default_instance_._instance,
    &::SDMS::Auth::_UserCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_UserFindByUUIDsRequest_default_instance_._instance,
    &::SDMS::Auth::_UserFindByNameUIDRequest_default_instance_._instance,
    &::SDMS::Auth::_UserUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_UserListAllRequest_default_instance_._instance,
    &::SDMS::Auth::_UserListCollabRequest_default_instance_._instance,
    &::SDMS::Auth::_UserGetRecentEPRequest_default_instance_._instance,
    &::SDMS::Auth::_UserGetRecentEPReply_default_instance_._instance,
    &::SDMS::Auth::_UserSetRecentEPRequest_default_instance_._instance,
    &::SDMS::Auth::_ListingReply_default_instance_._instance,
    &::SDMS::Auth::_RecordListByAllocRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordViewRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordDataReply_default_instance_._instance,
    &::SDMS::Auth::_RecordCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordCreateBatchRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordUpdateBatchRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordExportRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordExportReply_default_instance_._instance,
    &::SDMS::Auth::_RecordLockRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordGetDependencyGraphRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordAllocChangeRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordAllocChangeReply_default_instance_._instance,
    &::SDMS::Auth::_RecordOwnerChangeRequest_default_instance_._instance,
    &::SDMS::Auth::_RecordOwnerChangeReply_default_instance_._instance,
    &::SDMS::Auth::_DataGetRequest_default_instance_._instance,
    &::SDMS::Auth::_DataPutRequest_default_instance_._instance,
    &::SDMS::Auth::_DataGetReply_default_instance_._instance,
    &::SDMS::Auth::_DataPutReply_default_instance_._instance,
    &::SDMS::Auth::_DataDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_DataPathRequest_default_instance_._instance,
    &::SDMS::Auth::_DataPathReply_default_instance_._instance,
    &::SDMS::Auth::_SearchRequest_default_instance_._instance,
    &::SDMS::Auth::_CollViewRequest_default_instance_._instance,
    &::SDMS::Auth::_CollDataReply_default_instance_._instance,
    &::SDMS::Auth::_CollReadRequest_default_instance_._instance,
    &::SDMS::Auth::_CollCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_CollUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_CollDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_CollWriteRequest_default_instance_._instance,
    &::SDMS::Auth::_CollMoveRequest_default_instance_._instance,
    &::SDMS::Auth::_CollGetParentsRequest_default_instance_._instance,
    &::SDMS::Auth::_CollPathReply_default_instance_._instance,
    &::SDMS::Auth::_CollGetOffsetRequest_default_instance_._instance,
    &::SDMS::Auth::_CollGetOffsetReply_default_instance_._instance,
    &::SDMS::Auth::_CollListPublishedRequest_default_instance_._instance,
    &::SDMS::Auth::_GroupCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_GroupUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_GroupDataReply_default_instance_._instance,
    &::SDMS::Auth::_GroupDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_GroupListRequest_default_instance_._instance,
    &::SDMS::Auth::_GroupViewRequest_default_instance_._instance,
    &::SDMS::Auth::_ACLViewRequest_default_instance_._instance,
    &::SDMS::Auth::_ACLUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_ACLSharedListRequest_default_instance_._instance,
    &::SDMS::Auth::_ACLSharedListItemsRequest_default_instance_._instance,
    &::SDMS::Auth::_ACLDataReply_default_instance_._instance,
    &::SDMS::Auth::_ProjectViewRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectDataReply_default_instance_._instance,
    &::SDMS::Auth::_ProjectCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectListRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectSearchRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectGetRoleRequest_default_instance_._instance,
    &::SDMS::Auth::_ProjectGetRoleReply_default_instance_._instance,
    &::SDMS::Auth::_RepoDataDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoDataGetSizeRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoDataSizeReply_default_instance_._instance,
    &::SDMS::Auth::_RepoPathCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoPathDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoListRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoViewRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoDataReply_default_instance_._instance,
    &::SDMS::Auth::_RepoCalcSizeRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoCalcSizeReply_default_instance_._instance,
    &::SDMS::Auth::_RepoListAllocationsRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoListSubjectAllocationsRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoListObjectAllocationsRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoViewAllocationRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationsReply_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationStatsRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationStatsReply_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationSetRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationSetDefaultRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAllocationDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_RepoAuthzRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryListRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryViewRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryExecRequest_default_instance_._instance,
    &::SDMS::Auth::_QueryDataReply_default_instance_._instance,
    &::SDMS::Auth::_NoteListBySubjectRequest_default_instance_._instance,
    &::SDMS::Auth::_NoteViewRequest_default_instance_._instance,
    &::SDMS::Auth::_NoteCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_NoteUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_NoteCommentEditRequest_default_instance_._instance,
    &::SDMS::Auth::_NoteDataReply_default_instance_._instance,
    &::SDMS::Auth::_TaskViewRequest_default_instance_._instance,
    &::SDMS::Auth::_TaskListRequest_default_instance_._instance,
    &::SDMS::Auth::_TaskDataReply_default_instance_._instance,
    &::SDMS::Auth::_TagSearchRequest_default_instance_._instance,
    &::SDMS::Auth::_TagListByCountRequest_default_instance_._instance,
    &::SDMS::Auth::_TagDataReply_default_instance_._instance,
    &::SDMS::Auth::_MetadataValidateRequest_default_instance_._instance,
    &::SDMS::Auth::_MetadataValidateReply_default_instance_._instance,
    &::SDMS::Auth::_SchemaViewRequest_default_instance_._instance,
    &::SDMS::Auth::_SchemaSearchRequest_default_instance_._instance,
    &::SDMS::Auth::_SchemaDataReply_default_instance_._instance,
    &::SDMS::Auth::_SchemaCreateRequest_default_instance_._instance,
    &::SDMS::Auth::_SchemaUpdateRequest_default_instance_._instance,
    &::SDMS::Auth::_SchemaReviseRequest_default_instance_._instance,
    &::SDMS::Auth::_SchemaDeleteRequest_default_instance_._instance,
    &::SDMS::Auth::_TopicListTopicsRequest_default_instance_._instance,
    &::SDMS::Auth::_TopicViewRequest_default_instance_._instance,
    &::SDMS::Auth::_TopicSearchRequest_default_instance_._instance,
    &::SDMS::Auth::_TopicDataReply_default_instance_._instance,
};
const char descriptor_table_protodef_SDMS_5fAuth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017SDMS_Auth.proto\022\tSDMS.Auth\032\nSDMS.proto"
    "\"9\n\032GenerateCredentialsRequest\022\016\n\006domain"
    "\030\001 \001(\t\022\013\n\003uid\030\002 \001(\r\"\032\n\030RevokeCredentials"
    "Request\"=\n\030GenerateCredentialsReply\022\017\n\007p"
    "ub_key\030\001 \002(\t\022\020\n\010priv_key\030\002 \002(\t\".\n\021CheckP"
    "ermsRequest\022\n\n\002id\030\001 \002(\t\022\r\n\005perms\030\002 \002(\r\"\""
    "\n\017CheckPermsReply\022\017\n\007granted\030\001 \002(\010\",\n\017Ge"
    "tPermsRequest\022\n\n\002id\030\001 \002(\t\022\r\n\005perms\030\002 \001(\r"
    "\" \n\rGetPermsReply\022\017\n\007granted\030\001 \002(\r\"/\n\017Us"
    "erViewRequest\022\013\n\003uid\030\001 \002(\t\022\017\n\007details\030\002 "
    "\001(\010\"[\n\rUserDataReply\022\034\n\004user\030\001 \003(\0132\016.SDM"
    "S.UserData\022\016\n\006offset\030\002 \001(\r\022\r\n\005count\030\003 \001("
    "\r\022\r\n\005total\030\004 \001(\r\"P\n\031UserSetAccessTokenRe"
    "quest\022\016\n\006access\030\001 \002(\t\022\022\n\nexpires_in\030\002 \002("
    "\r\022\017\n\007refresh\030\003 \002(\t\"\033\n\031UserGetAccessToken"
    "Request\":\n\024UserAccessTokenReply\022\016\n\006acces"
    "s\030\001 \002(\t\022\022\n\nexpires_in\030\002 \002(\r\"~\n\021UserCreat"
    "eRequest\022\013\n\003uid\030\001 \002(\t\022\020\n\010password\030\002 \001(\t\022"
    "\014\n\004name\030\003 \002(\t\022\r\n\005email\030\004 \002(\t\022\014\n\004uuid\030\005 \003"
    "(\t\022\017\n\007options\030\006 \001(\t\022\016\n\006secret\030\007 \002(\t\"&\n\026U"
    "serFindByUUIDsRequest\022\014\n\004uuid\030\001 \003(\t\"K\n\030U"
    "serFindByNameUIDRequest\022\020\n\010name_uid\030\001 \002("
    "\t\022\016\n\006offset\030\002 \001(\r\022\r\n\005count\030\003 \001(\r\"R\n\021User"
    "UpdateRequest\022\013\n\003uid\030\001 \002(\t\022\r\n\005email\030\002 \001("
    "\t\022\020\n\010password\030\003 \001(\t\022\017\n\007options\030\004 \001(\t\"3\n\022"
    "UserListAllRequest\022\016\n\006offset\030\001 \001(\r\022\r\n\005co"
    "unt\030\002 \001(\r\"6\n\025UserListCollabRequest\022\016\n\006of"
    "fset\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"\030\n\026UserGetRece"
    "ntEPRequest\"\"\n\024UserGetRecentEPReply\022\n\n\002e"
    "p\030\001 \003(\t\"$\n\026UserSetRecentEPRequest\022\n\n\002ep\030"
    "\001 \003(\t\"]\n\014ListingReply\022\037\n\004item\030\001 \003(\0132\021.SD"
    "MS.ListingData\022\016\n\006offset\030\002 \001(\r\022\r\n\005count\030"
    "\003 \001(\r\022\r\n\005total\030\004 \001(\r\"X\n\030RecordListByAllo"
    "cRequest\022\014\n\004repo\030\001 \002(\t\022\017\n\007subject\030\002 \001(\t\022"
    "\016\n\006offset\030\003 \001(\r\022\r\n\005count\030\004 \001(\r\"0\n\021Record"
    "ViewRequest\022\n\n\002id\030\001 \002(\t\022\017\n\007details\030\002 \001(\010"
    "\"T\n\017RecordDataReply\022\036\n\004data\030\001 \003(\0132\020.SDMS"
    ".RecordData\022!\n\006update\030\002 \003(\0132\021.SDMS.Listi"
    "ngData\"\223\002\n\023RecordCreateRequest\022\r\n\005title\030"
    "\001 \001(\t\022\014\n\004desc\030\002 \001(\t\022\014\n\004tags\030\003 \003(\t\022\r\n\005ali"
    "as\030\004 \001(\t\022\020\n\010metadata\030\005 \001(\t\022\021\n\tparent_id\030"
    "\006 \001(\t\022\020\n\010external\030\007 \001(\010\022\016\n\006source\030\010 \001(\t\022"
    "\017\n\007repo_id\030\t \001(\t\022\013\n\003ext\030\n \001(\t\022\020\n\010ext_aut"
    "o\030\013 \001(\010\022&\n\004deps\030\014 \003(\0132\030.SDMS.DependencyS"
    "pecData\022\016\n\006sch_id\030\r \001(\t\022\023\n\013sch_enforce\030\016"
    " \001(\010\"+\n\030RecordCreateBatchRequest\022\017\n\007reco"
    "rds\030\001 \002(\t\"\272\002\n\023RecordUpdateRequest\022\n\n\002id\030"
    "\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\014\n\004ta"
    "gs\030\004 \003(\t\022\022\n\ntags_clear\030\005 \001(\010\022\r\n\005alias\030\006 "
    "\001(\t\022\020\n\010metadata\030\007 \001(\t\022\r\n\005mdset\030\010 \001(\010\022\016\n\006"
    "sch_id\030\t \001(\t\022\023\n\013sch_enforce\030\n \001(\010\022\016\n\006sou"
    "rce\030\013 \001(\t\022\013\n\003ext\030\014 \001(\t\022\020\n\010ext_auto\030\r \001(\010"
    "\022)\n\007dep_add\030\020 \003(\0132\030.SDMS.DependencySpecD"
    "ata\022)\n\007dep_rem\030\021 \003(\0132\030.SDMS.DependencySp"
    "ecData\"+\n\030RecordUpdateBatchRequest\022\017\n\007re"
    "cords\030\001 \002(\t\"!\n\023RecordExportRequest\022\n\n\002id"
    "\030\001 \003(\t\"#\n\021RecordExportReply\022\016\n\006record\030\001 "
    "\003(\t\"-\n\021RecordLockRequest\022\n\n\002id\030\001 \003(\t\022\014\n\004"
    "lock\030\002 \002(\010\"!\n\023RecordDeleteRequest\022\n\n\002id\030"
    "\001 \003(\t\"-\n\037RecordGetDependencyGraphRequest"
    "\022\n\n\002id\030\001 \002(\t\"W\n\030RecordAllocChangeRequest"
    "\022\n\n\002id\030\001 \003(\t\022\017\n\007repo_id\030\002 \002(\t\022\017\n\007proj_id"
    "\030\003 \001(\t\022\r\n\005check\030\004 \001(\010\"\267\001\n\026RecordAllocCha"
    "ngeReply\022\017\n\007act_cnt\030\001 \002(\r\022\020\n\010act_size\030\002 "
    "\002(\004\022\017\n\007tot_cnt\030\003 \002(\r\022\022\n\ndata_limit\030\004 \002(\004"
    "\022\021\n\tdata_size\030\005 \002(\004\022\021\n\trec_limit\030\006 \002(\r\022\021"
    "\n\trec_count\030\007 \002(\r\022\034\n\004task\030\010 \001(\0132\016.SDMS.T"
    "askData\"h\n\030RecordOwnerChangeRequest\022\n\n\002i"
    "d\030\001 \003(\t\022\017\n\007coll_id\030\002 \002(\t\022\017\n\007repo_id\030\003 \001("
    "\t\022\017\n\007proj_id\030\004 \001(\t\022\r\n\005check\030\005 \001(\010\"\212\001\n\026Re"
    "cordOwnerChangeReply\022\017\n\007act_cnt\030\001 \002(\r\022\020\n"
    "\010act_size\030\002 \002(\004\022\017\n\007tot_cnt\030\003 \002(\r\022\036\n\005allo"
    "c\030\004 \003(\0132\017.SDMS.AllocData\022\034\n\004task\030\010 \001(\0132\016"
    ".SDMS.TaskData\"p\n\016DataGetRequest\022\n\n\002id\030\001"
    " \003(\t\022\014\n\004path\030\002 \001(\t\022!\n\007encrypt\030\003 \001(\0162\020.SD"
    "MS.Encryption\022\022\n\norig_fname\030\004 \001(\010\022\r\n\005che"
    "ck\030\005 \001(\010\"i\n\016DataPutRequest\022\n\n\002id\030\001 \002(\t\022\014"
    "\n\004path\030\002 \001(\t\022!\n\007encrypt\030\003 \001(\0162\020.SDMS.Enc"
    "ryption\022\013\n\003ext\030\004 \001(\t\022\r\n\005check\030\005 \001(\010\"M\n\014D"
    "ataGetReply\022\037\n\004item\030\001 \003(\0132\021.SDMS.Listing"
    "Data\022\034\n\004task\030\002 \001(\0132\016.SDMS.TaskData\"L\n\014Da"
    "taPutReply\022\036\n\004item\030\001 \002(\0132\020.SDMS.RecordDa"
    "ta\022\034\n\004task\030\002 \001(\0132\016.SDMS.TaskData\"\037\n\021Data"
    "DeleteRequest\022\n\n\002id\030\001 \003(\t\"-\n\017DataPathReq"
    "uest\022\n\n\002id\030\001 \002(\t\022\016\n\006domain\030\002 \002(\t\"\035\n\rData"
    "PathReply\022\014\n\004path\030\001 \002(\t\"\305\002\n\rSearchReques"
    "t\022\036\n\004mode\030\001 \002(\0162\020.SDMS.SearchMode\022\021\n\tpub"
    "lished\030\002 \001(\010\022\n\n\002id\030\003 \001(\t\022\014\n\004text\030\004 \001(\t\022\014"
    "\n\004tags\030\005 \003(\t\022\020\n\010cat_tags\030\006 \003(\t\022\014\n\004from\030\007"
    " \001(\r\022\n\n\002to\030\010 \001(\r\022\r\n\005owner\030\t \001(\t\022\017\n\007creat"
    "or\030\n \001(\t\022\014\n\004coll\030\013 \003(\t\022\016\n\006sch_id\030\014 \001(\t\022\014"
    "\n\004meta\030\r \001(\t\022\020\n\010meta_err\030\016 \001(\010\022\036\n\004sort\030\017"
    " \001(\0162\020.SDMS.SortOption\022\020\n\010sort_rev\030\020 \001(\010"
    "\022\016\n\006offset\030\021 \001(\r\022\r\n\005count\030\022 \001(\r\"\035\n\017CollV"
    "iewRequest\022\n\n\002id\030\001 \002(\t\"P\n\rCollDataReply\022"
    "\034\n\004coll\030\001 \003(\0132\016.SDMS.CollData\022!\n\006update\030"
    "\002 \003(\0132\021.SDMS.ListingData\"M\n\017CollReadRequ"
    "est\022\n\n\002id\030\001 \002(\t\022\017\n\007details\030\003 \001(\010\022\016\n\006offs"
    "et\030\004 \001(\r\022\r\n\005count\030\005 \001(\r\"o\n\021CollCreateReq"
    "uest\022\r\n\005title\030\001 \001(\t\022\014\n\004desc\030\002 \001(\t\022\r\n\005ali"
    "as\030\003 \001(\t\022\021\n\tparent_id\030\004 \001(\t\022\r\n\005topic\030\006 \001"
    "(\t\022\014\n\004tags\030\007 \003(\t\"|\n\021CollUpdateRequest\022\n\n"
    "\002id\030\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\r"
    "\n\005alias\030\004 \001(\t\022\r\n\005topic\030\006 \001(\t\022\014\n\004tags\030\007 \003"
    "(\t\022\022\n\ntags_clear\030\010 \001(\010\"\037\n\021CollDeleteRequ"
    "est\022\n\n\002id\030\001 \003(\t\"I\n\020CollWriteRequest\022\n\n\002i"
    "d\030\001 \002(\t\022\013\n\003add\030\002 \003(\t\022\013\n\003rem\030\003 \003(\t\022\017\n\007rem"
    "_all\030\004 \001(\010\"\?\n\017CollMoveRequest\022\016\n\006src_id\030"
    "\001 \002(\t\022\016\n\006dst_id\030\002 \002(\t\022\014\n\004item\030\003 \003(\t\"6\n\025C"
    "ollGetParentsRequest\022\n\n\002id\030\001 \002(\t\022\021\n\tincl"
    "usive\030\002 \001(\010\"-\n\rCollPathReply\022\034\n\004path\030\001 \003"
    "(\0132\016.SDMS.PathData\"A\n\024CollGetOffsetReque"
    "st\022\n\n\002id\030\001 \002(\t\022\014\n\004item\030\002 \002(\t\022\017\n\007page_sz\030"
    "\003 \002(\r\">\n\022CollGetOffsetReply\022\n\n\002id\030\001 \002(\t\022"
    "\014\n\004item\030\002 \002(\t\022\016\n\006offset\030\003 \002(\r\"J\n\030CollLis"
    "tPublishedRequest\022\017\n\007subject\030\001 \001(\t\022\016\n\006of"
    "fset\030\002 \001(\r\022\r\n\005count\030\003 \001(\r\"4\n\022GroupCreate"
    "Request\022\036\n\005group\030\001 \002(\0132\017.SDMS.GroupData\""
    "m\n\022GroupUpdateRequest\022\013\n\003uid\030\001 \002(\t\022\013\n\003gi"
    "d\030\002 \002(\t\022\r\n\005title\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\017\n\007"
    "add_uid\030\005 \003(\t\022\017\n\007rem_uid\030\006 \003(\t\"0\n\016GroupD"
    "ataReply\022\036\n\005group\030\001 \003(\0132\017.SDMS.GroupData"
    "\".\n\022GroupDeleteRequest\022\013\n\003uid\030\001 \002(\t\022\013\n\003g"
    "id\030\002 \002(\t\"\037\n\020GroupListRequest\022\013\n\003uid\030\001 \002("
    "\t\",\n\020GroupViewRequest\022\013\n\003uid\030\001 \002(\t\022\013\n\003gi"
    "d\030\002 \002(\t\"\034\n\016ACLViewRequest\022\n\n\002id\030\001 \002(\t\"-\n"
    "\020ACLUpdateRequest\022\n\n\002id\030\001 \002(\t\022\r\n\005rules\030\002"
    " \001(\t\"\?\n\024ACLSharedListRequest\022\021\n\tinc_user"
    "s\030\002 \001(\010\022\024\n\014inc_projects\030\003 \001(\010\"*\n\031ACLShar"
    "edListItemsRequest\022\r\n\005owner\030\002 \002(\t\"+\n\014ACL"
    "DataReply\022\033\n\004rule\030\001 \003(\0132\r.SDMS.ACLRule\" "
    "\n\022ProjectViewRequest\022\n\n\002id\030\001 \002(\t\"3\n\020Proj"
    "ectDataReply\022\037\n\004proj\030\001 \003(\0132\021.SDMS.Projec"
    "tData\"^\n\024ProjectCreateRequest\022\n\n\002id\030\001 \002("
    "\t\022\r\n\005title\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\r\n\005admin\030"
    "\004 \003(\t\022\016\n\006member\030\005 \003(\t\"\223\001\n\024ProjectUpdateR"
    "equest\022\n\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004des"
    "c\030\003 \001(\t\022\030\n\tadmin_set\030\004 \001(\010:\005false\022\r\n\005adm"
    "in\030\005 \003(\t\022\031\n\nmember_set\030\006 \001(\010:\005false\022\016\n\006m"
    "ember\030\007 \003(\t\"\"\n\024ProjectDeleteRequest\022\n\n\002i"
    "d\030\001 \003(\t\"\255\001\n\022ProjectListRequest\022\017\n\007subjec"
    "t\030\001 \001(\t\022\020\n\010as_owner\030\002 \001(\010\022\020\n\010as_admin\030\003 "
    "\001(\010\022\021\n\tas_member\030\004 \001(\010\022\036\n\004sort\030\005 \001(\0162\020.S"
    "DMS.SortOption\022\020\n\010sort_rev\030\006 \001(\010\022\016\n\006offs"
    "et\030\007 \001(\r\022\r\n\005count\030\010 \001(\r\"9\n\024ProjectSearch"
    "Request\022\022\n\ntext_query\030\001 \002(\t\022\r\n\005scope\030\002 \003"
    "(\t\"4\n\025ProjectGetRoleRequest\022\n\n\002id\030\001 \002(\t\022"
    "\017\n\007subject\030\002 \001(\t\"6\n\023ProjectGetRoleReply\022"
    "\037\n\004role\030\001 \002(\0162\021.SDMS.ProjectRole\">\n\025Repo"
    "DataDeleteRequest\022%\n\003loc\030\001 \003(\0132\030.SDMS.Re"
    "cordDataLocation\"\?\n\026RepoDataGetSizeReque"
    "st\022%\n\003loc\030\001 \003(\0132\030.SDMS.RecordDataLocatio"
    "n\"7\n\021RepoDataSizeReply\022\"\n\004size\030\001 \003(\0132\024.S"
    "DMS.RecordDataSize\"%\n\025RepoPathCreateRequ"
    "est\022\014\n\004path\030\001 \002(\t\"%\n\025RepoPathDeleteReque"
    "st\022\014\n\004path\030\001 \002(\t\"/\n\017RepoListRequest\022\017\n\007d"
    "etails\030\001 \001(\010\022\013\n\003all\030\002 \001(\010\"\035\n\017RepoViewReq"
    "uest\022\n\n\002id\030\001 \002(\t\"\301\001\n\021RepoCreateRequest\022\n"
    "\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\014\n\004desc\030\003 \001(\t\022"
    "\016\n\006domain\030\005 \001(\t\022\014\n\004path\030\006 \002(\t\022\020\n\010exp_pat"
    "h\030\007 \001(\t\022\017\n\007address\030\010 \002(\t\022\020\n\010endpoint\030\t \002"
    "(\t\022\017\n\007pub_key\030\n \002(\t\022\020\n\010capacity\030\013 \002(\004\022\r\n"
    "\005admin\030\014 \003(\t\"\301\001\n\021RepoUpdateRequest\022\n\n\002id"
    "\030\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\016\n\006d"
    "omain\030\005 \001(\t\022\014\n\004path\030\006 \001(\t\022\020\n\010exp_path\030\007 "
    "\001(\t\022\017\n\007address\030\010 \001(\t\022\020\n\010endpoint\030\t \001(\t\022\017"
    "\n\007pub_key\030\n \001(\t\022\020\n\010capacity\030\013 \001(\004\022\r\n\005adm"
    "in\030\014 \003(\t\"\037\n\021RepoDeleteRequest\022\n\n\002id\030\001 \002("
    "\t\"-\n\rRepoDataReply\022\034\n\004repo\030\001 \003(\0132\016.SDMS."
    "RepoData\"4\n\023RepoCalcSizeRequest\022\017\n\007recur"
    "se\030\001 \002(\010\022\014\n\004item\030\002 \003(\t\"8\n\021RepoCalcSizeRe"
    "ply\022#\n\005stats\030\001 \003(\0132\024.SDMS.AllocStatsData"
    "\"(\n\032RepoListAllocationsRequest\022\n\n\002id\030\001 \002"
    "(\t\"C\n!RepoListSubjectAllocationsRequest\022"
    "\017\n\007subject\030\001 \001(\t\022\r\n\005stats\030\002 \001(\010\".\n RepoL"
    "istObjectAllocationsRequest\022\n\n\002id\030\001 \002(\t\""
    ":\n\031RepoViewAllocationRequest\022\014\n\004repo\030\001 \002"
    "(\t\022\017\n\007subject\030\002 \002(\t\"6\n\024RepoAllocationsRe"
    "ply\022\036\n\005alloc\030\001 \003(\0132\017.SDMS.AllocData\";\n\032R"
    "epoAllocationStatsRequest\022\014\n\004repo\030\001 \002(\t\022"
    "\017\n\007subject\030\002 \001(\t\"\?\n\030RepoAllocationStatsR"
    "eply\022#\n\005alloc\030\001 \002(\0132\024.SDMS.AllocStatsDat"
    "a\"c\n\033RepoAllocationCreateRequest\022\014\n\004repo"
    "\030\001 \002(\t\022\017\n\007subject\030\002 \002(\t\022\022\n\ndata_limit\030\003 "
    "\002(\004\022\021\n\trec_limit\030\004 \002(\r\"`\n\030RepoAllocation"
    "SetRequest\022\014\n\004repo\030\001 \002(\t\022\017\n\007subject\030\002 \002("
    "\t\022\022\n\ndata_limit\030\003 \002(\004\022\021\n\trec_limit\030\004 \002(\r"
    "\"@\n\037RepoAllocationSetDefaultRequest\022\014\n\004r"
    "epo\030\001 \002(\t\022\017\n\007subject\030\002 \001(\t\"<\n\033RepoAlloca"
    "tionDeleteRequest\022\014\n\004repo\030\001 \002(\t\022\017\n\007subje"
    "ct\030\002 \002(\t\"N\n\020RepoAuthzRequest\022\014\n\004repo\030\001 \002"
    "(\t\022\016\n\006client\030\002 \002(\t\022\014\n\004file\030\003 \002(\t\022\016\n\006acti"
    "on\030\004 \002(\t\"L\n\022QueryCreateRequest\022\r\n\005title\030"
    "\001 \002(\t\022\'\n\005query\030\002 \002(\0132\030.SDMS.Auth.SearchR"
    "equest\"X\n\022QueryUpdateRequest\022\n\n\002id\030\001 \002(\t"
    "\022\r\n\005title\030\002 \001(\t\022\'\n\005query\030\003 \001(\0132\030.SDMS.Au"
    "th.SearchRequest\" \n\022QueryDeleteRequest\022\n"
    "\n\002id\030\001 \003(\t\"1\n\020QueryListRequest\022\016\n\006offset"
    "\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"\036\n\020QueryViewReques"
    "t\022\n\n\002id\030\001 \002(\t\"=\n\020QueryExecRequest\022\n\n\002id\030"
    "\001 \002(\t\022\016\n\006offset\030\002 \001(\r\022\r\n\005count\030\003 \001(\r\"{\n\016"
    "QueryDataReply\022\n\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \002("
    "\t\022\r\n\005owner\030\004 \002(\t\022\n\n\002ct\030\005 \002(\r\022\n\n\002ut\030\006 \002(\r"
    "\022\'\n\005query\030\007 \002(\0132\030.SDMS.Auth.SearchReques"
    "t\"+\n\030NoteListBySubjectRequest\022\017\n\007subject"
    "\030\001 \002(\t\"\035\n\017NoteViewRequest\022\n\n\002id\030\001 \002(\t\"t\n"
    "\021NoteCreateRequest\022\034\n\004type\030\001 \002(\0162\016.SDMS."
    "NoteType\022\017\n\007subject\030\002 \002(\t\022\r\n\005title\030\003 \002(\t"
    "\022\017\n\007comment\030\004 \002(\t\022\020\n\010activate\030\005 \002(\010\"\211\001\n\021"
    "NoteUpdateRequest\022\n\n\002id\030\001 \002(\t\022\017\n\007comment"
    "\030\002 \002(\t\022 \n\010new_type\030\003 \001(\0162\016.SDMS.NoteType"
    "\022\"\n\tnew_state\030\004 \001(\0162\017.SDMS.NoteState\022\021\n\t"
    "new_title\030\005 \001(\t\"J\n\026NoteCommentEditReques"
    "t\022\n\n\002id\030\001 \002(\t\022\023\n\013comment_idx\030\002 \002(\r\022\017\n\007co"
    "mment\030\003 \002(\t\"P\n\rNoteDataReply\022\034\n\004note\030\001 \003"
    "(\0132\016.SDMS.NoteData\022!\n\006update\030\002 \003(\0132\021.SDM"
    "S.ListingData\"\"\n\017TaskViewRequest\022\017\n\007task"
    "_id\030\001 \002(\t\"{\n\017TaskListRequest\022\r\n\005since\030\001 "
    "\001(\r\022\014\n\004from\030\002 \001(\r\022\n\n\002to\030\003 \001(\r\022 \n\006status\030"
    "\004 \003(\0162\020.SDMS.TaskStatus\022\016\n\006offset\030\005 \001(\r\022"
    "\r\n\005count\030\006 \001(\r\"-\n\rTaskDataReply\022\034\n\004task\030"
    "\001 \003(\0132\016.SDMS.TaskData\"\?\n\020TagSearchReques"
    "t\022\014\n\004name\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022\r\n\005count"
    "\030\003 \001(\r\"6\n\025TagListByCountRequest\022\016\n\006offse"
    "t\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"X\n\014TagDataReply\022\032"
    "\n\003tag\030\001 \003(\0132\r.SDMS.TagData\022\016\n\006offset\030\002 \001"
    "(\r\022\r\n\005count\030\003 \001(\r\022\r\n\005total\030\004 \001(\r\";\n\027Meta"
    "dataValidateRequest\022\020\n\010metadata\030\001 \002(\t\022\016\n"
    "\006sch_id\030\002 \002(\t\"\'\n\025MetadataValidateReply\022\016"
    "\n\006errors\030\001 \001(\t\"0\n\021SchemaViewRequest\022\n\n\002i"
    "d\030\001 \002(\t\022\017\n\007resolve\030\002 \001(\010\"\217\001\n\023SchemaSearc"
    "hRequest\022\n\n\002id\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\r\n\005ow"
    "ner\030\003 \001(\t\022\036\n\004sort\030\004 \001(\0162\020.SDMS.SortOptio"
    "n\022\020\n\010sort_rev\030\005 \001(\010\022\016\n\006offset\030\006 \001(\r\022\r\n\005c"
    "ount\030\007 \001(\r\"a\n\017SchemaDataReply\022 \n\006schema\030"
    "\001 \003(\0132\020.SDMS.SchemaData\022\016\n\006offset\030\002 \001(\r\022"
    "\r\n\005count\030\003 \001(\r\022\r\n\005total\030\004 \001(\r\"V\n\023SchemaC"
    "reateRequest\022\n\n\002id\030\001 \002(\t\022\014\n\004desc\030\002 \002(\t\022\013"
    "\n\003pub\030\003 \002(\010\022\013\n\003sys\030\004 \002(\010\022\013\n\003def\030\005 \002(\t\"f\n"
    "\023SchemaUpdateRequest\022\n\n\002id\030\001 \002(\t\022\016\n\006id_n"
    "ew\030\002 \001(\t\022\014\n\004desc\030\003 \001(\t\022\013\n\003pub\030\004 \001(\010\022\013\n\003s"
    "ys\030\005 \001(\010\022\013\n\003def\030\006 \001(\t\"V\n\023SchemaReviseReq"
    "uest\022\n\n\002id\030\001 \002(\t\022\014\n\004desc\030\002 \001(\t\022\013\n\003pub\030\003 "
    "\001(\010\022\013\n\003sys\030\004 \001(\010\022\013\n\003def\030\005 \001(\t\"!\n\023SchemaD"
    "eleteRequest\022\n\n\002id\030\001 \002(\t\"I\n\026TopicListTop"
    "icsRequest\022\020\n\010topic_id\030\001 \001(\t\022\016\n\006offset\030\002"
    " \001(\r\022\r\n\005count\030\003 \001(\r\"\036\n\020TopicViewRequest\022"
    "\n\n\002id\030\001 \002(\t\"$\n\022TopicSearchRequest\022\016\n\006phr"
    "ase\030\001 \001(\t\"^\n\016TopicDataReply\022\036\n\005topic\030\001 \003"
    "(\0132\017.SDMS.TopicData\022\016\n\006offset\030\002 \001(\r\022\r\n\005c"
    "ount\030\003 \001(\r\022\r\n\005total\030\004 \001(\r*\022\n\010Protocol\022\006\n"
    "\002ID\020\002"
};
static const ::_pbi::DescriptorTable* const descriptor_table_SDMS_5fAuth_2eproto_deps[1] =
    {
        &::descriptor_table_SDMS_2eproto,
};
static ::absl::once_flag descriptor_table_SDMS_5fAuth_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_SDMS_5fAuth_2eproto = {
    false,
    false,
    10045,
    descriptor_table_protodef_SDMS_5fAuth_2eproto,
    "SDMS_Auth.proto",
    &descriptor_table_SDMS_5fAuth_2eproto_once,
    descriptor_table_SDMS_5fAuth_2eproto_deps,
    1,
    136,
    schemas,
    file_default_instances,
    TableStruct_SDMS_5fAuth_2eproto::offsets,
    file_level_metadata_SDMS_5fAuth_2eproto,
    file_level_enum_descriptors_SDMS_5fAuth_2eproto,
    file_level_service_descriptors_SDMS_5fAuth_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_SDMS_5fAuth_2eproto_getter() {
  return &descriptor_table_SDMS_5fAuth_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_SDMS_5fAuth_2eproto(&descriptor_table_SDMS_5fAuth_2eproto);
namespace SDMS {
namespace Auth {
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_5fAuth_2eproto);
  return file_level_enum_descriptors_SDMS_5fAuth_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Protocol_internal_data_[] = {
    65538u, 0u, };
bool Protocol_IsValid(int value) {
  return 2 <= value && value <= 2;
}
// ===================================================================

class GenerateCredentialsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateCredentialsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_._has_bits_);
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GenerateCredentialsRequest::GenerateCredentialsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GenerateCredentialsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateCredentialsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        domain_(arena, from.domain_) {}

GenerateCredentialsRequest::GenerateCredentialsRequest(
    ::google::protobuf::Arena* arena,
    const GenerateCredentialsRequest& from)
    : ::google::protobuf::Message(arena) {
  GenerateCredentialsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uid_ = from._impl_.uid_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GenerateCredentialsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateCredentialsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        domain_(arena) {}

inline void GenerateCredentialsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uid_ = {};
}
GenerateCredentialsRequest::~GenerateCredentialsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GenerateCredentialsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateCredentialsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.domain_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateCredentialsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GenerateCredentialsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.domain_.ClearNonDefaultToEmpty();
  }
  _impl_.uid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateCredentialsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> GenerateCredentialsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateCredentialsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 uid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GenerateCredentialsRequest, _impl_.uid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_.uid_)}},
    // optional string domain = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_.domain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string domain = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_.domain_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 uid = 2;
    {PROTOBUF_FIELD_OFFSET(GenerateCredentialsRequest, _impl_.uid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\44\6\0\0\0\0\0\0"
    "SDMS.Auth.GenerateCredentialsRequest"
    "domain"
  }},
};

::uint8_t* GenerateCredentialsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GenerateCredentialsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string domain = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GenerateCredentialsRequest.domain");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GenerateCredentialsRequest)
  return target;
}

::size_t GenerateCredentialsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GenerateCredentialsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string domain = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

    // optional uint32 uid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateCredentialsRequest::_class_data_ = {
    GenerateCredentialsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateCredentialsRequest::GetClassData() const {
  return &_class_data_;
}

void GenerateCredentialsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateCredentialsRequest*>(&to_msg);
  auto& from = static_cast<const GenerateCredentialsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GenerateCredentialsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateCredentialsRequest::CopyFrom(const GenerateCredentialsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GenerateCredentialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateCredentialsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateCredentialsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateCredentialsRequest::InternalSwap(GenerateCredentialsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
        swap(_impl_.uid_, other->_impl_.uid_);
}

::google::protobuf::Metadata GenerateCredentialsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[0]);
}
// ===================================================================

class RevokeCredentialsRequest::_Internal {
 public:
};

RevokeCredentialsRequest::RevokeCredentialsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RevokeCredentialsRequest)
}
RevokeCredentialsRequest::RevokeCredentialsRequest(
    ::google::protobuf::Arena* arena,
    const RevokeCredentialsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RevokeCredentialsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RevokeCredentialsRequest)
}









::google::protobuf::Metadata RevokeCredentialsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[1]);
}
// ===================================================================

class GenerateCredentialsReply::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateCredentialsReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_._has_bits_);
  static void set_has_pub_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_priv_key(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GenerateCredentialsReply::GenerateCredentialsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GenerateCredentialsReply)
}
inline PROTOBUF_NDEBUG_INLINE GenerateCredentialsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pub_key_(arena, from.pub_key_),
        priv_key_(arena, from.priv_key_) {}

GenerateCredentialsReply::GenerateCredentialsReply(
    ::google::protobuf::Arena* arena,
    const GenerateCredentialsReply& from)
    : ::google::protobuf::Message(arena) {
  GenerateCredentialsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GenerateCredentialsReply)
}
inline PROTOBUF_NDEBUG_INLINE GenerateCredentialsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pub_key_(arena),
        priv_key_(arena) {}

inline void GenerateCredentialsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateCredentialsReply::~GenerateCredentialsReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GenerateCredentialsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateCredentialsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pub_key_.Destroy();
  _impl_.priv_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateCredentialsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GenerateCredentialsReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.pub_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.priv_key_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateCredentialsReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> GenerateCredentialsReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateCredentialsReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string priv_key = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_.priv_key_)}},
    // required string pub_key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_.pub_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string pub_key = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_.pub_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string priv_key = 2;
    {PROTOBUF_FIELD_OFFSET(GenerateCredentialsReply, _impl_.priv_key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\7\10\0\0\0\0\0"
    "SDMS.Auth.GenerateCredentialsReply"
    "pub_key"
    "priv_key"
  }},
};

::uint8_t* GenerateCredentialsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GenerateCredentialsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string pub_key = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_pub_key();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GenerateCredentialsReply.pub_key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string priv_key = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_priv_key();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GenerateCredentialsReply.priv_key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GenerateCredentialsReply)
  return target;
}

::size_t GenerateCredentialsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GenerateCredentialsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string pub_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pub_key());
    }

    // required string priv_key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_priv_key());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateCredentialsReply::_class_data_ = {
    GenerateCredentialsReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateCredentialsReply::GetClassData() const {
  return &_class_data_;
}

void GenerateCredentialsReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateCredentialsReply*>(&to_msg);
  auto& from = static_cast<const GenerateCredentialsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GenerateCredentialsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_pub_key(from._internal_pub_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_priv_key(from._internal_priv_key());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateCredentialsReply::CopyFrom(const GenerateCredentialsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GenerateCredentialsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateCredentialsReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GenerateCredentialsReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateCredentialsReply::InternalSwap(GenerateCredentialsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pub_key_, &other->_impl_.pub_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.priv_key_, &other->_impl_.priv_key_, arena);
}

::google::protobuf::Metadata GenerateCredentialsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[2]);
}
// ===================================================================

class CheckPermsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckPermsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_perms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CheckPermsRequest::CheckPermsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CheckPermsRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckPermsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

CheckPermsRequest::CheckPermsRequest(
    ::google::protobuf::Arena* arena,
    const CheckPermsRequest& from)
    : ::google::protobuf::Message(arena) {
  CheckPermsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.perms_ = from._impl_.perms_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CheckPermsRequest)
}
inline PROTOBUF_NDEBUG_INLINE CheckPermsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void CheckPermsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.perms_ = {};
}
CheckPermsRequest::~CheckPermsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CheckPermsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckPermsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CheckPermsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CheckPermsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.perms_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckPermsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> CheckPermsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckPermsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 perms = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckPermsRequest, _impl_.perms_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_.perms_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 perms = 2;
    {PROTOBUF_FIELD_OFFSET(CheckPermsRequest, _impl_.perms_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.CheckPermsRequest"
    "id"
  }},
};

::uint8_t* CheckPermsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CheckPermsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CheckPermsRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 perms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_perms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CheckPermsRequest)
  return target;
}

::size_t CheckPermsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CheckPermsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required uint32 perms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_perms());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CheckPermsRequest::_class_data_ = {
    CheckPermsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CheckPermsRequest::GetClassData() const {
  return &_class_data_;
}

void CheckPermsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CheckPermsRequest*>(&to_msg);
  auto& from = static_cast<const CheckPermsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CheckPermsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.perms_ = from._impl_.perms_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermsRequest::CopyFrom(const CheckPermsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CheckPermsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckPermsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CheckPermsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CheckPermsRequest::InternalSwap(CheckPermsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.perms_, other->_impl_.perms_);
}

::google::protobuf::Metadata CheckPermsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[3]);
}
// ===================================================================

class CheckPermsReply::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckPermsReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CheckPermsReply, _impl_._has_bits_);
  static void set_has_granted(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CheckPermsReply::CheckPermsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CheckPermsReply)
}
CheckPermsReply::CheckPermsReply(
    ::google::protobuf::Arena* arena, const CheckPermsReply& from)
    : CheckPermsReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CheckPermsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CheckPermsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.granted_ = {};
}
CheckPermsReply::~CheckPermsReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CheckPermsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckPermsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CheckPermsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CheckPermsReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granted_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckPermsReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CheckPermsReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckPermsReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckPermsReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required bool granted = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckPermsReply, _impl_.granted_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CheckPermsReply, _impl_.granted_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool granted = 1;
    {PROTOBUF_FIELD_OFFSET(CheckPermsReply, _impl_.granted_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CheckPermsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CheckPermsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool granted = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CheckPermsReply)
  return target;
}

::size_t CheckPermsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CheckPermsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required bool granted = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CheckPermsReply::_class_data_ = {
    CheckPermsReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CheckPermsReply::GetClassData() const {
  return &_class_data_;
}

void CheckPermsReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CheckPermsReply*>(&to_msg);
  auto& from = static_cast<const CheckPermsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CheckPermsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_granted(from._internal_granted());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermsReply::CopyFrom(const CheckPermsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CheckPermsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckPermsReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CheckPermsReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CheckPermsReply::InternalSwap(CheckPermsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.granted_, other->_impl_.granted_);
}

::google::protobuf::Metadata CheckPermsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[4]);
}
// ===================================================================

class GetPermsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPermsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_perms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetPermsRequest::GetPermsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GetPermsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPermsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

GetPermsRequest::GetPermsRequest(
    ::google::protobuf::Arena* arena,
    const GetPermsRequest& from)
    : ::google::protobuf::Message(arena) {
  GetPermsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.perms_ = from._impl_.perms_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GetPermsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPermsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void GetPermsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.perms_ = {};
}
GetPermsRequest::~GetPermsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GetPermsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPermsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPermsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GetPermsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.perms_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPermsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> GetPermsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPermsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 perms = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetPermsRequest, _impl_.perms_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_.perms_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 perms = 2;
    {PROTOBUF_FIELD_OFFSET(GetPermsRequest, _impl_.perms_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\2\0\0\0\0\0\0"
    "SDMS.Auth.GetPermsRequest"
    "id"
  }},
};

::uint8_t* GetPermsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GetPermsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GetPermsRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 perms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_perms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GetPermsRequest)
  return target;
}

::size_t GetPermsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GetPermsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional uint32 perms = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_perms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPermsRequest::_class_data_ = {
    GetPermsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPermsRequest::GetClassData() const {
  return &_class_data_;
}

void GetPermsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPermsRequest*>(&to_msg);
  auto& from = static_cast<const GetPermsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GetPermsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.perms_ = from._impl_.perms_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermsRequest::CopyFrom(const GetPermsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GetPermsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPermsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GetPermsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPermsRequest::InternalSwap(GetPermsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.perms_, other->_impl_.perms_);
}

::google::protobuf::Metadata GetPermsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[5]);
}
// ===================================================================

class GetPermsReply::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPermsReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPermsReply, _impl_._has_bits_);
  static void set_has_granted(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GetPermsReply::GetPermsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GetPermsReply)
}
GetPermsReply::GetPermsReply(
    ::google::protobuf::Arena* arena, const GetPermsReply& from)
    : GetPermsReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetPermsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetPermsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.granted_ = {};
}
GetPermsReply::~GetPermsReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GetPermsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPermsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPermsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GetPermsReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.granted_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPermsReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetPermsReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPermsReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPermsReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 granted = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetPermsReply, _impl_.granted_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetPermsReply, _impl_.granted_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 granted = 1;
    {PROTOBUF_FIELD_OFFSET(GetPermsReply, _impl_.granted_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetPermsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GetPermsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 granted = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_granted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GetPermsReply)
  return target;
}

::size_t GetPermsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GetPermsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required uint32 granted = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_granted());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPermsReply::_class_data_ = {
    GetPermsReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPermsReply::GetClassData() const {
  return &_class_data_;
}

void GetPermsReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPermsReply*>(&to_msg);
  auto& from = static_cast<const GetPermsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GetPermsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_granted(from._internal_granted());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermsReply::CopyFrom(const GetPermsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GetPermsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPermsReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GetPermsReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPermsReply::InternalSwap(GetPermsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.granted_, other->_impl_.granted_);
}

::google::protobuf::Metadata GetPermsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[6]);
}
// ===================================================================

class UserViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UserViewRequest::UserViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_) {}

UserViewRequest::UserViewRequest(
    ::google::protobuf::Arena* arena,
    const UserViewRequest& from)
    : ::google::protobuf::Message(arena) {
  UserViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.details_ = from._impl_.details_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena) {}

inline void UserViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.details_ = {};
}
UserViewRequest::~UserViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.uid_.ClearNonDefaultToEmpty();
  }
  _impl_.details_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> UserViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool details = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserViewRequest, _impl_.details_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_.details_)}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool details = 2;
    {PROTOBUF_FIELD_OFFSET(UserViewRequest, _impl_.details_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\3\0\0\0\0\0\0"
    "SDMS.Auth.UserViewRequest"
    "uid"
  }},
};

::uint8_t* UserViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserViewRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool details = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserViewRequest)
  return target;
}

::size_t UserViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string uid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  // optional bool details = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserViewRequest::_class_data_ = {
    UserViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserViewRequest::GetClassData() const {
  return &_class_data_;
}

void UserViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserViewRequest*>(&to_msg);
  auto& from = static_cast<const UserViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.details_ = from._impl_.details_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserViewRequest::CopyFrom(const UserViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserViewRequest::InternalSwap(UserViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
        swap(_impl_.details_, other->_impl_.details_);
}

::google::protobuf::Metadata UserViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[7]);
}
// ===================================================================

class UserDataReply::_Internal {
 public:
  using HasBits = decltype(std::declval<UserDataReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void UserDataReply::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_.Clear();
}
UserDataReply::UserDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserDataReply)
}
inline PROTOBUF_NDEBUG_INLINE UserDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_{visibility, arena, from.user_} {}

UserDataReply::UserDataReply(
    ::google::protobuf::Arena* arena,
    const UserDataReply& from)
    : ::google::protobuf::Message(arena) {
  UserDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserDataReply)
}
inline PROTOBUF_NDEBUG_INLINE UserDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_{visibility, arena} {}

inline void UserDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));
}
UserDataReply::~UserDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> UserDataReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 total = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserDataReply, _impl_.total_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.total_)}},
    // repeated .SDMS.UserData user = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.user_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserDataReply, _impl_.offset_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserDataReply, _impl_.count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.UserData user = 1;
    {PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.user_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total = 4;
    {PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.total_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::UserData>()},
  }}, {{
  }},
};

::uint8_t* UserDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.UserData user = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_user_size()); i < n; i++) {
    const auto& repfield = this->_internal_user().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  // optional uint32 total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserDataReply)
  return target;
}

::size_t UserDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.UserData user = 1;
  total_size += 1UL * this->_internal_user_size();
  for (const auto& msg : this->_internal_user()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

    // optional uint32 total = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserDataReply::_class_data_ = {
    UserDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserDataReply::GetClassData() const {
  return &_class_data_;
}

void UserDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserDataReply*>(&to_msg);
  auto& from = static_cast<const UserDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_user()->MergeFrom(
      from._internal_user());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserDataReply::CopyFrom(const UserDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_user()))
    return false;
  return true;
}

::_pbi::CachedSize* UserDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserDataReply::InternalSwap(UserDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.user_.InternalSwap(&other->_impl_.user_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.total_)
      + sizeof(UserDataReply::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(UserDataReply, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UserDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[8]);
}
// ===================================================================

class UserSetAccessTokenRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserSetAccessTokenRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_._has_bits_);
  static void set_has_access(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_expires_in(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_refresh(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

UserSetAccessTokenRequest::UserSetAccessTokenRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserSetAccessTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserSetAccessTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_(arena, from.access_),
        refresh_(arena, from.refresh_) {}

UserSetAccessTokenRequest::UserSetAccessTokenRequest(
    ::google::protobuf::Arena* arena,
    const UserSetAccessTokenRequest& from)
    : ::google::protobuf::Message(arena) {
  UserSetAccessTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.expires_in_ = from._impl_.expires_in_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserSetAccessTokenRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserSetAccessTokenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        access_(arena),
        refresh_(arena) {}

inline void UserSetAccessTokenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_in_ = {};
}
UserSetAccessTokenRequest::~UserSetAccessTokenRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserSetAccessTokenRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSetAccessTokenRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.access_.Destroy();
  _impl_.refresh_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserSetAccessTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserSetAccessTokenRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.access_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.refresh_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.expires_in_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSetAccessTokenRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> UserSetAccessTokenRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserSetAccessTokenRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string access = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.access_)}},
    // required uint32 expires_in = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserSetAccessTokenRequest, _impl_.expires_in_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.expires_in_)}},
    // required string refresh = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.refresh_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string access = 1;
    {PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.access_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 expires_in = 2;
    {PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.expires_in_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required string refresh = 3;
    {PROTOBUF_FIELD_OFFSET(UserSetAccessTokenRequest, _impl_.refresh_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\6\0\7\0\0\0\0"
    "SDMS.Auth.UserSetAccessTokenRequest"
    "access"
    "refresh"
  }},
};

::uint8_t* UserSetAccessTokenRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserSetAccessTokenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string access = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_access();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserSetAccessTokenRequest.access");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 expires_in = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_expires_in(), target);
  }

  // required string refresh = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_refresh();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserSetAccessTokenRequest.refresh");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserSetAccessTokenRequest)
  return target;
}

::size_t UserSetAccessTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserSetAccessTokenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string access = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_access());
    }

    // required string refresh = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_refresh());
    }

    // required uint32 expires_in = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_expires_in());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSetAccessTokenRequest::_class_data_ = {
    UserSetAccessTokenRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserSetAccessTokenRequest::GetClassData() const {
  return &_class_data_;
}

void UserSetAccessTokenRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSetAccessTokenRequest*>(&to_msg);
  auto& from = static_cast<const UserSetAccessTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserSetAccessTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_access(from._internal_access());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_refresh(from._internal_refresh());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.expires_in_ = from._impl_.expires_in_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSetAccessTokenRequest::CopyFrom(const UserSetAccessTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserSetAccessTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSetAccessTokenRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserSetAccessTokenRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserSetAccessTokenRequest::InternalSwap(UserSetAccessTokenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_, &other->_impl_.access_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.refresh_, &other->_impl_.refresh_, arena);
        swap(_impl_.expires_in_, other->_impl_.expires_in_);
}

::google::protobuf::Metadata UserSetAccessTokenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[9]);
}
// ===================================================================

class UserGetAccessTokenRequest::_Internal {
 public:
};

UserGetAccessTokenRequest::UserGetAccessTokenRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserGetAccessTokenRequest)
}
UserGetAccessTokenRequest::UserGetAccessTokenRequest(
    ::google::protobuf::Arena* arena,
    const UserGetAccessTokenRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  UserGetAccessTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserGetAccessTokenRequest)
}









::google::protobuf::Metadata UserGetAccessTokenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[10]);
}
// ===================================================================

class UserAccessTokenReply::_Internal {
 public:
  using HasBits = decltype(std::declval<UserAccessTokenReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_._has_bits_);
  static void set_has_access(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_expires_in(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

UserAccessTokenReply::UserAccessTokenReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserAccessTokenReply)
}
inline PROTOBUF_NDEBUG_INLINE UserAccessTokenReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_(arena, from.access_) {}

UserAccessTokenReply::UserAccessTokenReply(
    ::google::protobuf::Arena* arena,
    const UserAccessTokenReply& from)
    : ::google::protobuf::Message(arena) {
  UserAccessTokenReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.expires_in_ = from._impl_.expires_in_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserAccessTokenReply)
}
inline PROTOBUF_NDEBUG_INLINE UserAccessTokenReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        access_(arena) {}

inline void UserAccessTokenReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_in_ = {};
}
UserAccessTokenReply::~UserAccessTokenReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserAccessTokenReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserAccessTokenReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.access_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserAccessTokenReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserAccessTokenReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.access_.ClearNonDefaultToEmpty();
  }
  _impl_.expires_in_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserAccessTokenReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> UserAccessTokenReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserAccessTokenReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 expires_in = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserAccessTokenReply, _impl_.expires_in_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_.expires_in_)}},
    // required string access = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_.access_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string access = 1;
    {PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_.access_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 expires_in = 2;
    {PROTOBUF_FIELD_OFFSET(UserAccessTokenReply, _impl_.expires_in_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\36\6\0\0\0\0\0\0"
    "SDMS.Auth.UserAccessTokenReply"
    "access"
  }},
};

::uint8_t* UserAccessTokenReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserAccessTokenReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string access = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_access();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserAccessTokenReply.access");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 expires_in = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_expires_in(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserAccessTokenReply)
  return target;
}

::size_t UserAccessTokenReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserAccessTokenReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string access = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_access());
    }

    // required uint32 expires_in = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_expires_in());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserAccessTokenReply::_class_data_ = {
    UserAccessTokenReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserAccessTokenReply::GetClassData() const {
  return &_class_data_;
}

void UserAccessTokenReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserAccessTokenReply*>(&to_msg);
  auto& from = static_cast<const UserAccessTokenReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserAccessTokenReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_access(from._internal_access());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.expires_in_ = from._impl_.expires_in_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserAccessTokenReply::CopyFrom(const UserAccessTokenReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserAccessTokenReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserAccessTokenReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserAccessTokenReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserAccessTokenReply::InternalSwap(UserAccessTokenReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_, &other->_impl_.access_, arena);
        swap(_impl_.expires_in_, other->_impl_.expires_in_);
}

::google::protobuf::Metadata UserAccessTokenReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[11]);
}
// ===================================================================

class UserCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_secret(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000002d) ^ 0x0000002d) != 0;
  }
};

UserCreateRequest::UserCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uuid_{visibility, arena, from.uuid_},
        uid_(arena, from.uid_),
        password_(arena, from.password_),
        name_(arena, from.name_),
        email_(arena, from.email_),
        options_(arena, from.options_),
        secret_(arena, from.secret_) {}

UserCreateRequest::UserCreateRequest(
    ::google::protobuf::Arena* arena,
    const UserCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  UserCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uuid_{visibility, arena},
        uid_(arena),
        password_(arena),
        name_(arena),
        email_(arena),
        options_(arena),
        secret_(arena) {}

inline void UserCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserCreateRequest::~UserCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.password_.Destroy();
  _impl_.name_.Destroy();
  _impl_.email_.Destroy();
  _impl_.options_.Destroy();
  _impl_.secret_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.options_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.secret_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 73, 2> UserCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.uid_)}},
    // optional string password = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.password_)}},
    // required string name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.name_)}},
    // required string email = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.email_)}},
    // repeated string uuid = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.uuid_)}},
    // optional string options = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.options_)}},
    // required string secret = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.secret_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string password = 2;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.password_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string name = 3;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string email = 4;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.email_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string uuid = 5;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.uuid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string options = 6;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.options_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string secret = 7;
    {PROTOBUF_FIELD_OFFSET(UserCreateRequest, _impl_.secret_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\3\10\4\5\4\7\6"
    "SDMS.Auth.UserCreateRequest"
    "uid"
    "password"
    "name"
    "email"
    "uuid"
    "options"
    "secret"
  }},
};

::uint8_t* UserCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string email = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.email");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string uuid = 5;
  for (int i = 0, n = this->_internal_uuid_size(); i < n; ++i) {
    const auto& s = this->_internal_uuid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.uuid");
    target = stream->WriteString(5, s, target);
  }

  // optional string options = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_options();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.options");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // required string secret = 7;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_secret();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserCreateRequest.secret");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserCreateRequest)
  return target;
}

::size_t UserCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uuid = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_uuid().size());
  for (int i = 0, n = _internal_uuid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_uuid().Get(i));
  }
  // required string uid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  if (cached_has_bits & 0x0000000cu) {
    // required string name = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // required string email = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
    }

  }
  // optional string options = 6;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_options());
  }

  // required string secret = 7;
  if (cached_has_bits & 0x00000020u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_secret());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserCreateRequest::_class_data_ = {
    UserCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserCreateRequest::GetClassData() const {
  return &_class_data_;
}

void UserCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserCreateRequest*>(&to_msg);
  auto& from = static_cast<const UserCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_uuid()->MergeFrom(from._internal_uuid());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_options(from._internal_options());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_secret(from._internal_secret());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserCreateRequest::CopyFrom(const UserCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserCreateRequest::InternalSwap(UserCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.uuid_.InternalSwap(&other->_impl_.uuid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.options_, &other->_impl_.options_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_, &other->_impl_.secret_, arena);
}

::google::protobuf::Metadata UserCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[12]);
}
// ===================================================================

class UserFindByUUIDsRequest::_Internal {
 public:
};

UserFindByUUIDsRequest::UserFindByUUIDsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserFindByUUIDsRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserFindByUUIDsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uuid_{visibility, arena, from.uuid_},
        _cached_size_{0} {}

UserFindByUUIDsRequest::UserFindByUUIDsRequest(
    ::google::protobuf::Arena* arena,
    const UserFindByUUIDsRequest& from)
    : ::google::protobuf::Message(arena) {
  UserFindByUUIDsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserFindByUUIDsRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserFindByUUIDsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uuid_{visibility, arena},
        _cached_size_{0} {}

inline void UserFindByUUIDsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserFindByUUIDsRequest::~UserFindByUUIDsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserFindByUUIDsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserFindByUUIDsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserFindByUUIDsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserFindByUUIDsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuid_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserFindByUUIDsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> UserFindByUUIDsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserFindByUUIDsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string uuid = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserFindByUUIDsRequest, _impl_.uuid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string uuid = 1;
    {PROTOBUF_FIELD_OFFSET(UserFindByUUIDsRequest, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\4\0\0\0\0\0\0"
    "SDMS.Auth.UserFindByUUIDsRequest"
    "uuid"
  }},
};

::uint8_t* UserFindByUUIDsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserFindByUUIDsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string uuid = 1;
  for (int i = 0, n = this->_internal_uuid_size(); i < n; ++i) {
    const auto& s = this->_internal_uuid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserFindByUUIDsRequest.uuid");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserFindByUUIDsRequest)
  return target;
}

::size_t UserFindByUUIDsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserFindByUUIDsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uuid = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_uuid().size());
  for (int i = 0, n = _internal_uuid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_uuid().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserFindByUUIDsRequest::_class_data_ = {
    UserFindByUUIDsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserFindByUUIDsRequest::GetClassData() const {
  return &_class_data_;
}

void UserFindByUUIDsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserFindByUUIDsRequest*>(&to_msg);
  auto& from = static_cast<const UserFindByUUIDsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserFindByUUIDsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_uuid()->MergeFrom(from._internal_uuid());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserFindByUUIDsRequest::CopyFrom(const UserFindByUUIDsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserFindByUUIDsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserFindByUUIDsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserFindByUUIDsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserFindByUUIDsRequest::InternalSwap(UserFindByUUIDsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.uuid_.InternalSwap(&other->_impl_.uuid_);
}

::google::protobuf::Metadata UserFindByUUIDsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[13]);
}
// ===================================================================

class UserFindByNameUIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserFindByNameUIDRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_._has_bits_);
  static void set_has_name_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UserFindByNameUIDRequest::UserFindByNameUIDRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserFindByNameUIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserFindByNameUIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_uid_(arena, from.name_uid_) {}

UserFindByNameUIDRequest::UserFindByNameUIDRequest(
    ::google::protobuf::Arena* arena,
    const UserFindByNameUIDRequest& from)
    : ::google::protobuf::Message(arena) {
  UserFindByNameUIDRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserFindByNameUIDRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserFindByNameUIDRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_uid_(arena) {}

inline void UserFindByNameUIDRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
UserFindByNameUIDRequest::~UserFindByNameUIDRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserFindByNameUIDRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserFindByNameUIDRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserFindByNameUIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserFindByNameUIDRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_uid_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserFindByNameUIDRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 51, 2> UserFindByNameUIDRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserFindByNameUIDRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string name_uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.name_uid_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserFindByNameUIDRequest, _impl_.offset_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserFindByNameUIDRequest, _impl_.count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string name_uid = 1;
    {PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.name_uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\10\0\0\0\0\0\0"
    "SDMS.Auth.UserFindByNameUIDRequest"
    "name_uid"
  }},
};

::uint8_t* UserFindByNameUIDRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserFindByNameUIDRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string name_uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserFindByNameUIDRequest.name_uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserFindByNameUIDRequest)
  return target;
}

::size_t UserFindByNameUIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserFindByNameUIDRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string name_uid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_uid());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserFindByNameUIDRequest::_class_data_ = {
    UserFindByNameUIDRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserFindByNameUIDRequest::GetClassData() const {
  return &_class_data_;
}

void UserFindByNameUIDRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserFindByNameUIDRequest*>(&to_msg);
  auto& from = static_cast<const UserFindByNameUIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserFindByNameUIDRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name_uid(from._internal_name_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserFindByNameUIDRequest::CopyFrom(const UserFindByNameUIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserFindByNameUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserFindByNameUIDRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserFindByNameUIDRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserFindByNameUIDRequest::InternalSwap(UserFindByNameUIDRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_uid_, &other->_impl_.name_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.count_)
      + sizeof(UserFindByNameUIDRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(UserFindByNameUIDRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UserFindByNameUIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[14]);
}
// ===================================================================

class UserUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UserUpdateRequest::UserUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_),
        email_(arena, from.email_),
        password_(arena, from.password_),
        options_(arena, from.options_) {}

UserUpdateRequest::UserUpdateRequest(
    ::google::protobuf::Arena* arena,
    const UserUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  UserUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena),
        email_(arena),
        password_(arena),
        options_(arena) {}

inline void UserUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserUpdateRequest::~UserUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.email_.Destroy();
  _impl_.password_.Destroy();
  _impl_.options_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.options_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 59, 2> UserUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string options = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.options_)}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.uid_)}},
    // optional string email = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.email_)}},
    // optional string password = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string email = 2;
    {PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.email_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string password = 3;
    {PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.password_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string options = 4;
    {PROTOBUF_FIELD_OFFSET(UserUpdateRequest, _impl_.options_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\3\5\10\7\0\0\0"
    "SDMS.Auth.UserUpdateRequest"
    "uid"
    "email"
    "password"
    "options"
  }},
};

::uint8_t* UserUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserUpdateRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserUpdateRequest.email");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserUpdateRequest.password");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string options = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_options();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserUpdateRequest.options");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserUpdateRequest)
  return target;
}

::size_t UserUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string uid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional string email = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
    }

    // optional string password = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_password());
    }

    // optional string options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_options());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserUpdateRequest::_class_data_ = {
    UserUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void UserUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserUpdateRequest*>(&to_msg);
  auto& from = static_cast<const UserUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_options(from._internal_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserUpdateRequest::CopyFrom(const UserUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* UserUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserUpdateRequest::InternalSwap(UserUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.options_, &other->_impl_.options_, arena);
}

::google::protobuf::Metadata UserUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[15]);
}
// ===================================================================

class UserListAllRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserListAllRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UserListAllRequest::UserListAllRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserListAllRequest)
}
UserListAllRequest::UserListAllRequest(
    ::google::protobuf::Arena* arena, const UserListAllRequest& from)
    : UserListAllRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UserListAllRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserListAllRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
UserListAllRequest::~UserListAllRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserListAllRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserListAllRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserListAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserListAllRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserListAllRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> UserListAllRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserListAllRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListAllRequest, _impl_.count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.count_)}},
    // optional uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListAllRequest, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 2;
    {PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UserListAllRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserListAllRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_offset(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserListAllRequest)
  return target;
}

::size_t UserListAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserListAllRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 offset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserListAllRequest::_class_data_ = {
    UserListAllRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserListAllRequest::GetClassData() const {
  return &_class_data_;
}

void UserListAllRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserListAllRequest*>(&to_msg);
  auto& from = static_cast<const UserListAllRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserListAllRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListAllRequest::CopyFrom(const UserListAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserListAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserListAllRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserListAllRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserListAllRequest::InternalSwap(UserListAllRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.count_)
      + sizeof(UserListAllRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(UserListAllRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UserListAllRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[16]);
}
// ===================================================================

class UserListCollabRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserListCollabRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UserListCollabRequest::UserListCollabRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserListCollabRequest)
}
UserListCollabRequest::UserListCollabRequest(
    ::google::protobuf::Arena* arena, const UserListCollabRequest& from)
    : UserListCollabRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UserListCollabRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserListCollabRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
UserListCollabRequest::~UserListCollabRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserListCollabRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserListCollabRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserListCollabRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserListCollabRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserListCollabRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> UserListCollabRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserListCollabRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListCollabRequest, _impl_.count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.count_)}},
    // optional uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListCollabRequest, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 2;
    {PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UserListCollabRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserListCollabRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_offset(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserListCollabRequest)
  return target;
}

::size_t UserListCollabRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserListCollabRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 offset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserListCollabRequest::_class_data_ = {
    UserListCollabRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserListCollabRequest::GetClassData() const {
  return &_class_data_;
}

void UserListCollabRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserListCollabRequest*>(&to_msg);
  auto& from = static_cast<const UserListCollabRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserListCollabRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListCollabRequest::CopyFrom(const UserListCollabRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserListCollabRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserListCollabRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserListCollabRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserListCollabRequest::InternalSwap(UserListCollabRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.count_)
      + sizeof(UserListCollabRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(UserListCollabRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata UserListCollabRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[17]);
}
// ===================================================================

class UserGetRecentEPRequest::_Internal {
 public:
};

UserGetRecentEPRequest::UserGetRecentEPRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserGetRecentEPRequest)
}
UserGetRecentEPRequest::UserGetRecentEPRequest(
    ::google::protobuf::Arena* arena,
    const UserGetRecentEPRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  UserGetRecentEPRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserGetRecentEPRequest)
}









::google::protobuf::Metadata UserGetRecentEPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[18]);
}
// ===================================================================

class UserGetRecentEPReply::_Internal {
 public:
};

UserGetRecentEPReply::UserGetRecentEPReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserGetRecentEPReply)
}
inline PROTOBUF_NDEBUG_INLINE UserGetRecentEPReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ep_{visibility, arena, from.ep_},
        _cached_size_{0} {}

UserGetRecentEPReply::UserGetRecentEPReply(
    ::google::protobuf::Arena* arena,
    const UserGetRecentEPReply& from)
    : ::google::protobuf::Message(arena) {
  UserGetRecentEPReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserGetRecentEPReply)
}
inline PROTOBUF_NDEBUG_INLINE UserGetRecentEPReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ep_{visibility, arena},
        _cached_size_{0} {}

inline void UserGetRecentEPReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserGetRecentEPReply::~UserGetRecentEPReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserGetRecentEPReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserGetRecentEPReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserGetRecentEPReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserGetRecentEPReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ep_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserGetRecentEPReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> UserGetRecentEPReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserGetRecentEPReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string ep = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserGetRecentEPReply, _impl_.ep_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string ep = 1;
    {PROTOBUF_FIELD_OFFSET(UserGetRecentEPReply, _impl_.ep_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\2\0\0\0\0\0\0"
    "SDMS.Auth.UserGetRecentEPReply"
    "ep"
  }},
};

::uint8_t* UserGetRecentEPReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserGetRecentEPReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string ep = 1;
  for (int i = 0, n = this->_internal_ep_size(); i < n; ++i) {
    const auto& s = this->_internal_ep().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserGetRecentEPReply.ep");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserGetRecentEPReply)
  return target;
}

::size_t UserGetRecentEPReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserGetRecentEPReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ep = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_ep().size());
  for (int i = 0, n = _internal_ep().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_ep().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserGetRecentEPReply::_class_data_ = {
    UserGetRecentEPReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserGetRecentEPReply::GetClassData() const {
  return &_class_data_;
}

void UserGetRecentEPReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserGetRecentEPReply*>(&to_msg);
  auto& from = static_cast<const UserGetRecentEPReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserGetRecentEPReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ep()->MergeFrom(from._internal_ep());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserGetRecentEPReply::CopyFrom(const UserGetRecentEPReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserGetRecentEPReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserGetRecentEPReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserGetRecentEPReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserGetRecentEPReply::InternalSwap(UserGetRecentEPReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ep_.InternalSwap(&other->_impl_.ep_);
}

::google::protobuf::Metadata UserGetRecentEPReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[19]);
}
// ===================================================================

class UserSetRecentEPRequest::_Internal {
 public:
};

UserSetRecentEPRequest::UserSetRecentEPRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.UserSetRecentEPRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserSetRecentEPRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ep_{visibility, arena, from.ep_},
        _cached_size_{0} {}

UserSetRecentEPRequest::UserSetRecentEPRequest(
    ::google::protobuf::Arena* arena,
    const UserSetRecentEPRequest& from)
    : ::google::protobuf::Message(arena) {
  UserSetRecentEPRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.UserSetRecentEPRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserSetRecentEPRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ep_{visibility, arena},
        _cached_size_{0} {}

inline void UserSetRecentEPRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserSetRecentEPRequest::~UserSetRecentEPRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.UserSetRecentEPRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSetRecentEPRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserSetRecentEPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.UserSetRecentEPRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ep_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserSetRecentEPRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> UserSetRecentEPRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserSetRecentEPRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string ep = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserSetRecentEPRequest, _impl_.ep_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string ep = 1;
    {PROTOBUF_FIELD_OFFSET(UserSetRecentEPRequest, _impl_.ep_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\2\0\0\0\0\0\0"
    "SDMS.Auth.UserSetRecentEPRequest"
    "ep"
  }},
};

::uint8_t* UserSetRecentEPRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.UserSetRecentEPRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string ep = 1;
  for (int i = 0, n = this->_internal_ep_size(); i < n; ++i) {
    const auto& s = this->_internal_ep().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.UserSetRecentEPRequest.ep");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.UserSetRecentEPRequest)
  return target;
}

::size_t UserSetRecentEPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.UserSetRecentEPRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ep = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_ep().size());
  for (int i = 0, n = _internal_ep().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_ep().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserSetRecentEPRequest::_class_data_ = {
    UserSetRecentEPRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserSetRecentEPRequest::GetClassData() const {
  return &_class_data_;
}

void UserSetRecentEPRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserSetRecentEPRequest*>(&to_msg);
  auto& from = static_cast<const UserSetRecentEPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.UserSetRecentEPRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ep()->MergeFrom(from._internal_ep());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSetRecentEPRequest::CopyFrom(const UserSetRecentEPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.UserSetRecentEPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserSetRecentEPRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserSetRecentEPRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserSetRecentEPRequest::InternalSwap(UserSetRecentEPRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ep_.InternalSwap(&other->_impl_.ep_);
}

::google::protobuf::Metadata UserSetRecentEPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[20]);
}
// ===================================================================

class ListingReply::_Internal {
 public:
  using HasBits = decltype(std::declval<ListingReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListingReply, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void ListingReply::clear_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.item_.Clear();
}
ListingReply::ListingReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ListingReply)
}
inline PROTOBUF_NDEBUG_INLINE ListingReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_{visibility, arena, from.item_} {}

ListingReply::ListingReply(
    ::google::protobuf::Arena* arena,
    const ListingReply& from)
    : ::google::protobuf::Message(arena) {
  ListingReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ListingReply)
}
inline PROTOBUF_NDEBUG_INLINE ListingReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        item_{visibility, arena} {}

inline void ListingReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));
}
ListingReply::~ListingReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ListingReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListingReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ListingReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListingReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ListingReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListingReply, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListingReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 total = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListingReply, _impl_.total_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.total_)}},
    // repeated .SDMS.ListingData item = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.item_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListingReply, _impl_.offset_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListingReply, _impl_.count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.ListingData item = 1;
    {PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total = 4;
    {PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.total_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
  }}, {{
  }},
};

::uint8_t* ListingReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ListingReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_size()); i < n; i++) {
    const auto& repfield = this->_internal_item().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  // optional uint32 total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ListingReply)
  return target;
}

::size_t ListingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ListingReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->_internal_item()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

    // optional uint32 total = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListingReply::_class_data_ = {
    ListingReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListingReply::GetClassData() const {
  return &_class_data_;
}

void ListingReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListingReply*>(&to_msg);
  auto& from = static_cast<const ListingReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ListingReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(
      from._internal_item());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListingReply::CopyFrom(const ListingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ListingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListingReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_item()))
    return false;
  return true;
}

::_pbi::CachedSize* ListingReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListingReply::InternalSwap(ListingReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.total_)
      + sizeof(ListingReply::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(ListingReply, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata ListingReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[21]);
}
// ===================================================================

class RecordListByAllocRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordListByAllocRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordListByAllocRequest::RecordListByAllocRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordListByAllocRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordListByAllocRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RecordListByAllocRequest::RecordListByAllocRequest(
    ::google::protobuf::Arena* arena,
    const RecordListByAllocRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordListByAllocRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordListByAllocRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordListByAllocRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RecordListByAllocRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
RecordListByAllocRequest::~RecordListByAllocRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordListByAllocRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordListByAllocRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordListByAllocRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordListByAllocRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordListByAllocRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2> RecordListByAllocRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordListByAllocRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordListByAllocRequest, _impl_.count_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.count_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.repo_)}},
    // optional string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.subject_)}},
    // optional uint32 offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordListByAllocRequest, _impl_.offset_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 3;
    {PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 4;
    {PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\4\7\0\0\0\0\0"
    "SDMS.Auth.RecordListByAllocRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RecordListByAllocRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordListByAllocRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordListByAllocRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordListByAllocRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_offset(), target);
  }

  // optional uint32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordListByAllocRequest)
  return target;
}

::size_t RecordListByAllocRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordListByAllocRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string repo = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo());
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional string subject = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // optional uint32 offset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordListByAllocRequest::_class_data_ = {
    RecordListByAllocRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordListByAllocRequest::GetClassData() const {
  return &_class_data_;
}

void RecordListByAllocRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordListByAllocRequest*>(&to_msg);
  auto& from = static_cast<const RecordListByAllocRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordListByAllocRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordListByAllocRequest::CopyFrom(const RecordListByAllocRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordListByAllocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordListByAllocRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordListByAllocRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordListByAllocRequest::InternalSwap(RecordListByAllocRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.count_)
      + sizeof(RecordListByAllocRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(RecordListByAllocRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata RecordListByAllocRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[22]);
}
// ===================================================================

class RecordViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordViewRequest::RecordViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RecordViewRequest::RecordViewRequest(
    ::google::protobuf::Arena* arena,
    const RecordViewRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.details_ = from._impl_.details_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RecordViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.details_ = {};
}
RecordViewRequest::~RecordViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.details_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> RecordViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool details = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordViewRequest, _impl_.details_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_.details_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool details = 2;
    {PROTOBUF_FIELD_OFFSET(RecordViewRequest, _impl_.details_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.RecordViewRequest"
    "id"
  }},
};

::uint8_t* RecordViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool details = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordViewRequest)
  return target;
}

::size_t RecordViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional bool details = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordViewRequest::_class_data_ = {
    RecordViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordViewRequest::GetClassData() const {
  return &_class_data_;
}

void RecordViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordViewRequest*>(&to_msg);
  auto& from = static_cast<const RecordViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.details_ = from._impl_.details_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordViewRequest::CopyFrom(const RecordViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordViewRequest::InternalSwap(RecordViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.details_, other->_impl_.details_);
}

::google::protobuf::Metadata RecordViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[23]);
}
// ===================================================================

class RecordDataReply::_Internal {
 public:
};

void RecordDataReply::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
void RecordDataReply::clear_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_.Clear();
}
RecordDataReply::RecordDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordDataReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        update_{visibility, arena, from.update_},
        _cached_size_{0} {}

RecordDataReply::RecordDataReply(
    ::google::protobuf::Arena* arena,
    const RecordDataReply& from)
    : ::google::protobuf::Message(arena) {
  RecordDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordDataReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        update_{visibility, arena},
        _cached_size_{0} {}

inline void RecordDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordDataReply::~RecordDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.update_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RecordDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ListingData update = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RecordDataReply, _impl_.update_)}},
    // repeated .SDMS.RecordData data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordDataReply, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.RecordData data = 1;
    {PROTOBUF_FIELD_OFFSET(RecordDataReply, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SDMS.ListingData update = 2;
    {PROTOBUF_FIELD_OFFSET(RecordDataReply, _impl_.update_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordData>()},
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
  }}, {{
  }},
};

::uint8_t* RecordDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.RecordData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .SDMS.ListingData update = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_update_size()); i < n; i++) {
    const auto& repfield = this->_internal_update().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordDataReply)
  return target;
}

::size_t RecordDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RecordData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .SDMS.ListingData update = 2;
  total_size += 1UL * this->_internal_update_size();
  for (const auto& msg : this->_internal_update()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordDataReply::_class_data_ = {
    RecordDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordDataReply::GetClassData() const {
  return &_class_data_;
}

void RecordDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordDataReply*>(&to_msg);
  auto& from = static_cast<const RecordDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_mutable_update()->MergeFrom(
      from._internal_update());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordDataReply::CopyFrom(const RecordDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_data()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_update()))
    return false;
  return true;
}

::_pbi::CachedSize* RecordDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordDataReply::InternalSwap(RecordDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.update_.InternalSwap(&other->_impl_.update_);
}

::google::protobuf::Metadata RecordDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[24]);
}
// ===================================================================

class RecordCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_._has_bits_);
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_external(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_repo_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ext(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ext_auto(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_sch_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_sch_enforce(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

void RecordCreateRequest::clear_deps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.deps_.Clear();
}
RecordCreateRequest::RecordCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        deps_{visibility, arena, from.deps_},
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        alias_(arena, from.alias_),
        metadata_(arena, from.metadata_),
        parent_id_(arena, from.parent_id_),
        source_(arena, from.source_),
        repo_id_(arena, from.repo_id_),
        ext_(arena, from.ext_),
        sch_id_(arena, from.sch_id_) {}

RecordCreateRequest::RecordCreateRequest(
    ::google::protobuf::Arena* arena,
    const RecordCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, external_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, external_),
           offsetof(Impl_, sch_enforce_) -
               offsetof(Impl_, external_) +
               sizeof(Impl_::sch_enforce_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        deps_{visibility, arena},
        title_(arena),
        desc_(arena),
        alias_(arena),
        metadata_(arena),
        parent_id_(arena),
        source_(arena),
        repo_id_(arena),
        ext_(arena),
        sch_id_(arena) {}

inline void RecordCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, external_),
           0,
           offsetof(Impl_, sch_enforce_) -
               offsetof(Impl_, external_) +
               sizeof(Impl_::sch_enforce_));
}
RecordCreateRequest::~RecordCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.metadata_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.source_.Destroy();
  _impl_.repo_id_.Destroy();
  _impl_.ext_.Destroy();
  _impl_.sch_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.deps_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.metadata_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.repo_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.ext_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.sch_id_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.external_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sch_enforce_) -
      reinterpret_cast<char*>(&_impl_.external_)) + sizeof(_impl_.sch_enforce_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 103, 2> RecordCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string title = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.title_)}},
    // optional string desc = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.desc_)}},
    // repeated string tags = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.tags_)}},
    // optional string alias = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.alias_)}},
    // optional string metadata = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.metadata_)}},
    // optional string parent_id = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.parent_id_)}},
    // optional bool external = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordCreateRequest, _impl_.external_), 9>(),
     {56, 9, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.external_)}},
    // optional string source = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.source_)}},
    // optional string repo_id = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 6, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.repo_id_)}},
    // optional string ext = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 7, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.ext_)}},
    // optional bool ext_auto = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordCreateRequest, _impl_.ext_auto_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.ext_auto_)}},
    // repeated .SDMS.DependencySpecData deps = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.deps_)}},
    // optional string sch_id = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 8, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.sch_id_)}},
    // optional bool sch_enforce = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordCreateRequest, _impl_.sch_enforce_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.sch_enforce_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string title = 1;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 2;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 3;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string alias = 4;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.alias_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string metadata = 5;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.metadata_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string parent_id = 6;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.parent_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool external = 7;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.external_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string source = 8;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.source_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string repo_id = 9;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.repo_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string ext = 10;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.ext_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool ext_auto = 11;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.ext_auto_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .SDMS.DependencySpecData deps = 12;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.deps_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string sch_id = 13;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.sch_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool sch_enforce = 14;
    {PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.sch_enforce_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::DependencySpecData>()},
  }}, {{
    "\35\5\4\4\5\10\11\0\6\7\3\0\0\6\0\0"
    "SDMS.Auth.RecordCreateRequest"
    "title"
    "desc"
    "tags"
    "alias"
    "metadata"
    "parent_id"
    "source"
    "repo_id"
    "ext"
    "sch_id"
  }},
};

::uint8_t* RecordCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string desc = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string tags = 3;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.tags");
    target = stream->WriteString(3, s, target);
  }

  // optional string alias = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.alias");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string metadata = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_metadata();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.metadata");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string parent_id = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_parent_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.parent_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional bool external = 7;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_external(), target);
  }

  // optional string source = 8;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_source();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.source");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string repo_id = 9;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_repo_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.repo_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string ext = 10;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_ext();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.ext");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional bool ext_auto = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_ext_auto(), target);
  }

  // repeated .SDMS.DependencySpecData deps = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_deps_size()); i < n; i++) {
    const auto& repfield = this->_internal_deps().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string sch_id = 13;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_sch_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateRequest.sch_id");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional bool sch_enforce = 14;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_sch_enforce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordCreateRequest)
  return target;
}

::size_t RecordCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated .SDMS.DependencySpecData deps = 12;
  total_size += 1UL * this->_internal_deps_size();
  for (const auto& msg : this->_internal_deps()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string alias = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string metadata = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_metadata());
    }

    // optional string parent_id = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_parent_id());
    }

    // optional string source = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_source());
    }

    // optional string repo_id = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo_id());
    }

    // optional string ext = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ext());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional string sch_id = 13;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sch_id());
    }

    // optional bool external = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool ext_auto = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool sch_enforce = 14;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordCreateRequest::_class_data_ = {
    RecordCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordCreateRequest::GetClassData() const {
  return &_class_data_;
}

void RecordCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordCreateRequest*>(&to_msg);
  auto& from = static_cast<const RecordCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_deps()->MergeFrom(
      from._internal_deps());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_metadata(from._internal_metadata());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_parent_id(from._internal_parent_id());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_source(from._internal_source());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_repo_id(from._internal_repo_id());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_ext(from._internal_ext());
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_sch_id(from._internal_sch_id());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.external_ = from._impl_.external_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.ext_auto_ = from._impl_.ext_auto_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.sch_enforce_ = from._impl_.sch_enforce_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordCreateRequest::CopyFrom(const RecordCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordCreateRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_deps()))
    return false;
  return true;
}

::_pbi::CachedSize* RecordCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordCreateRequest::InternalSwap(RecordCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.deps_.InternalSwap(&other->_impl_.deps_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_id_, &other->_impl_.repo_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ext_, &other->_impl_.ext_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sch_id_, &other->_impl_.sch_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.sch_enforce_)
      + sizeof(RecordCreateRequest::_impl_.sch_enforce_)
      - PROTOBUF_FIELD_OFFSET(RecordCreateRequest, _impl_.external_)>(
          reinterpret_cast<char*>(&_impl_.external_),
          reinterpret_cast<char*>(&other->_impl_.external_));
}

::google::protobuf::Metadata RecordCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[25]);
}
// ===================================================================

class RecordCreateBatchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordCreateBatchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordCreateBatchRequest, _impl_._has_bits_);
  static void set_has_records(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordCreateBatchRequest::RecordCreateBatchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordCreateBatchRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordCreateBatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        records_(arena, from.records_) {}

RecordCreateBatchRequest::RecordCreateBatchRequest(
    ::google::protobuf::Arena* arena,
    const RecordCreateBatchRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordCreateBatchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordCreateBatchRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordCreateBatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        records_(arena) {}

inline void RecordCreateBatchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordCreateBatchRequest::~RecordCreateBatchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordCreateBatchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordCreateBatchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.records_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordCreateBatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordCreateBatchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.records_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordCreateBatchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> RecordCreateBatchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordCreateBatchRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordCreateBatchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string records = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordCreateBatchRequest, _impl_.records_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string records = 1;
    {PROTOBUF_FIELD_OFFSET(RecordCreateBatchRequest, _impl_.records_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\7\0\0\0\0\0\0"
    "SDMS.Auth.RecordCreateBatchRequest"
    "records"
  }},
};

::uint8_t* RecordCreateBatchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordCreateBatchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string records = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_records();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordCreateBatchRequest.records");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordCreateBatchRequest)
  return target;
}

::size_t RecordCreateBatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordCreateBatchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string records = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_records());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordCreateBatchRequest::_class_data_ = {
    RecordCreateBatchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordCreateBatchRequest::GetClassData() const {
  return &_class_data_;
}

void RecordCreateBatchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordCreateBatchRequest*>(&to_msg);
  auto& from = static_cast<const RecordCreateBatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordCreateBatchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_records(from._internal_records());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordCreateBatchRequest::CopyFrom(const RecordCreateBatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordCreateBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordCreateBatchRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordCreateBatchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordCreateBatchRequest::InternalSwap(RecordCreateBatchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.records_, &other->_impl_.records_, arena);
}

::google::protobuf::Metadata RecordCreateBatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[26]);
}
// ===================================================================

class RecordUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tags_clear(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_mdset(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_sch_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_sch_enforce(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ext(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ext_auto(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void RecordUpdateRequest::clear_dep_add() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dep_add_.Clear();
}
void RecordUpdateRequest::clear_dep_rem() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dep_rem_.Clear();
}
RecordUpdateRequest::RecordUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        dep_add_{visibility, arena, from.dep_add_},
        dep_rem_{visibility, arena, from.dep_rem_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        alias_(arena, from.alias_),
        metadata_(arena, from.metadata_),
        sch_id_(arena, from.sch_id_),
        source_(arena, from.source_),
        ext_(arena, from.ext_) {}

RecordUpdateRequest::RecordUpdateRequest(
    ::google::protobuf::Arena* arena,
    const RecordUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tags_clear_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tags_clear_),
           offsetof(Impl_, ext_auto_) -
               offsetof(Impl_, tags_clear_) +
               sizeof(Impl_::ext_auto_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        dep_add_{visibility, arena},
        dep_rem_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        alias_(arena),
        metadata_(arena),
        sch_id_(arena),
        source_(arena),
        ext_(arena) {}

inline void RecordUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tags_clear_),
           0,
           offsetof(Impl_, ext_auto_) -
               offsetof(Impl_, tags_clear_) +
               sizeof(Impl_::ext_auto_));
}
RecordUpdateRequest::~RecordUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.metadata_.Destroy();
  _impl_.sch_id_.Destroy();
  _impl_.source_.Destroy();
  _impl_.ext_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.dep_add_.Clear();
  _impl_.dep_rem_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.metadata_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.sch_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.ext_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.tags_clear_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ext_auto_) -
      reinterpret_cast<char*>(&_impl_.tags_clear_)) + sizeof(_impl_.ext_auto_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 2, 89, 2> RecordUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    17, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294860800,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.DependencySpecData dep_add = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.dep_add_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.desc_)}},
    // repeated string tags = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.tags_)}},
    // optional bool tags_clear = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordUpdateRequest, _impl_.tags_clear_), 8>(),
     {40, 8, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.tags_clear_)}},
    // optional string alias = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.alias_)}},
    // optional string metadata = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.metadata_)}},
    // optional bool mdset = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordUpdateRequest, _impl_.mdset_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.mdset_)}},
    // optional string sch_id = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 5, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.sch_id_)}},
    // optional bool sch_enforce = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordUpdateRequest, _impl_.sch_enforce_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.sch_enforce_)}},
    // optional string source = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 6, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.source_)}},
    // optional string ext = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 7, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.ext_)}},
    // optional bool ext_auto = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordUpdateRequest, _impl_.ext_auto_), 11>(),
     {104, 11, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.ext_auto_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 4;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional bool tags_clear = 5;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.tags_clear_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string alias = 6;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.alias_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string metadata = 7;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.metadata_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool mdset = 8;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.mdset_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string sch_id = 9;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.sch_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool sch_enforce = 10;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.sch_enforce_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string source = 11;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.source_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string ext = 12;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.ext_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool ext_auto = 13;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.ext_auto_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .SDMS.DependencySpecData dep_add = 16;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.dep_add_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SDMS.DependencySpecData dep_rem = 17;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.dep_rem_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::DependencySpecData>()},
    {::_pbi::TcParser::GetTable<::SDMS::DependencySpecData>()},
  }}, {{
    "\35\2\5\4\4\0\5\10\0\6\0\6\3\0\0\0"
    "SDMS.Auth.RecordUpdateRequest"
    "id"
    "title"
    "desc"
    "tags"
    "alias"
    "metadata"
    "sch_id"
    "source"
    "ext"
  }},
};

::uint8_t* RecordUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.tags");
    target = stream->WriteString(4, s, target);
  }

  // optional bool tags_clear = 5;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_tags_clear(), target);
  }

  // optional string alias = 6;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.alias");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string metadata = 7;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_metadata();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.metadata");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional bool mdset = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_mdset(), target);
  }

  // optional string sch_id = 9;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_sch_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.sch_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional bool sch_enforce = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_sch_enforce(), target);
  }

  // optional string source = 11;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_source();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.source");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional string ext = 12;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_ext();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateRequest.ext");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional bool ext_auto = 13;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_ext_auto(), target);
  }

  // repeated .SDMS.DependencySpecData dep_add = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dep_add_size()); i < n; i++) {
    const auto& repfield = this->_internal_dep_add().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .SDMS.DependencySpecData dep_rem = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dep_rem_size()); i < n; i++) {
    const auto& repfield = this->_internal_dep_rem().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordUpdateRequest)
  return target;
}

::size_t RecordUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated .SDMS.DependencySpecData dep_add = 16;
  total_size += 2UL * this->_internal_dep_add_size();
  for (const auto& msg : this->_internal_dep_add()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .SDMS.DependencySpecData dep_rem = 17;
  total_size += 2UL * this->_internal_dep_rem_size();
  for (const auto& msg : this->_internal_dep_rem()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x000000feu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string alias = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string metadata = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_metadata());
    }

    // optional string sch_id = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sch_id());
    }

    // optional string source = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_source());
    }

    // optional string ext = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ext());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional bool tags_clear = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional bool mdset = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool sch_enforce = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool ext_auto = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordUpdateRequest::_class_data_ = {
    RecordUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void RecordUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordUpdateRequest*>(&to_msg);
  auto& from = static_cast<const RecordUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_dep_add()->MergeFrom(
      from._internal_dep_add());
  _this->_internal_mutable_dep_rem()->MergeFrom(
      from._internal_dep_rem());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_metadata(from._internal_metadata());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_sch_id(from._internal_sch_id());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_source(from._internal_source());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_ext(from._internal_ext());
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.tags_clear_ = from._impl_.tags_clear_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mdset_ = from._impl_.mdset_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.sch_enforce_ = from._impl_.sch_enforce_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.ext_auto_ = from._impl_.ext_auto_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordUpdateRequest::CopyFrom(const RecordUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_dep_add()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_dep_rem()))
    return false;
  return true;
}

::_pbi::CachedSize* RecordUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordUpdateRequest::InternalSwap(RecordUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.dep_add_.InternalSwap(&other->_impl_.dep_add_);
  _impl_.dep_rem_.InternalSwap(&other->_impl_.dep_rem_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sch_id_, &other->_impl_.sch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ext_, &other->_impl_.ext_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.ext_auto_)
      + sizeof(RecordUpdateRequest::_impl_.ext_auto_)
      - PROTOBUF_FIELD_OFFSET(RecordUpdateRequest, _impl_.tags_clear_)>(
          reinterpret_cast<char*>(&_impl_.tags_clear_),
          reinterpret_cast<char*>(&other->_impl_.tags_clear_));
}

::google::protobuf::Metadata RecordUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[27]);
}
// ===================================================================

class RecordUpdateBatchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordUpdateBatchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordUpdateBatchRequest, _impl_._has_bits_);
  static void set_has_records(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordUpdateBatchRequest::RecordUpdateBatchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordUpdateBatchRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordUpdateBatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        records_(arena, from.records_) {}

RecordUpdateBatchRequest::RecordUpdateBatchRequest(
    ::google::protobuf::Arena* arena,
    const RecordUpdateBatchRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordUpdateBatchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordUpdateBatchRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordUpdateBatchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        records_(arena) {}

inline void RecordUpdateBatchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordUpdateBatchRequest::~RecordUpdateBatchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordUpdateBatchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordUpdateBatchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.records_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordUpdateBatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordUpdateBatchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.records_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordUpdateBatchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> RecordUpdateBatchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordUpdateBatchRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordUpdateBatchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string records = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordUpdateBatchRequest, _impl_.records_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string records = 1;
    {PROTOBUF_FIELD_OFFSET(RecordUpdateBatchRequest, _impl_.records_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\7\0\0\0\0\0\0"
    "SDMS.Auth.RecordUpdateBatchRequest"
    "records"
  }},
};

::uint8_t* RecordUpdateBatchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordUpdateBatchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string records = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_records();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordUpdateBatchRequest.records");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordUpdateBatchRequest)
  return target;
}

::size_t RecordUpdateBatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordUpdateBatchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string records = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_records());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordUpdateBatchRequest::_class_data_ = {
    RecordUpdateBatchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordUpdateBatchRequest::GetClassData() const {
  return &_class_data_;
}

void RecordUpdateBatchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordUpdateBatchRequest*>(&to_msg);
  auto& from = static_cast<const RecordUpdateBatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordUpdateBatchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_records(from._internal_records());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordUpdateBatchRequest::CopyFrom(const RecordUpdateBatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordUpdateBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordUpdateBatchRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordUpdateBatchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordUpdateBatchRequest::InternalSwap(RecordUpdateBatchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.records_, &other->_impl_.records_, arena);
}

::google::protobuf::Metadata RecordUpdateBatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[28]);
}
// ===================================================================

class RecordExportRequest::_Internal {
 public:
};

RecordExportRequest::RecordExportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

RecordExportRequest::RecordExportRequest(
    ::google::protobuf::Arena* arena,
    const RecordExportRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordExportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void RecordExportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordExportRequest::~RecordExportRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordExportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordExportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordExportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordExportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> RecordExportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordExportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordExportRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordExportRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\2\0\0\0\0\0\0"
    "SDMS.Auth.RecordExportRequest"
    "id"
  }},
};

::uint8_t* RecordExportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordExportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordExportRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordExportRequest)
  return target;
}

::size_t RecordExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordExportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordExportRequest::_class_data_ = {
    RecordExportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordExportRequest::GetClassData() const {
  return &_class_data_;
}

void RecordExportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordExportRequest*>(&to_msg);
  auto& from = static_cast<const RecordExportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordExportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordExportRequest::CopyFrom(const RecordExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordExportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RecordExportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordExportRequest::InternalSwap(RecordExportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata RecordExportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[29]);
}
// ===================================================================

class RecordExportReply::_Internal {
 public:
};

RecordExportReply::RecordExportReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordExportReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordExportReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : record_{visibility, arena, from.record_},
        _cached_size_{0} {}

RecordExportReply::RecordExportReply(
    ::google::protobuf::Arena* arena,
    const RecordExportReply& from)
    : ::google::protobuf::Message(arena) {
  RecordExportReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordExportReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordExportReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : record_{visibility, arena},
        _cached_size_{0} {}

inline void RecordExportReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordExportReply::~RecordExportReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordExportReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordExportReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordExportReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordExportReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.record_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordExportReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> RecordExportReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordExportReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string record = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordExportReply, _impl_.record_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string record = 1;
    {PROTOBUF_FIELD_OFFSET(RecordExportReply, _impl_.record_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\6\0\0\0\0\0\0"
    "SDMS.Auth.RecordExportReply"
    "record"
  }},
};

::uint8_t* RecordExportReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordExportReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string record = 1;
  for (int i = 0, n = this->_internal_record_size(); i < n; ++i) {
    const auto& s = this->_internal_record().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordExportReply.record");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordExportReply)
  return target;
}

::size_t RecordExportReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordExportReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string record = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_record().size());
  for (int i = 0, n = _internal_record().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_record().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordExportReply::_class_data_ = {
    RecordExportReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordExportReply::GetClassData() const {
  return &_class_data_;
}

void RecordExportReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordExportReply*>(&to_msg);
  auto& from = static_cast<const RecordExportReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordExportReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_record()->MergeFrom(from._internal_record());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordExportReply::CopyFrom(const RecordExportReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordExportReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordExportReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RecordExportReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordExportReply::InternalSwap(RecordExportReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.record_.InternalSwap(&other->_impl_.record_);
}

::google::protobuf::Metadata RecordExportReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[30]);
}
// ===================================================================

class RecordLockRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordLockRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_._has_bits_);
  static void set_has_lock(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordLockRequest::RecordLockRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordLockRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordLockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_{visibility, arena, from.id_} {}

RecordLockRequest::RecordLockRequest(
    ::google::protobuf::Arena* arena,
    const RecordLockRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordLockRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.lock_ = from._impl_.lock_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordLockRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordLockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_{visibility, arena} {}

inline void RecordLockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lock_ = {};
}
RecordLockRequest::~RecordLockRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordLockRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordLockRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordLockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordLockRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _impl_.lock_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordLockRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> RecordLockRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordLockRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required bool lock = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordLockRequest, _impl_.lock_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_.lock_)}},
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // required bool lock = 2;
    {PROTOBUF_FIELD_OFFSET(RecordLockRequest, _impl_.lock_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.RecordLockRequest"
    "id"
  }},
};

::uint8_t* RecordLockRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordLockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordLockRequest.id");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required bool lock = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_lock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordLockRequest)
  return target;
}

::size_t RecordLockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordLockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  // required bool lock = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordLockRequest::_class_data_ = {
    RecordLockRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordLockRequest::GetClassData() const {
  return &_class_data_;
}

void RecordLockRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordLockRequest*>(&to_msg);
  auto& from = static_cast<const RecordLockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordLockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_lock(from._internal_lock());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordLockRequest::CopyFrom(const RecordLockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordLockRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordLockRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordLockRequest::InternalSwap(RecordLockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
        swap(_impl_.lock_, other->_impl_.lock_);
}

::google::protobuf::Metadata RecordLockRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[31]);
}
// ===================================================================

class RecordDeleteRequest::_Internal {
 public:
};

RecordDeleteRequest::RecordDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

RecordDeleteRequest::RecordDeleteRequest(
    ::google::protobuf::Arena* arena,
    const RecordDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void RecordDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordDeleteRequest::~RecordDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> RecordDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordDeleteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\2\0\0\0\0\0\0"
    "SDMS.Auth.RecordDeleteRequest"
    "id"
  }},
};

::uint8_t* RecordDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordDeleteRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordDeleteRequest)
  return target;
}

::size_t RecordDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordDeleteRequest::_class_data_ = {
    RecordDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void RecordDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordDeleteRequest*>(&to_msg);
  auto& from = static_cast<const RecordDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordDeleteRequest::CopyFrom(const RecordDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RecordDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordDeleteRequest::InternalSwap(RecordDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata RecordDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[32]);
}
// ===================================================================

class RecordGetDependencyGraphRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordGetDependencyGraphRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordGetDependencyGraphRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordGetDependencyGraphRequest::RecordGetDependencyGraphRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordGetDependencyGraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordGetDependencyGraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RecordGetDependencyGraphRequest::RecordGetDependencyGraphRequest(
    ::google::protobuf::Arena* arena,
    const RecordGetDependencyGraphRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordGetDependencyGraphRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordGetDependencyGraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordGetDependencyGraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RecordGetDependencyGraphRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordGetDependencyGraphRequest::~RecordGetDependencyGraphRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordGetDependencyGraphRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordGetDependencyGraphRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordGetDependencyGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordGetDependencyGraphRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordGetDependencyGraphRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> RecordGetDependencyGraphRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordGetDependencyGraphRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordGetDependencyGraphRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordGetDependencyGraphRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordGetDependencyGraphRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\2\0\0\0\0\0\0"
    "SDMS.Auth.RecordGetDependencyGraphRequest"
    "id"
  }},
};

::uint8_t* RecordGetDependencyGraphRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordGetDependencyGraphRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordGetDependencyGraphRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordGetDependencyGraphRequest)
  return target;
}

::size_t RecordGetDependencyGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordGetDependencyGraphRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordGetDependencyGraphRequest::_class_data_ = {
    RecordGetDependencyGraphRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordGetDependencyGraphRequest::GetClassData() const {
  return &_class_data_;
}

void RecordGetDependencyGraphRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordGetDependencyGraphRequest*>(&to_msg);
  auto& from = static_cast<const RecordGetDependencyGraphRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordGetDependencyGraphRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordGetDependencyGraphRequest::CopyFrom(const RecordGetDependencyGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordGetDependencyGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordGetDependencyGraphRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordGetDependencyGraphRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordGetDependencyGraphRequest::InternalSwap(RecordGetDependencyGraphRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata RecordGetDependencyGraphRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[33]);
}
// ===================================================================

class RecordAllocChangeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordAllocChangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_._has_bits_);
  static void set_has_repo_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proj_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_check(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordAllocChangeRequest::RecordAllocChangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordAllocChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordAllocChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_{visibility, arena, from.id_},
        repo_id_(arena, from.repo_id_),
        proj_id_(arena, from.proj_id_) {}

RecordAllocChangeRequest::RecordAllocChangeRequest(
    ::google::protobuf::Arena* arena,
    const RecordAllocChangeRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordAllocChangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.check_ = from._impl_.check_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordAllocChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordAllocChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_{visibility, arena},
        repo_id_(arena),
        proj_id_(arena) {}

inline void RecordAllocChangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.check_ = {};
}
RecordAllocChangeRequest::~RecordAllocChangeRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordAllocChangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordAllocChangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_id_.Destroy();
  _impl_.proj_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordAllocChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordAllocChangeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.proj_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.check_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordAllocChangeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 59, 2> RecordAllocChangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordAllocChangeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool check = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordAllocChangeRequest, _impl_.check_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.check_)}},
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.id_)}},
    // required string repo_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.repo_id_)}},
    // optional string proj_id = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.proj_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // required string repo_id = 2;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.repo_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string proj_id = 3;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.proj_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool check = 4;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeRequest, _impl_.check_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\42\2\7\7\0\0\0\0"
    "SDMS.Auth.RecordAllocChangeRequest"
    "id"
    "repo_id"
    "proj_id"
  }},
};

::uint8_t* RecordAllocChangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordAllocChangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordAllocChangeRequest.id");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo_id = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordAllocChangeRequest.repo_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string proj_id = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_proj_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordAllocChangeRequest.proj_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bool check = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_check(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordAllocChangeRequest)
  return target;
}

::size_t RecordAllocChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordAllocChangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  // required string repo_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string proj_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_proj_id());
    }

    // optional bool check = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordAllocChangeRequest::_class_data_ = {
    RecordAllocChangeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordAllocChangeRequest::GetClassData() const {
  return &_class_data_;
}

void RecordAllocChangeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordAllocChangeRequest*>(&to_msg);
  auto& from = static_cast<const RecordAllocChangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordAllocChangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo_id(from._internal_repo_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_proj_id(from._internal_proj_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.check_ = from._impl_.check_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordAllocChangeRequest::CopyFrom(const RecordAllocChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordAllocChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordAllocChangeRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordAllocChangeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordAllocChangeRequest::InternalSwap(RecordAllocChangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_id_, &other->_impl_.repo_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proj_id_, &other->_impl_.proj_id_, arena);
        swap(_impl_.check_, other->_impl_.check_);
}

::google::protobuf::Metadata RecordAllocChangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[34]);
}
// ===================================================================

class RecordAllocChangeReply::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordAllocChangeReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_._has_bits_);
  static void set_has_act_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_act_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tot_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_data_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_rec_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_rec_count(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::SDMS::TaskData& task(const RecordAllocChangeReply* msg);
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000fe) ^ 0x000000fe) != 0;
  }
};

const ::SDMS::TaskData& RecordAllocChangeReply::_Internal::task(const RecordAllocChangeReply* msg) {
  return *msg->_impl_.task_;
}
void RecordAllocChangeReply::clear_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RecordAllocChangeReply::RecordAllocChangeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordAllocChangeReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordAllocChangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RecordAllocChangeReply::RecordAllocChangeReply(
    ::google::protobuf::Arena* arena,
    const RecordAllocChangeReply& from)
    : ::google::protobuf::Message(arena) {
  RecordAllocChangeReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::TaskData>(arena, *from._impl_.task_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, act_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, act_size_),
           offsetof(Impl_, rec_count_) -
               offsetof(Impl_, act_size_) +
               sizeof(Impl_::rec_count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordAllocChangeReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordAllocChangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RecordAllocChangeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_),
           0,
           offsetof(Impl_, rec_count_) -
               offsetof(Impl_, task_) +
               sizeof(Impl_::rec_count_));
}
RecordAllocChangeReply::~RecordAllocChangeReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordAllocChangeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordAllocChangeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordAllocChangeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordAllocChangeReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.act_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rec_count_) -
        reinterpret_cast<char*>(&_impl_.act_size_)) + sizeof(_impl_.rec_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordAllocChangeReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 0, 2> RecordAllocChangeReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordAllocChangeReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .SDMS.TaskData task = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.task_)}},
    // required uint32 act_cnt = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordAllocChangeReply, _impl_.act_cnt_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.act_cnt_)}},
    // required uint64 act_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RecordAllocChangeReply, _impl_.act_size_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.act_size_)}},
    // required uint32 tot_cnt = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordAllocChangeReply, _impl_.tot_cnt_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.tot_cnt_)}},
    // required uint64 data_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RecordAllocChangeReply, _impl_.data_limit_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.data_limit_)}},
    // required uint64 data_size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RecordAllocChangeReply, _impl_.data_size_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.data_size_)}},
    // required uint32 rec_limit = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordAllocChangeReply, _impl_.rec_limit_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.rec_limit_)}},
    // required uint32 rec_count = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordAllocChangeReply, _impl_.rec_count_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.rec_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 act_cnt = 1;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.act_cnt_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 act_size = 2;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.act_size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 tot_cnt = 3;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.tot_cnt_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 data_limit = 4;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.data_limit_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint64 data_size = 5;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.data_size_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 rec_limit = 6;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.rec_limit_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 rec_count = 7;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.rec_count_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .SDMS.TaskData task = 8;
    {PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::TaskData>()},
  }}, {{
  }},
};

::uint8_t* RecordAllocChangeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordAllocChangeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 act_cnt = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_act_cnt(), target);
  }

  // required uint64 act_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_act_size(), target);
  }

  // required uint32 tot_cnt = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_tot_cnt(), target);
  }

  // required uint64 data_limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_data_limit(), target);
  }

  // required uint64 data_size = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_data_size(), target);
  }

  // required uint32 rec_limit = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_rec_limit(), target);
  }

  // required uint32 rec_count = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_rec_count(), target);
  }

  // optional .SDMS.TaskData task = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::task(this),
        _Internal::task(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordAllocChangeReply)
  return target;
}

::size_t RecordAllocChangeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordAllocChangeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SDMS.TaskData task = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  if (cached_has_bits & 0x000000feu) {
    // required uint64 act_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_act_size());
    }

    // required uint32 act_cnt = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_act_cnt());
    }

    // required uint32 tot_cnt = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tot_cnt());
    }

    // required uint64 data_limit = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_limit());
    }

    // required uint64 data_size = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_size());
    }

    // required uint32 rec_limit = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_limit());
    }

    // required uint32 rec_count = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordAllocChangeReply::_class_data_ = {
    RecordAllocChangeReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordAllocChangeReply::GetClassData() const {
  return &_class_data_;
}

void RecordAllocChangeReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordAllocChangeReply*>(&to_msg);
  auto& from = static_cast<const RecordAllocChangeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordAllocChangeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_task()->::SDMS::TaskData::MergeFrom(
          from._internal_task());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.act_size_ = from._impl_.act_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.act_cnt_ = from._impl_.act_cnt_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tot_cnt_ = from._impl_.tot_cnt_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.data_limit_ = from._impl_.data_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.data_size_ = from._impl_.data_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.rec_limit_ = from._impl_.rec_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.rec_count_ = from._impl_.rec_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordAllocChangeReply::CopyFrom(const RecordAllocChangeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordAllocChangeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordAllocChangeReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.task_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* RecordAllocChangeReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordAllocChangeReply::InternalSwap(RecordAllocChangeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.rec_count_)
      + sizeof(RecordAllocChangeReply::_impl_.rec_count_)
      - PROTOBUF_FIELD_OFFSET(RecordAllocChangeReply, _impl_.task_)>(
          reinterpret_cast<char*>(&_impl_.task_),
          reinterpret_cast<char*>(&other->_impl_.task_));
}

::google::protobuf::Metadata RecordAllocChangeReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[35]);
}
// ===================================================================

class RecordOwnerChangeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordOwnerChangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_._has_bits_);
  static void set_has_coll_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_repo_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_proj_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_check(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RecordOwnerChangeRequest::RecordOwnerChangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordOwnerChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordOwnerChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_{visibility, arena, from.id_},
        coll_id_(arena, from.coll_id_),
        repo_id_(arena, from.repo_id_),
        proj_id_(arena, from.proj_id_) {}

RecordOwnerChangeRequest::RecordOwnerChangeRequest(
    ::google::protobuf::Arena* arena,
    const RecordOwnerChangeRequest& from)
    : ::google::protobuf::Message(arena) {
  RecordOwnerChangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.check_ = from._impl_.check_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordOwnerChangeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RecordOwnerChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_{visibility, arena},
        coll_id_(arena),
        repo_id_(arena),
        proj_id_(arena) {}

inline void RecordOwnerChangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.check_ = {};
}
RecordOwnerChangeRequest::~RecordOwnerChangeRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordOwnerChangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordOwnerChangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.coll_id_.Destroy();
  _impl_.repo_id_.Destroy();
  _impl_.proj_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordOwnerChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordOwnerChangeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.coll_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.repo_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.proj_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.check_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordOwnerChangeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 66, 2> RecordOwnerChangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordOwnerChangeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.id_)}},
    // required string coll_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.coll_id_)}},
    // optional string repo_id = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.repo_id_)}},
    // optional string proj_id = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.proj_id_)}},
    // optional bool check = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordOwnerChangeRequest, _impl_.check_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.check_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // required string coll_id = 2;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.coll_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string repo_id = 3;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.repo_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string proj_id = 4;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.proj_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool check = 5;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeRequest, _impl_.check_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\42\2\7\7\7\0\0\0"
    "SDMS.Auth.RecordOwnerChangeRequest"
    "id"
    "coll_id"
    "repo_id"
    "proj_id"
  }},
};

::uint8_t* RecordOwnerChangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordOwnerChangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordOwnerChangeRequest.id");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required string coll_id = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_coll_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordOwnerChangeRequest.coll_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string repo_id = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_repo_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordOwnerChangeRequest.repo_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string proj_id = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_proj_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RecordOwnerChangeRequest.proj_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional bool check = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_check(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordOwnerChangeRequest)
  return target;
}

::size_t RecordOwnerChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordOwnerChangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  // required string coll_id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_coll_id());
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional string repo_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo_id());
    }

    // optional string proj_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_proj_id());
    }

    // optional bool check = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordOwnerChangeRequest::_class_data_ = {
    RecordOwnerChangeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordOwnerChangeRequest::GetClassData() const {
  return &_class_data_;
}

void RecordOwnerChangeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordOwnerChangeRequest*>(&to_msg);
  auto& from = static_cast<const RecordOwnerChangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordOwnerChangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_coll_id(from._internal_coll_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_repo_id(from._internal_repo_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_proj_id(from._internal_proj_id());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.check_ = from._impl_.check_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordOwnerChangeRequest::CopyFrom(const RecordOwnerChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordOwnerChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordOwnerChangeRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordOwnerChangeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordOwnerChangeRequest::InternalSwap(RecordOwnerChangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.coll_id_, &other->_impl_.coll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_id_, &other->_impl_.repo_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proj_id_, &other->_impl_.proj_id_, arena);
        swap(_impl_.check_, other->_impl_.check_);
}

::google::protobuf::Metadata RecordOwnerChangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[36]);
}
// ===================================================================

class RecordOwnerChangeReply::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordOwnerChangeReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_._has_bits_);
  static void set_has_act_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_act_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tot_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::SDMS::TaskData& task(const RecordOwnerChangeReply* msg);
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000e) ^ 0x0000000e) != 0;
  }
};

const ::SDMS::TaskData& RecordOwnerChangeReply::_Internal::task(const RecordOwnerChangeReply* msg) {
  return *msg->_impl_.task_;
}
void RecordOwnerChangeReply::clear_alloc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alloc_.Clear();
}
void RecordOwnerChangeReply::clear_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RecordOwnerChangeReply::RecordOwnerChangeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RecordOwnerChangeReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordOwnerChangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        alloc_{visibility, arena, from.alloc_} {}

RecordOwnerChangeReply::RecordOwnerChangeReply(
    ::google::protobuf::Arena* arena,
    const RecordOwnerChangeReply& from)
    : ::google::protobuf::Message(arena) {
  RecordOwnerChangeReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::TaskData>(arena, *from._impl_.task_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, act_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, act_size_),
           offsetof(Impl_, tot_cnt_) -
               offsetof(Impl_, act_size_) +
               sizeof(Impl_::tot_cnt_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RecordOwnerChangeReply)
}
inline PROTOBUF_NDEBUG_INLINE RecordOwnerChangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        alloc_{visibility, arena} {}

inline void RecordOwnerChangeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_),
           0,
           offsetof(Impl_, tot_cnt_) -
               offsetof(Impl_, task_) +
               sizeof(Impl_::tot_cnt_));
}
RecordOwnerChangeReply::~RecordOwnerChangeReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RecordOwnerChangeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordOwnerChangeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordOwnerChangeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RecordOwnerChangeReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alloc_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.act_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tot_cnt_) -
        reinterpret_cast<char*>(&_impl_.act_size_)) + sizeof(_impl_.tot_cnt_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordOwnerChangeReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> RecordOwnerChangeReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordOwnerChangeReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .SDMS.TaskData task = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 1, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.task_)}},
    // required uint32 act_cnt = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordOwnerChangeReply, _impl_.act_cnt_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.act_cnt_)}},
    // required uint64 act_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RecordOwnerChangeReply, _impl_.act_size_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.act_size_)}},
    // required uint32 tot_cnt = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordOwnerChangeReply, _impl_.tot_cnt_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.tot_cnt_)}},
    // repeated .SDMS.AllocData alloc = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.alloc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 act_cnt = 1;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.act_cnt_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 act_size = 2;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.act_size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 tot_cnt = 3;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.tot_cnt_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .SDMS.AllocData alloc = 4;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.alloc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .SDMS.TaskData task = 8;
    {PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.task_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocData>()},
    {::_pbi::TcParser::GetTable<::SDMS::TaskData>()},
  }}, {{
  }},
};

::uint8_t* RecordOwnerChangeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RecordOwnerChangeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 act_cnt = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_act_cnt(), target);
  }

  // required uint64 act_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_act_size(), target);
  }

  // required uint32 tot_cnt = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_tot_cnt(), target);
  }

  // repeated .SDMS.AllocData alloc = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alloc_size()); i < n; i++) {
    const auto& repfield = this->_internal_alloc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .SDMS.TaskData task = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::task(this),
        _Internal::task(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RecordOwnerChangeReply)
  return target;
}

::size_t RecordOwnerChangeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RecordOwnerChangeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.AllocData alloc = 4;
  total_size += 1UL * this->_internal_alloc_size();
  for (const auto& msg : this->_internal_alloc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .SDMS.TaskData task = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  if (cached_has_bits & 0x0000000eu) {
    // required uint64 act_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_act_size());
    }

    // required uint32 act_cnt = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_act_cnt());
    }

    // required uint32 tot_cnt = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tot_cnt());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordOwnerChangeReply::_class_data_ = {
    RecordOwnerChangeReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordOwnerChangeReply::GetClassData() const {
  return &_class_data_;
}

void RecordOwnerChangeReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordOwnerChangeReply*>(&to_msg);
  auto& from = static_cast<const RecordOwnerChangeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RecordOwnerChangeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alloc()->MergeFrom(
      from._internal_alloc());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_task()->::SDMS::TaskData::MergeFrom(
          from._internal_task());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.act_size_ = from._impl_.act_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.act_cnt_ = from._impl_.act_cnt_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tot_cnt_ = from._impl_.tot_cnt_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordOwnerChangeReply::CopyFrom(const RecordOwnerChangeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RecordOwnerChangeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordOwnerChangeReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_alloc()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.task_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* RecordOwnerChangeReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordOwnerChangeReply::InternalSwap(RecordOwnerChangeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.alloc_.InternalSwap(&other->_impl_.alloc_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.tot_cnt_)
      + sizeof(RecordOwnerChangeReply::_impl_.tot_cnt_)
      - PROTOBUF_FIELD_OFFSET(RecordOwnerChangeReply, _impl_.task_)>(
          reinterpret_cast<char*>(&_impl_.task_),
          reinterpret_cast<char*>(&other->_impl_.task_));
}

::google::protobuf::Metadata RecordOwnerChangeReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[37]);
}
// ===================================================================

class DataGetRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DataGetRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_encrypt(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_orig_fname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_check(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

DataGetRequest::DataGetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataGetRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataGetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_{visibility, arena, from.id_},
        path_(arena, from.path_) {}

DataGetRequest::DataGetRequest(
    ::google::protobuf::Arena* arena,
    const DataGetRequest& from)
    : ::google::protobuf::Message(arena) {
  DataGetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encrypt_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, encrypt_),
           offsetof(Impl_, check_) -
               offsetof(Impl_, encrypt_) +
               sizeof(Impl_::check_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataGetRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataGetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_{visibility, arena},
        path_(arena) {}

inline void DataGetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encrypt_),
           0,
           offsetof(Impl_, check_) -
               offsetof(Impl_, encrypt_) +
               sizeof(Impl_::check_));
}
DataGetRequest::~DataGetRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataGetRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataGetRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataGetRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.path_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.encrypt_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.check_) -
        reinterpret_cast<char*>(&_impl_.encrypt_)) + sizeof(_impl_.check_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataGetRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 39, 2> DataGetRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataGetRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.id_)}},
    // optional string path = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.path_)}},
    // optional .SDMS.Encryption encrypt = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 1, 2, PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.encrypt_)}},
    // optional bool orig_fname = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DataGetRequest, _impl_.orig_fname_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.orig_fname_)}},
    // optional bool check = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DataGetRequest, _impl_.check_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.check_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string path = 2;
    {PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.Encryption encrypt = 3;
    {PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.encrypt_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool orig_fname = 4;
    {PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.orig_fname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool check = 5;
    {PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.check_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {0, 3},
  }}, {{
    "\30\2\4\0\0\0\0\0"
    "SDMS.Auth.DataGetRequest"
    "id"
    "path"
  }},
};

::uint8_t* DataGetRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataGetRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataGetRequest.id");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataGetRequest.path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .SDMS.Encryption encrypt = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_encrypt(), target);
  }

  // optional bool orig_fname = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_orig_fname(), target);
  }

  // optional bool check = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_check(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataGetRequest)
  return target;
}

::size_t DataGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataGetRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string path = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

    // optional .SDMS.Encryption encrypt = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_encrypt());
    }

    // optional bool orig_fname = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool check = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataGetRequest::_class_data_ = {
    DataGetRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataGetRequest::GetClassData() const {
  return &_class_data_;
}

void DataGetRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataGetRequest*>(&to_msg);
  auto& from = static_cast<const DataGetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataGetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.encrypt_ = from._impl_.encrypt_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.orig_fname_ = from._impl_.orig_fname_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.check_ = from._impl_.check_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataGetRequest::CopyFrom(const DataGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataGetRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataGetRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataGetRequest::InternalSwap(DataGetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.check_)
      + sizeof(DataGetRequest::_impl_.check_)
      - PROTOBUF_FIELD_OFFSET(DataGetRequest, _impl_.encrypt_)>(
          reinterpret_cast<char*>(&_impl_.encrypt_),
          reinterpret_cast<char*>(&other->_impl_.encrypt_));
}

::google::protobuf::Metadata DataGetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[38]);
}
// ===================================================================

class DataPutRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DataPutRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_encrypt(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ext(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_check(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DataPutRequest::DataPutRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataPutRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataPutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        path_(arena, from.path_),
        ext_(arena, from.ext_) {}

DataPutRequest::DataPutRequest(
    ::google::protobuf::Arena* arena,
    const DataPutRequest& from)
    : ::google::protobuf::Message(arena) {
  DataPutRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encrypt_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, encrypt_),
           offsetof(Impl_, check_) -
               offsetof(Impl_, encrypt_) +
               sizeof(Impl_::check_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataPutRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataPutRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        path_(arena),
        ext_(arena) {}

inline void DataPutRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encrypt_),
           0,
           offsetof(Impl_, check_) -
               offsetof(Impl_, encrypt_) +
               sizeof(Impl_::check_));
}
DataPutRequest::~DataPutRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataPutRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataPutRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.path_.Destroy();
  _impl_.ext_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataPutRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.ext_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.encrypt_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.check_) -
        reinterpret_cast<char*>(&_impl_.encrypt_)) + sizeof(_impl_.check_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataPutRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 42, 2> DataPutRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataPutRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.id_)}},
    // optional string path = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.path_)}},
    // optional .SDMS.Encryption encrypt = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 3, 2, PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.encrypt_)}},
    // optional string ext = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.ext_)}},
    // optional bool check = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DataPutRequest, _impl_.check_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.check_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string path = 2;
    {PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.Encryption encrypt = 3;
    {PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.encrypt_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string ext = 4;
    {PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.ext_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool check = 5;
    {PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.check_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {0, 3},
  }}, {{
    "\30\2\4\0\3\0\0\0"
    "SDMS.Auth.DataPutRequest"
    "id"
    "path"
    "ext"
  }},
};

::uint8_t* DataPutRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataPutRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPutRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPutRequest.path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .SDMS.Encryption encrypt = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_encrypt(), target);
  }

  // optional string ext = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_ext();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPutRequest.ext");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional bool check = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_check(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataPutRequest)
  return target;
}

::size_t DataPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataPutRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string path = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

    // optional string ext = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ext());
    }

    // optional .SDMS.Encryption encrypt = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_encrypt());
    }

    // optional bool check = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataPutRequest::_class_data_ = {
    DataPutRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataPutRequest::GetClassData() const {
  return &_class_data_;
}

void DataPutRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataPutRequest*>(&to_msg);
  auto& from = static_cast<const DataPutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataPutRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_ext(from._internal_ext());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.encrypt_ = from._impl_.encrypt_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.check_ = from._impl_.check_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataPutRequest::CopyFrom(const DataPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataPutRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* DataPutRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataPutRequest::InternalSwap(DataPutRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ext_, &other->_impl_.ext_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.check_)
      + sizeof(DataPutRequest::_impl_.check_)
      - PROTOBUF_FIELD_OFFSET(DataPutRequest, _impl_.encrypt_)>(
          reinterpret_cast<char*>(&_impl_.encrypt_),
          reinterpret_cast<char*>(&other->_impl_.encrypt_));
}

::google::protobuf::Metadata DataPutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[39]);
}
// ===================================================================

class DataGetReply::_Internal {
 public:
  using HasBits = decltype(std::declval<DataGetReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_._has_bits_);
  static const ::SDMS::TaskData& task(const DataGetReply* msg);
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::SDMS::TaskData& DataGetReply::_Internal::task(const DataGetReply* msg) {
  return *msg->_impl_.task_;
}
void DataGetReply::clear_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.item_.Clear();
}
void DataGetReply::clear_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DataGetReply::DataGetReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataGetReply)
}
inline PROTOBUF_NDEBUG_INLINE DataGetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_{visibility, arena, from.item_} {}

DataGetReply::DataGetReply(
    ::google::protobuf::Arena* arena,
    const DataGetReply& from)
    : ::google::protobuf::Message(arena) {
  DataGetReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::TaskData>(arena, *from._impl_.task_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataGetReply)
}
inline PROTOBUF_NDEBUG_INLINE DataGetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        item_{visibility, arena} {}

inline void DataGetReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
DataGetReply::~DataGetReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataGetReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataGetReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.task_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataGetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataGetReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataGetReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DataGetReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataGetReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .SDMS.TaskData task = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_.task_)}},
    // repeated .SDMS.ListingData item = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.ListingData item = 1;
    {PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .SDMS.TaskData task = 2;
    {PROTOBUF_FIELD_OFFSET(DataGetReply, _impl_.task_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
    {::_pbi::TcParser::GetTable<::SDMS::TaskData>()},
  }}, {{
  }},
};

::uint8_t* DataGetReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataGetReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_size()); i < n; i++) {
    const auto& repfield = this->_internal_item().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SDMS.TaskData task = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::task(this),
        _Internal::task(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataGetReply)
  return target;
}

::size_t DataGetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataGetReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->_internal_item()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .SDMS.TaskData task = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataGetReply::_class_data_ = {
    DataGetReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataGetReply::GetClassData() const {
  return &_class_data_;
}

void DataGetReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataGetReply*>(&to_msg);
  auto& from = static_cast<const DataGetReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataGetReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(
      from._internal_item());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_task()->::SDMS::TaskData::MergeFrom(
        from._internal_task());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataGetReply::CopyFrom(const DataGetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataGetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataGetReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_item()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.task_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* DataGetReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataGetReply::InternalSwap(DataGetReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata DataGetReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[40]);
}
// ===================================================================

class DataPutReply::_Internal {
 public:
  using HasBits = decltype(std::declval<DataPutReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_._has_bits_);
  static const ::SDMS::RecordData& item(const DataPutReply* msg);
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::SDMS::TaskData& task(const DataPutReply* msg);
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::SDMS::RecordData& DataPutReply::_Internal::item(const DataPutReply* msg) {
  return *msg->_impl_.item_;
}
const ::SDMS::TaskData& DataPutReply::_Internal::task(const DataPutReply* msg) {
  return *msg->_impl_.task_;
}
void DataPutReply::clear_item() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DataPutReply::clear_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DataPutReply::DataPutReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataPutReply)
}
inline PROTOBUF_NDEBUG_INLINE DataPutReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DataPutReply::DataPutReply(
    ::google::protobuf::Arena* arena,
    const DataPutReply& from)
    : ::google::protobuf::Message(arena) {
  DataPutReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.item_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::RecordData>(arena, *from._impl_.item_)
                : nullptr;
  _impl_.task_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::SDMS::TaskData>(arena, *from._impl_.task_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataPutReply)
}
inline PROTOBUF_NDEBUG_INLINE DataPutReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DataPutReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_),
           0,
           offsetof(Impl_, task_) -
               offsetof(Impl_, item_) +
               sizeof(Impl_::task_));
}
DataPutReply::~DataPutReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataPutReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataPutReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.item_;
  delete _impl_.task_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataPutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataPutReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.item_ != nullptr);
      _impl_.item_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.task_ != nullptr);
      _impl_.task_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataPutReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DataPutReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataPutReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .SDMS.TaskData task = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.task_)}},
    // required .SDMS.RecordData item = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.RecordData item = 1;
    {PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .SDMS.TaskData task = 2;
    {PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.task_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordData>()},
    {::_pbi::TcParser::GetTable<::SDMS::TaskData>()},
  }}, {{
  }},
};

::uint8_t* DataPutReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataPutReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.RecordData item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // optional .SDMS.TaskData task = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::task(this),
        _Internal::task(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataPutReply)
  return target;
}

::size_t DataPutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataPutReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .SDMS.RecordData item = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.item_);
  }

  // optional .SDMS.TaskData task = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.task_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataPutReply::_class_data_ = {
    DataPutReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataPutReply::GetClassData() const {
  return &_class_data_;
}

void DataPutReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataPutReply*>(&to_msg);
  auto& from = static_cast<const DataPutReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataPutReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_item()->::SDMS::RecordData::MergeFrom(
          from._internal_item());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_task()->::SDMS::TaskData::MergeFrom(
          from._internal_task());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataPutReply::CopyFrom(const DataPutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataPutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataPutReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.item_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.task_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* DataPutReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataPutReply::InternalSwap(DataPutReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.task_)
      + sizeof(DataPutReply::_impl_.task_)
      - PROTOBUF_FIELD_OFFSET(DataPutReply, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::google::protobuf::Metadata DataPutReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[41]);
}
// ===================================================================

class DataDeleteRequest::_Internal {
 public:
};

DataDeleteRequest::DataDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

DataDeleteRequest::DataDeleteRequest(
    ::google::protobuf::Arena* arena,
    const DataDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  DataDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void DataDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataDeleteRequest::~DataDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> DataDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(DataDeleteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.DataDeleteRequest"
    "id"
  }},
};

::uint8_t* DataDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataDeleteRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataDeleteRequest)
  return target;
}

::size_t DataDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataDeleteRequest::_class_data_ = {
    DataDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void DataDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataDeleteRequest*>(&to_msg);
  auto& from = static_cast<const DataDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataDeleteRequest::CopyFrom(const DataDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataDeleteRequest::InternalSwap(DataDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata DataDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[42]);
}
// ===================================================================

class DataPathRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DataPathRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

DataPathRequest::DataPathRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataPathRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataPathRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        domain_(arena, from.domain_) {}

DataPathRequest::DataPathRequest(
    ::google::protobuf::Arena* arena,
    const DataPathRequest& from)
    : ::google::protobuf::Message(arena) {
  DataPathRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataPathRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataPathRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        domain_(arena) {}

inline void DataPathRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataPathRequest::~DataPathRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataPathRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataPathRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataPathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataPathRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataPathRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> DataPathRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataPathRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string domain = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_.domain_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string domain = 2;
    {PROTOBUF_FIELD_OFFSET(DataPathRequest, _impl_.domain_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\2\6\0\0\0\0\0"
    "SDMS.Auth.DataPathRequest"
    "id"
    "domain"
  }},
};

::uint8_t* DataPathRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataPathRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPathRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string domain = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPathRequest.domain");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataPathRequest)
  return target;
}

::size_t DataPathRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataPathRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string domain = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataPathRequest::_class_data_ = {
    DataPathRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataPathRequest::GetClassData() const {
  return &_class_data_;
}

void DataPathRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataPathRequest*>(&to_msg);
  auto& from = static_cast<const DataPathRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataPathRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_domain(from._internal_domain());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataPathRequest::CopyFrom(const DataPathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataPathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataPathRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* DataPathRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataPathRequest::InternalSwap(DataPathRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
}

::google::protobuf::Metadata DataPathRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[43]);
}
// ===================================================================

class DataPathReply::_Internal {
 public:
  using HasBits = decltype(std::declval<DataPathReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataPathReply, _impl_._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DataPathReply::DataPathReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.DataPathReply)
}
inline PROTOBUF_NDEBUG_INLINE DataPathReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

DataPathReply::DataPathReply(
    ::google::protobuf::Arena* arena,
    const DataPathReply& from)
    : ::google::protobuf::Message(arena) {
  DataPathReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.DataPathReply)
}
inline PROTOBUF_NDEBUG_INLINE DataPathReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void DataPathReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataPathReply::~DataPathReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.DataPathReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataPathReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataPathReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.DataPathReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.path_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataPathReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> DataPathReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataPathReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataPathReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string path = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DataPathReply, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string path = 1;
    {PROTOBUF_FIELD_OFFSET(DataPathReply, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\4\0\0\0\0\0\0"
    "SDMS.Auth.DataPathReply"
    "path"
  }},
};

::uint8_t* DataPathReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.DataPathReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.DataPathReply.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.DataPathReply)
  return target;
}

::size_t DataPathReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.DataPathReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string path = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataPathReply::_class_data_ = {
    DataPathReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataPathReply::GetClassData() const {
  return &_class_data_;
}

void DataPathReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataPathReply*>(&to_msg);
  auto& from = static_cast<const DataPathReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.DataPathReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataPathReply::CopyFrom(const DataPathReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.DataPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataPathReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* DataPathReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataPathReply::InternalSwap(DataPathReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata DataPathReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[44]);
}
// ===================================================================

class SearchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SearchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_._has_bits_);
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_published(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sch_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_meta_err(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_sort(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_sort_rev(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000040) ^ 0x00000040) != 0;
  }
};

SearchRequest::SearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        cat_tags_{visibility, arena, from.cat_tags_},
        coll_{visibility, arena, from.coll_},
        id_(arena, from.id_),
        text_(arena, from.text_),
        owner_(arena, from.owner_),
        creator_(arena, from.creator_),
        sch_id_(arena, from.sch_id_),
        meta_(arena, from.meta_) {}

SearchRequest::SearchRequest(
    ::google::protobuf::Arena* arena,
    const SearchRequest& from)
    : ::google::protobuf::Message(arena) {
  SearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mode_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        cat_tags_{visibility, arena},
        coll_{visibility, arena},
        id_(arena),
        text_(arena),
        owner_(arena),
        creator_(arena),
        sch_id_(arena),
        meta_(arena) {}

inline void SearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::count_));
}
SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.text_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.sch_id_.Destroy();
  _impl_.meta_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.cat_tags_.Clear();
  _impl_.coll_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.creator_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.sch_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.meta_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.from_) -
        reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.from_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&_impl_.to_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.to_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 2, 92, 2> SearchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .SDMS.SearchMode mode = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 6, 1, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.mode_)}},
    // optional bool published = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SearchRequest, _impl_.published_), 9>(),
     {16, 9, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.published_)}},
    // optional string id = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.id_)}},
    // optional string text = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.text_)}},
    // repeated string tags = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.tags_)}},
    // repeated string cat_tags = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.cat_tags_)}},
    // optional uint32 from = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchRequest, _impl_.from_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.from_)}},
    // optional uint32 to = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchRequest, _impl_.to_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.to_)}},
    // optional string owner = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.owner_)}},
    // optional string creator = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 3, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.creator_)}},
    // repeated string coll = 11;
    {::_pbi::TcParser::FastSR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.coll_)}},
    // optional string sch_id = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 4, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sch_id_)}},
    // optional string meta = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 5, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.meta_)}},
    // optional bool meta_err = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SearchRequest, _impl_.meta_err_), 10>(),
     {112, 10, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.meta_err_)}},
    // optional .SDMS.SortOption sort = 15;
    {::_pbi::TcParser::FastEr0S1,
     {120, 12, 5, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sort_)}},
    // optional bool sort_rev = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 11, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sort_rev_)}},
    // optional uint32 offset = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 13, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.offset_)}},
    // optional uint32 count = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 14, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.SearchMode mode = 1;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.mode_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool published = 2;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.published_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string id = 3;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string text = 4;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.text_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 5;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string cat_tags = 6;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.cat_tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional uint32 from = 7;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.from_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 to = 8;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.to_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string owner = 9;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.owner_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string creator = 10;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.creator_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string coll = 11;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.coll_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string sch_id = 12;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sch_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string meta = 13;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.meta_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool meta_err = 14;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.meta_err_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .SDMS.SortOption sort = 15;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sort_), _Internal::kHasBitsOffset + 12, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool sort_rev = 16;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.sort_rev_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 offset = 17;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.offset_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 18;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.count_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 2},
    {0, 6},
  }}, {{
    "\27\0\0\2\4\4\10\0\0\5\7\4\6\4\0\0\0\0\0\0\0\0\0\0"
    "SDMS.Auth.SearchRequest"
    "id"
    "text"
    "tags"
    "cat_tags"
    "owner"
    "creator"
    "coll"
    "sch_id"
    "meta"
  }},
};

::uint8_t* SearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.SearchMode mode = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  // optional bool published = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_published(), target);
  }

  // optional string id = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string text = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.text");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.tags");
    target = stream->WriteString(5, s, target);
  }

  // repeated string cat_tags = 6;
  for (int i = 0, n = this->_internal_cat_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_cat_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.cat_tags");
    target = stream->WriteString(6, s, target);
  }

  // optional uint32 from = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_from(), target);
  }

  // optional uint32 to = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_to(), target);
  }

  // optional string owner = 9;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.owner");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string creator = 10;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_creator();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.creator");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated string coll = 11;
  for (int i = 0, n = this->_internal_coll_size(); i < n; ++i) {
    const auto& s = this->_internal_coll().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.coll");
    target = stream->WriteString(11, s, target);
  }

  // optional string sch_id = 12;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_sch_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.sch_id");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional string meta = 13;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_meta();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SearchRequest.meta");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional bool meta_err = 14;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_meta_err(), target);
  }

  // optional .SDMS.SortOption sort = 15;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        15, this->_internal_sort(), target);
  }

  // optional bool sort_rev = 16;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_sort_rev(), target);
  }

  // optional uint32 offset = 17;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        17, this->_internal_offset(), target);
  }

  // optional uint32 count = 18;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        18, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SearchRequest)
  return target;
}

::size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated string cat_tags = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_cat_tags().size());
  for (int i = 0, n = _internal_cat_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_cat_tags().Get(i));
  }
  // repeated string coll = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_coll().size());
  for (int i = 0, n = _internal_coll().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_coll().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string id = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // optional string text = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text());
    }

    // optional string owner = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional string creator = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_creator());
    }

    // optional string sch_id = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sch_id());
    }

    // optional string meta = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_meta());
    }

  }
  // required .SDMS.SearchMode mode = 1;
  if (cached_has_bits & 0x00000040u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // optional uint32 from = 7;
  if (cached_has_bits & 0x00000080u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_from());
  }

  if (cached_has_bits & 0x00007f00u) {
    // optional uint32 to = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_to());
    }

    // optional bool published = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool meta_err = 14;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool sort_rev = 16;
    if (cached_has_bits & 0x00000800u) {
      total_size += 3;
    }

    // optional .SDMS.SortOption sort = 15;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_sort());
    }

    // optional uint32 offset = 17;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_offset());
    }

    // optional uint32 count = 18;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SearchRequest::_class_data_ = {
    SearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SearchRequest::GetClassData() const {
  return &_class_data_;
}

void SearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SearchRequest*>(&to_msg);
  auto& from = static_cast<const SearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_cat_tags()->MergeFrom(from._internal_cat_tags());
  _this->_internal_mutable_coll()->MergeFrom(from._internal_coll());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_creator(from._internal_creator());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_sch_id(from._internal_sch_id());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_meta(from._internal_meta());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.from_ = from._impl_.from_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.to_ = from._impl_.to_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.published_ = from._impl_.published_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.meta_err_ = from._impl_.meta_err_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.sort_rev_ = from._impl_.sort_rev_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.sort_ = from._impl_.sort_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SearchRequest::InternalSwap(SearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.cat_tags_.InternalSwap(&other->_impl_.cat_tags_);
  _impl_.coll_.InternalSwap(&other->_impl_.coll_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sch_id_, &other->_impl_.sch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.meta_, &other->_impl_.meta_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.count_)
      + sizeof(SearchRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[45]);
}
// ===================================================================

class CollViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CollViewRequest::CollViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

CollViewRequest::CollViewRequest(
    ::google::protobuf::Arena* arena,
    const CollViewRequest& from)
    : ::google::protobuf::Message(arena) {
  CollViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void CollViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollViewRequest::~CollViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> CollViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\2\0\0\0\0\0\0"
    "SDMS.Auth.CollViewRequest"
    "id"
  }},
};

::uint8_t* CollViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollViewRequest)
  return target;
}

::size_t CollViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollViewRequest::_class_data_ = {
    CollViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollViewRequest::GetClassData() const {
  return &_class_data_;
}

void CollViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollViewRequest*>(&to_msg);
  auto& from = static_cast<const CollViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollViewRequest::CopyFrom(const CollViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollViewRequest::InternalSwap(CollViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata CollViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[46]);
}
// ===================================================================

class CollDataReply::_Internal {
 public:
};

void CollDataReply::clear_coll() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.coll_.Clear();
}
void CollDataReply::clear_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_.Clear();
}
CollDataReply::CollDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollDataReply)
}
inline PROTOBUF_NDEBUG_INLINE CollDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : coll_{visibility, arena, from.coll_},
        update_{visibility, arena, from.update_},
        _cached_size_{0} {}

CollDataReply::CollDataReply(
    ::google::protobuf::Arena* arena,
    const CollDataReply& from)
    : ::google::protobuf::Message(arena) {
  CollDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollDataReply)
}
inline PROTOBUF_NDEBUG_INLINE CollDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : coll_{visibility, arena},
        update_{visibility, arena},
        _cached_size_{0} {}

inline void CollDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollDataReply::~CollDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.coll_.Clear();
  _impl_.update_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CollDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ListingData update = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CollDataReply, _impl_.update_)}},
    // repeated .SDMS.CollData coll = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CollDataReply, _impl_.coll_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.CollData coll = 1;
    {PROTOBUF_FIELD_OFFSET(CollDataReply, _impl_.coll_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SDMS.ListingData update = 2;
    {PROTOBUF_FIELD_OFFSET(CollDataReply, _impl_.update_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::CollData>()},
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
  }}, {{
  }},
};

::uint8_t* CollDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.CollData coll = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_coll_size()); i < n; i++) {
    const auto& repfield = this->_internal_coll().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .SDMS.ListingData update = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_update_size()); i < n; i++) {
    const auto& repfield = this->_internal_update().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollDataReply)
  return target;
}

::size_t CollDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.CollData coll = 1;
  total_size += 1UL * this->_internal_coll_size();
  for (const auto& msg : this->_internal_coll()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .SDMS.ListingData update = 2;
  total_size += 1UL * this->_internal_update_size();
  for (const auto& msg : this->_internal_update()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollDataReply::_class_data_ = {
    CollDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollDataReply::GetClassData() const {
  return &_class_data_;
}

void CollDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollDataReply*>(&to_msg);
  auto& from = static_cast<const CollDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_coll()->MergeFrom(
      from._internal_coll());
  _this->_internal_mutable_update()->MergeFrom(
      from._internal_update());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollDataReply::CopyFrom(const CollDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_coll()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_update()))
    return false;
  return true;
}

::_pbi::CachedSize* CollDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollDataReply::InternalSwap(CollDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.coll_.InternalSwap(&other->_impl_.coll_);
  _impl_.update_.InternalSwap(&other->_impl_.update_);
}

::google::protobuf::Metadata CollDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[47]);
}
// ===================================================================

class CollReadRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollReadRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CollReadRequest::CollReadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollReadRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollReadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

CollReadRequest::CollReadRequest(
    ::google::protobuf::Arena* arena,
    const CollReadRequest& from)
    : ::google::protobuf::Message(arena) {
  CollReadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, details_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, details_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, details_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollReadRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollReadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void CollReadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, details_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, details_) +
               sizeof(Impl_::count_));
}
CollReadRequest::~CollReadRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollReadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollReadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollReadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.details_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.details_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollReadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 36, 2> CollReadRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967266,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollReadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool details = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollReadRequest, _impl_.details_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.details_)}},
    // optional uint32 offset = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollReadRequest, _impl_.offset_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.offset_)}},
    // optional uint32 count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollReadRequest, _impl_.count_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool details = 3;
    {PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.details_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 offset = 4;
    {PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 5;
    {PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\2\0\0\0\0\0\0"
    "SDMS.Auth.CollReadRequest"
    "id"
  }},
};

::uint8_t* CollReadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollReadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollReadRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool details = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_details(), target);
  }

  // optional uint32 offset = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_offset(), target);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollReadRequest)
  return target;
}

::size_t CollReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollReadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional bool details = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional uint32 offset = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollReadRequest::_class_data_ = {
    CollReadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollReadRequest::GetClassData() const {
  return &_class_data_;
}

void CollReadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollReadRequest*>(&to_msg);
  auto& from = static_cast<const CollReadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollReadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.details_ = from._impl_.details_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollReadRequest::CopyFrom(const CollReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollReadRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollReadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollReadRequest::InternalSwap(CollReadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.count_)
      + sizeof(CollReadRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(CollReadRequest, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::google::protobuf::Metadata CollReadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[48]);
}
// ===================================================================

class CollCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_._has_bits_);
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CollCreateRequest::CollCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        alias_(arena, from.alias_),
        parent_id_(arena, from.parent_id_),
        topic_(arena, from.topic_) {}

CollCreateRequest::CollCreateRequest(
    ::google::protobuf::Arena* arena,
    const CollCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  CollCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        title_(arena),
        desc_(arena),
        alias_(arena),
        parent_id_(arena),
        topic_(arena) {}

inline void CollCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollCreateRequest::~CollCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.topic_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.topic_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 68, 2> CollCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967184,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string title = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.title_)}},
    // optional string desc = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.desc_)}},
    // optional string alias = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.alias_)}},
    // optional string parent_id = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.parent_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string topic = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.topic_)}},
    // repeated string tags = 7;
    {::_pbi::TcParser::FastSR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.tags_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string title = 1;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 2;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 3;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.alias_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string parent_id = 4;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.parent_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string topic = 6;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.topic_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 7;
    {PROTOBUF_FIELD_OFFSET(CollCreateRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\5\4\5\11\5\4\0"
    "SDMS.Auth.CollCreateRequest"
    "title"
    "desc"
    "alias"
    "parent_id"
    "topic"
    "tags"
  }},
};

::uint8_t* CollCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string title = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string desc = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.alias");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string parent_id = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_parent_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.parent_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string topic = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_topic();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.topic");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollCreateRequest.tags");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollCreateRequest)
  return target;
}

::size_t CollCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string title = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string alias = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string parent_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_parent_id());
    }

    // optional string topic = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_topic());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollCreateRequest::_class_data_ = {
    CollCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollCreateRequest::GetClassData() const {
  return &_class_data_;
}

void CollCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollCreateRequest*>(&to_msg);
  auto& from = static_cast<const CollCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_parent_id(from._internal_parent_id());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_topic(from._internal_topic());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollCreateRequest::CopyFrom(const CollCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollCreateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollCreateRequest::InternalSwap(CollCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_, &other->_impl_.topic_, arena);
}

::google::protobuf::Metadata CollCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[49]);
}
// ===================================================================

class CollUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_tags_clear(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CollUpdateRequest::CollUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        alias_(arena, from.alias_),
        topic_(arena, from.topic_) {}

CollUpdateRequest::CollUpdateRequest(
    ::google::protobuf::Arena* arena,
    const CollUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  CollUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.tags_clear_ = from._impl_.tags_clear_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        alias_(arena),
        topic_(arena) {}

inline void CollUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tags_clear_ = {};
}
CollUpdateRequest::~CollUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.topic_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.topic_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.tags_clear_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 61, 2> CollUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967056,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool tags_clear = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollUpdateRequest, _impl_.tags_clear_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.tags_clear_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.desc_)}},
    // optional string alias = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.alias_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string topic = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.topic_)}},
    // repeated string tags = 7;
    {::_pbi::TcParser::FastSR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.tags_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 4;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.alias_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string topic = 6;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.topic_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 7;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional bool tags_clear = 8;
    {PROTOBUF_FIELD_OFFSET(CollUpdateRequest, _impl_.tags_clear_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\2\5\4\5\5\4\0"
    "SDMS.Auth.CollUpdateRequest"
    "id"
    "title"
    "desc"
    "alias"
    "topic"
    "tags"
  }},
};

::uint8_t* CollUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string alias = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.alias");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string topic = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_topic();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.topic");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollUpdateRequest.tags");
    target = stream->WriteString(7, s, target);
  }

  // optional bool tags_clear = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_tags_clear(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollUpdateRequest)
  return target;
}

::size_t CollUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000003eu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string alias = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string topic = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_topic());
    }

    // optional bool tags_clear = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollUpdateRequest::_class_data_ = {
    CollUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void CollUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollUpdateRequest*>(&to_msg);
  auto& from = static_cast<const CollUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_topic(from._internal_topic());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.tags_clear_ = from._impl_.tags_clear_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollUpdateRequest::CopyFrom(const CollUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollUpdateRequest::InternalSwap(CollUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_, &other->_impl_.topic_, arena);
        swap(_impl_.tags_clear_, other->_impl_.tags_clear_);
}

::google::protobuf::Metadata CollUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[50]);
}
// ===================================================================

class CollDeleteRequest::_Internal {
 public:
};

CollDeleteRequest::CollDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

CollDeleteRequest::CollDeleteRequest(
    ::google::protobuf::Arena* arena,
    const CollDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  CollDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void CollDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollDeleteRequest::~CollDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> CollDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CollDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollDeleteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.CollDeleteRequest"
    "id"
  }},
};

::uint8_t* CollDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollDeleteRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollDeleteRequest)
  return target;
}

::size_t CollDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollDeleteRequest::_class_data_ = {
    CollDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void CollDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollDeleteRequest*>(&to_msg);
  auto& from = static_cast<const CollDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollDeleteRequest::CopyFrom(const CollDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollDeleteRequest::InternalSwap(CollDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata CollDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[51]);
}
// ===================================================================

class CollWriteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollWriteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rem_all(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CollWriteRequest::CollWriteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        add_{visibility, arena, from.add_},
        rem_{visibility, arena, from.rem_},
        id_(arena, from.id_) {}

CollWriteRequest::CollWriteRequest(
    ::google::protobuf::Arena* arena,
    const CollWriteRequest& from)
    : ::google::protobuf::Message(arena) {
  CollWriteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.rem_all_ = from._impl_.rem_all_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        add_{visibility, arena},
        rem_{visibility, arena},
        id_(arena) {}

inline void CollWriteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rem_all_ = {};
}
CollWriteRequest::~CollWriteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollWriteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollWriteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollWriteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.add_.Clear();
  _impl_.rem_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.rem_all_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollWriteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2> CollWriteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollWriteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool rem_all = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollWriteRequest, _impl_.rem_all_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.rem_all_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.id_)}},
    // repeated string add = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.add_)}},
    // repeated string rem = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.rem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string add = 2;
    {PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.add_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string rem = 3;
    {PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.rem_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional bool rem_all = 4;
    {PROTOBUF_FIELD_OFFSET(CollWriteRequest, _impl_.rem_all_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\32\2\3\3\0\0\0\0"
    "SDMS.Auth.CollWriteRequest"
    "id"
    "add"
    "rem"
  }},
};

::uint8_t* CollWriteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollWriteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollWriteRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string add = 2;
  for (int i = 0, n = this->_internal_add_size(); i < n; ++i) {
    const auto& s = this->_internal_add().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollWriteRequest.add");
    target = stream->WriteString(2, s, target);
  }

  // repeated string rem = 3;
  for (int i = 0, n = this->_internal_rem_size(); i < n; ++i) {
    const auto& s = this->_internal_rem().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollWriteRequest.rem");
    target = stream->WriteString(3, s, target);
  }

  // optional bool rem_all = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_rem_all(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollWriteRequest)
  return target;
}

::size_t CollWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollWriteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string add = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_add().size());
  for (int i = 0, n = _internal_add().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_add().Get(i));
  }
  // repeated string rem = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_rem().size());
  for (int i = 0, n = _internal_rem().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_rem().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional bool rem_all = 4;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollWriteRequest::_class_data_ = {
    CollWriteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollWriteRequest::GetClassData() const {
  return &_class_data_;
}

void CollWriteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollWriteRequest*>(&to_msg);
  auto& from = static_cast<const CollWriteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollWriteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_add()->MergeFrom(from._internal_add());
  _this->_internal_mutable_rem()->MergeFrom(from._internal_rem());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.rem_all_ = from._impl_.rem_all_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollWriteRequest::CopyFrom(const CollWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollWriteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollWriteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollWriteRequest::InternalSwap(CollWriteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.add_.InternalSwap(&other->_impl_.add_);
  _impl_.rem_.InternalSwap(&other->_impl_.rem_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.rem_all_, other->_impl_.rem_all_);
}

::google::protobuf::Metadata CollWriteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[52]);
}
// ===================================================================

class CollMoveRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollMoveRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_._has_bits_);
  static void set_has_src_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_dst_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CollMoveRequest::CollMoveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollMoveRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollMoveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_{visibility, arena, from.item_},
        src_id_(arena, from.src_id_),
        dst_id_(arena, from.dst_id_) {}

CollMoveRequest::CollMoveRequest(
    ::google::protobuf::Arena* arena,
    const CollMoveRequest& from)
    : ::google::protobuf::Message(arena) {
  CollMoveRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollMoveRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollMoveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        item_{visibility, arena},
        src_id_(arena),
        dst_id_(arena) {}

inline void CollMoveRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollMoveRequest::~CollMoveRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollMoveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollMoveRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.src_id_.Destroy();
  _impl_.dst_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollMoveRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.src_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.dst_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollMoveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2> CollMoveRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollMoveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string src_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.src_id_)}},
    // required string dst_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.dst_id_)}},
    // repeated string item = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string src_id = 1;
    {PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.src_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string dst_id = 2;
    {PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.dst_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string item = 3;
    {PROTOBUF_FIELD_OFFSET(CollMoveRequest, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\31\6\6\4\0\0\0\0"
    "SDMS.Auth.CollMoveRequest"
    "src_id"
    "dst_id"
    "item"
  }},
};

::uint8_t* CollMoveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollMoveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string src_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_src_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollMoveRequest.src_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string dst_id = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_dst_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollMoveRequest.dst_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string item = 3;
  for (int i = 0, n = this->_internal_item_size(); i < n; ++i) {
    const auto& s = this->_internal_item().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollMoveRequest.item");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollMoveRequest)
  return target;
}

::size_t CollMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollMoveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string item = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_item().size());
  for (int i = 0, n = _internal_item().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_item().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string src_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_src_id());
    }

    // required string dst_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dst_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollMoveRequest::_class_data_ = {
    CollMoveRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollMoveRequest::GetClassData() const {
  return &_class_data_;
}

void CollMoveRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollMoveRequest*>(&to_msg);
  auto& from = static_cast<const CollMoveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollMoveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(from._internal_item());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_src_id(from._internal_src_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_dst_id(from._internal_dst_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollMoveRequest::CopyFrom(const CollMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollMoveRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollMoveRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollMoveRequest::InternalSwap(CollMoveRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_id_, &other->_impl_.src_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_id_, &other->_impl_.dst_id_, arena);
}

::google::protobuf::Metadata CollMoveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[53]);
}
// ===================================================================

class CollGetParentsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollGetParentsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_inclusive(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CollGetParentsRequest::CollGetParentsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollGetParentsRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollGetParentsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

CollGetParentsRequest::CollGetParentsRequest(
    ::google::protobuf::Arena* arena,
    const CollGetParentsRequest& from)
    : ::google::protobuf::Message(arena) {
  CollGetParentsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.inclusive_ = from._impl_.inclusive_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollGetParentsRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollGetParentsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void CollGetParentsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.inclusive_ = {};
}
CollGetParentsRequest::~CollGetParentsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollGetParentsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollGetParentsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollGetParentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollGetParentsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.inclusive_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollGetParentsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> CollGetParentsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollGetParentsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool inclusive = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CollGetParentsRequest, _impl_.inclusive_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_.inclusive_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool inclusive = 2;
    {PROTOBUF_FIELD_OFFSET(CollGetParentsRequest, _impl_.inclusive_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\37\2\0\0\0\0\0\0"
    "SDMS.Auth.CollGetParentsRequest"
    "id"
  }},
};

::uint8_t* CollGetParentsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollGetParentsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollGetParentsRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool inclusive = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_inclusive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollGetParentsRequest)
  return target;
}

::size_t CollGetParentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollGetParentsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional bool inclusive = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollGetParentsRequest::_class_data_ = {
    CollGetParentsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollGetParentsRequest::GetClassData() const {
  return &_class_data_;
}

void CollGetParentsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollGetParentsRequest*>(&to_msg);
  auto& from = static_cast<const CollGetParentsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollGetParentsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.inclusive_ = from._impl_.inclusive_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollGetParentsRequest::CopyFrom(const CollGetParentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollGetParentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollGetParentsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollGetParentsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollGetParentsRequest::InternalSwap(CollGetParentsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.inclusive_, other->_impl_.inclusive_);
}

::google::protobuf::Metadata CollGetParentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[54]);
}
// ===================================================================

class CollPathReply::_Internal {
 public:
};

void CollPathReply::clear_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.Clear();
}
CollPathReply::CollPathReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollPathReply)
}
inline PROTOBUF_NDEBUG_INLINE CollPathReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : path_{visibility, arena, from.path_},
        _cached_size_{0} {}

CollPathReply::CollPathReply(
    ::google::protobuf::Arena* arena,
    const CollPathReply& from)
    : ::google::protobuf::Message(arena) {
  CollPathReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollPathReply)
}
inline PROTOBUF_NDEBUG_INLINE CollPathReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_{visibility, arena},
        _cached_size_{0} {}

inline void CollPathReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CollPathReply::~CollPathReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollPathReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollPathReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollPathReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollPathReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollPathReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CollPathReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CollPathReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.PathData path = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CollPathReply, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.PathData path = 1;
    {PROTOBUF_FIELD_OFFSET(CollPathReply, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::PathData>()},
  }}, {{
  }},
};

::uint8_t* CollPathReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollPathReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.PathData path = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_path_size()); i < n; i++) {
    const auto& repfield = this->_internal_path().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollPathReply)
  return target;
}

::size_t CollPathReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollPathReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.PathData path = 1;
  total_size += 1UL * this->_internal_path_size();
  for (const auto& msg : this->_internal_path()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollPathReply::_class_data_ = {
    CollPathReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollPathReply::GetClassData() const {
  return &_class_data_;
}

void CollPathReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollPathReply*>(&to_msg);
  auto& from = static_cast<const CollPathReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollPathReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollPathReply::CopyFrom(const CollPathReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollPathReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_path()))
    return false;
  return true;
}

::_pbi::CachedSize* CollPathReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollPathReply::InternalSwap(CollPathReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
}

::google::protobuf::Metadata CollPathReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[55]);
}
// ===================================================================

class CollGetOffsetRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollGetOffsetRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_page_sz(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

CollGetOffsetRequest::CollGetOffsetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollGetOffsetRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollGetOffsetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        item_(arena, from.item_) {}

CollGetOffsetRequest::CollGetOffsetRequest(
    ::google::protobuf::Arena* arena,
    const CollGetOffsetRequest& from)
    : ::google::protobuf::Message(arena) {
  CollGetOffsetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.page_sz_ = from._impl_.page_sz_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollGetOffsetRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollGetOffsetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        item_(arena) {}

inline void CollGetOffsetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_sz_ = {};
}
CollGetOffsetRequest::~CollGetOffsetRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollGetOffsetRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollGetOffsetRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.item_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollGetOffsetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollGetOffsetRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.item_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.page_sz_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollGetOffsetRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 45, 2> CollGetOffsetRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollGetOffsetRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.id_)}},
    // required string item = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.item_)}},
    // required uint32 page_sz = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollGetOffsetRequest, _impl_.page_sz_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.page_sz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string item = 2;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.item_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 page_sz = 3;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetRequest, _impl_.page_sz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\36\2\4\0\0\0\0\0"
    "SDMS.Auth.CollGetOffsetRequest"
    "id"
    "item"
  }},
};

::uint8_t* CollGetOffsetRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollGetOffsetRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollGetOffsetRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string item = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_item();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollGetOffsetRequest.item");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required uint32 page_sz = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_page_sz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollGetOffsetRequest)
  return target;
}

::size_t CollGetOffsetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollGetOffsetRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string item = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_item());
    }

    // required uint32 page_sz = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_page_sz());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollGetOffsetRequest::_class_data_ = {
    CollGetOffsetRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollGetOffsetRequest::GetClassData() const {
  return &_class_data_;
}

void CollGetOffsetRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollGetOffsetRequest*>(&to_msg);
  auto& from = static_cast<const CollGetOffsetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollGetOffsetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_item(from._internal_item());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.page_sz_ = from._impl_.page_sz_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollGetOffsetRequest::CopyFrom(const CollGetOffsetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollGetOffsetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollGetOffsetRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollGetOffsetRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollGetOffsetRequest::InternalSwap(CollGetOffsetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
        swap(_impl_.page_sz_, other->_impl_.page_sz_);
}

::google::protobuf::Metadata CollGetOffsetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[56]);
}
// ===================================================================

class CollGetOffsetReply::_Internal {
 public:
  using HasBits = decltype(std::declval<CollGetOffsetReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

CollGetOffsetReply::CollGetOffsetReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollGetOffsetReply)
}
inline PROTOBUF_NDEBUG_INLINE CollGetOffsetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        item_(arena, from.item_) {}

CollGetOffsetReply::CollGetOffsetReply(
    ::google::protobuf::Arena* arena,
    const CollGetOffsetReply& from)
    : ::google::protobuf::Message(arena) {
  CollGetOffsetReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollGetOffsetReply)
}
inline PROTOBUF_NDEBUG_INLINE CollGetOffsetReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        item_(arena) {}

inline void CollGetOffsetReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
CollGetOffsetReply::~CollGetOffsetReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollGetOffsetReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollGetOffsetReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.item_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollGetOffsetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollGetOffsetReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.item_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.offset_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollGetOffsetReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> CollGetOffsetReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollGetOffsetReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.id_)}},
    // required string item = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.item_)}},
    // required uint32 offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollGetOffsetReply, _impl_.offset_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string item = 2;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.item_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 offset = 3;
    {PROTOBUF_FIELD_OFFSET(CollGetOffsetReply, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\34\2\4\0\0\0\0\0"
    "SDMS.Auth.CollGetOffsetReply"
    "id"
    "item"
  }},
};

::uint8_t* CollGetOffsetReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollGetOffsetReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollGetOffsetReply.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string item = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_item();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollGetOffsetReply.item");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required uint32 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollGetOffsetReply)
  return target;
}

::size_t CollGetOffsetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollGetOffsetReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string item = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_item());
    }

    // required uint32 offset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollGetOffsetReply::_class_data_ = {
    CollGetOffsetReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollGetOffsetReply::GetClassData() const {
  return &_class_data_;
}

void CollGetOffsetReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollGetOffsetReply*>(&to_msg);
  auto& from = static_cast<const CollGetOffsetReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollGetOffsetReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_item(from._internal_item());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollGetOffsetReply::CopyFrom(const CollGetOffsetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollGetOffsetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollGetOffsetReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollGetOffsetReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollGetOffsetReply::InternalSwap(CollGetOffsetReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata CollGetOffsetReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[57]);
}
// ===================================================================

class CollListPublishedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CollListPublishedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CollListPublishedRequest::CollListPublishedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.CollListPublishedRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollListPublishedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

CollListPublishedRequest::CollListPublishedRequest(
    ::google::protobuf::Arena* arena,
    const CollListPublishedRequest& from)
    : ::google::protobuf::Message(arena) {
  CollListPublishedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.CollListPublishedRequest)
}
inline PROTOBUF_NDEBUG_INLINE CollListPublishedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void CollListPublishedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
CollListPublishedRequest::~CollListPublishedRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.CollListPublishedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollListPublishedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollListPublishedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.CollListPublishedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollListPublishedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2> CollListPublishedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollListPublishedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string subject = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.subject_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollListPublishedRequest, _impl_.offset_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollListPublishedRequest, _impl_.count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string subject = 1;
    {PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\7\0\0\0\0\0\0"
    "SDMS.Auth.CollListPublishedRequest"
    "subject"
  }},
};

::uint8_t* CollListPublishedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.CollListPublishedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string subject = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.CollListPublishedRequest.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.CollListPublishedRequest)
  return target;
}

::size_t CollListPublishedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.CollListPublishedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string subject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollListPublishedRequest::_class_data_ = {
    CollListPublishedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollListPublishedRequest::GetClassData() const {
  return &_class_data_;
}

void CollListPublishedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollListPublishedRequest*>(&to_msg);
  auto& from = static_cast<const CollListPublishedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.CollListPublishedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollListPublishedRequest::CopyFrom(const CollListPublishedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.CollListPublishedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollListPublishedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CollListPublishedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollListPublishedRequest::InternalSwap(CollListPublishedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.count_)
      + sizeof(CollListPublishedRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(CollListPublishedRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata CollListPublishedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[58]);
}
// ===================================================================

class GroupCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupCreateRequest, _impl_._has_bits_);
  static const ::SDMS::GroupData& group(const GroupCreateRequest* msg);
  static void set_has_group(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::SDMS::GroupData& GroupCreateRequest::_Internal::group(const GroupCreateRequest* msg) {
  return *msg->_impl_.group_;
}
void GroupCreateRequest::clear_group() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.group_ != nullptr) _impl_.group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GroupCreateRequest::GroupCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GroupCreateRequest::GroupCreateRequest(
    ::google::protobuf::Arena* arena,
    const GroupCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  GroupCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.group_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::GroupData>(arena, *from._impl_.group_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GroupCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_ = {};
}
GroupCreateRequest::~GroupCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.group_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.group_ != nullptr);
    _impl_.group_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GroupCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GroupCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .SDMS.GroupData group = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupCreateRequest, _impl_.group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.GroupData group = 1;
    {PROTOBUF_FIELD_OFFSET(GroupCreateRequest, _impl_.group_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::GroupData>()},
  }}, {{
  }},
};

::uint8_t* GroupCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.GroupData group = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::group(this),
        _Internal::group(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupCreateRequest)
  return target;
}

::size_t GroupCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .SDMS.GroupData group = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.group_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupCreateRequest::_class_data_ = {
    GroupCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupCreateRequest::GetClassData() const {
  return &_class_data_;
}

void GroupCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupCreateRequest*>(&to_msg);
  auto& from = static_cast<const GroupCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_group()->::SDMS::GroupData::MergeFrom(
        from._internal_group());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupCreateRequest::CopyFrom(const GroupCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.group_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* GroupCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupCreateRequest::InternalSwap(GroupCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.group_, other->_impl_.group_);
}

::google::protobuf::Metadata GroupCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[59]);
}
// ===================================================================

class GroupUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GroupUpdateRequest::GroupUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        add_uid_{visibility, arena, from.add_uid_},
        rem_uid_{visibility, arena, from.rem_uid_},
        uid_(arena, from.uid_),
        gid_(arena, from.gid_),
        title_(arena, from.title_),
        desc_(arena, from.desc_) {}

GroupUpdateRequest::GroupUpdateRequest(
    ::google::protobuf::Arena* arena,
    const GroupUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  GroupUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        add_uid_{visibility, arena},
        rem_uid_{visibility, arena},
        uid_(arena),
        gid_(arena),
        title_(arena),
        desc_(arena) {}

inline void GroupUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupUpdateRequest::~GroupUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.gid_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.add_uid_.Clear();
  _impl_.rem_uid_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 66, 2> GroupUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.uid_)}},
    // required string gid = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.gid_)}},
    // optional string title = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.title_)}},
    // optional string desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.desc_)}},
    // repeated string add_uid = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.add_uid_)}},
    // repeated string rem_uid = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.rem_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string gid = 2;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.gid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 3;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 4;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string add_uid = 5;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.add_uid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string rem_uid = 6;
    {PROTOBUF_FIELD_OFFSET(GroupUpdateRequest, _impl_.rem_uid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\34\3\3\5\4\7\7\0"
    "SDMS.Auth.GroupUpdateRequest"
    "uid"
    "gid"
    "title"
    "desc"
    "add_uid"
    "rem_uid"
  }},
};

::uint8_t* GroupUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string gid = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_gid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.gid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string title = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string desc = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string add_uid = 5;
  for (int i = 0, n = this->_internal_add_uid_size(); i < n; ++i) {
    const auto& s = this->_internal_add_uid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.add_uid");
    target = stream->WriteString(5, s, target);
  }

  // repeated string rem_uid = 6;
  for (int i = 0, n = this->_internal_rem_uid_size(); i < n; ++i) {
    const auto& s = this->_internal_rem_uid().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupUpdateRequest.rem_uid");
    target = stream->WriteString(6, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupUpdateRequest)
  return target;
}

::size_t GroupUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string add_uid = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_add_uid().size());
  for (int i = 0, n = _internal_add_uid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_add_uid().Get(i));
  }
  // repeated string rem_uid = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_rem_uid().size());
  for (int i = 0, n = _internal_rem_uid().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_rem_uid().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string gid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gid());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional string title = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupUpdateRequest::_class_data_ = {
    GroupUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void GroupUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupUpdateRequest*>(&to_msg);
  auto& from = static_cast<const GroupUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_add_uid()->MergeFrom(from._internal_add_uid());
  _this->_internal_mutable_rem_uid()->MergeFrom(from._internal_rem_uid());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_gid(from._internal_gid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_desc(from._internal_desc());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupUpdateRequest::CopyFrom(const GroupUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GroupUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupUpdateRequest::InternalSwap(GroupUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.add_uid_.InternalSwap(&other->_impl_.add_uid_);
  _impl_.rem_uid_.InternalSwap(&other->_impl_.rem_uid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gid_, &other->_impl_.gid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
}

::google::protobuf::Metadata GroupUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[60]);
}
// ===================================================================

class GroupDataReply::_Internal {
 public:
};

void GroupDataReply::clear_group() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.group_.Clear();
}
GroupDataReply::GroupDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupDataReply)
}
inline PROTOBUF_NDEBUG_INLINE GroupDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : group_{visibility, arena, from.group_},
        _cached_size_{0} {}

GroupDataReply::GroupDataReply(
    ::google::protobuf::Arena* arena,
    const GroupDataReply& from)
    : ::google::protobuf::Message(arena) {
  GroupDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupDataReply)
}
inline PROTOBUF_NDEBUG_INLINE GroupDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : group_{visibility, arena},
        _cached_size_{0} {}

inline void GroupDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupDataReply::~GroupDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GroupDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GroupDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.GroupData group = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GroupDataReply, _impl_.group_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.GroupData group = 1;
    {PROTOBUF_FIELD_OFFSET(GroupDataReply, _impl_.group_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::GroupData>()},
  }}, {{
  }},
};

::uint8_t* GroupDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.GroupData group = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_size()); i < n; i++) {
    const auto& repfield = this->_internal_group().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupDataReply)
  return target;
}

::size_t GroupDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.GroupData group = 1;
  total_size += 1UL * this->_internal_group_size();
  for (const auto& msg : this->_internal_group()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupDataReply::_class_data_ = {
    GroupDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupDataReply::GetClassData() const {
  return &_class_data_;
}

void GroupDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupDataReply*>(&to_msg);
  auto& from = static_cast<const GroupDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_group()->MergeFrom(
      from._internal_group());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupDataReply::CopyFrom(const GroupDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_group()))
    return false;
  return true;
}

::_pbi::CachedSize* GroupDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupDataReply::InternalSwap(GroupDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.group_.InternalSwap(&other->_impl_.group_);
}

::google::protobuf::Metadata GroupDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[61]);
}
// ===================================================================

class GroupDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupDeleteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GroupDeleteRequest::GroupDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_),
        gid_(arena, from.gid_) {}

GroupDeleteRequest::GroupDeleteRequest(
    ::google::protobuf::Arena* arena,
    const GroupDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  GroupDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena),
        gid_(arena) {}

inline void GroupDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupDeleteRequest::~GroupDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.gid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> GroupDeleteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string gid = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_.gid_)}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string gid = 2;
    {PROTOBUF_FIELD_OFFSET(GroupDeleteRequest, _impl_.gid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\3\3\0\0\0\0\0"
    "SDMS.Auth.GroupDeleteRequest"
    "uid"
    "gid"
  }},
};

::uint8_t* GroupDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupDeleteRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string gid = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_gid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupDeleteRequest.gid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupDeleteRequest)
  return target;
}

::size_t GroupDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string gid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupDeleteRequest::_class_data_ = {
    GroupDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void GroupDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupDeleteRequest*>(&to_msg);
  auto& from = static_cast<const GroupDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_gid(from._internal_gid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupDeleteRequest::CopyFrom(const GroupDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupDeleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GroupDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupDeleteRequest::InternalSwap(GroupDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gid_, &other->_impl_.gid_, arena);
}

::google::protobuf::Metadata GroupDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[62]);
}
// ===================================================================

class GroupListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupListRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GroupListRequest::GroupListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_) {}

GroupListRequest::GroupListRequest(
    ::google::protobuf::Arena* arena,
    const GroupListRequest& from)
    : ::google::protobuf::Message(arena) {
  GroupListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena) {}

inline void GroupListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupListRequest::~GroupListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.uid_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> GroupListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupListRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupListRequest, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(GroupListRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\3\0\0\0\0\0\0"
    "SDMS.Auth.GroupListRequest"
    "uid"
  }},
};

::uint8_t* GroupListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupListRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupListRequest)
  return target;
}

::size_t GroupListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string uid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupListRequest::_class_data_ = {
    GroupListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupListRequest::GetClassData() const {
  return &_class_data_;
}

void GroupListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupListRequest*>(&to_msg);
  auto& from = static_cast<const GroupListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupListRequest::CopyFrom(const GroupListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupListRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GroupListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupListRequest::InternalSwap(GroupListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
}

::google::protobuf::Metadata GroupListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[63]);
}
// ===================================================================

class GroupViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GroupViewRequest::GroupViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.GroupViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uid_(arena, from.uid_),
        gid_(arena, from.gid_) {}

GroupViewRequest::GroupViewRequest(
    ::google::protobuf::Arena* arena,
    const GroupViewRequest& from)
    : ::google::protobuf::Message(arena) {
  GroupViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.GroupViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE GroupViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uid_(arena),
        gid_(arena) {}

inline void GroupViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupViewRequest::~GroupViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.GroupViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.gid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.GroupViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> GroupViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string gid = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_.gid_)}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string gid = 2;
    {PROTOBUF_FIELD_OFFSET(GroupViewRequest, _impl_.gid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\3\3\0\0\0\0\0"
    "SDMS.Auth.GroupViewRequest"
    "uid"
    "gid"
  }},
};

::uint8_t* GroupViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.GroupViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupViewRequest.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string gid = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_gid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.GroupViewRequest.gid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.GroupViewRequest)
  return target;
}

::size_t GroupViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.GroupViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string gid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupViewRequest::_class_data_ = {
    GroupViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupViewRequest::GetClassData() const {
  return &_class_data_;
}

void GroupViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupViewRequest*>(&to_msg);
  auto& from = static_cast<const GroupViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.GroupViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_gid(from._internal_gid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupViewRequest::CopyFrom(const GroupViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.GroupViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GroupViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupViewRequest::InternalSwap(GroupViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gid_, &other->_impl_.gid_, arena);
}

::google::protobuf::Metadata GroupViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[64]);
}
// ===================================================================

class ACLViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ACLViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ACLViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ACLViewRequest::ACLViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ACLViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

ACLViewRequest::ACLViewRequest(
    ::google::protobuf::Arena* arena,
    const ACLViewRequest& from)
    : ::google::protobuf::Message(arena) {
  ACLViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ACLViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void ACLViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ACLViewRequest::~ACLViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ACLViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ACLViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> ACLViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ACLViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACLViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ACLViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ACLViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\2\0\0\0\0\0\0"
    "SDMS.Auth.ACLViewRequest"
    "id"
  }},
};

::uint8_t* ACLViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ACLViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ACLViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ACLViewRequest)
  return target;
}

::size_t ACLViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ACLViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLViewRequest::_class_data_ = {
    ACLViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLViewRequest::GetClassData() const {
  return &_class_data_;
}

void ACLViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLViewRequest*>(&to_msg);
  auto& from = static_cast<const ACLViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ACLViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLViewRequest::CopyFrom(const ACLViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ACLViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ACLViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLViewRequest::InternalSwap(ACLViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata ACLViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[65]);
}
// ===================================================================

class ACLUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ACLUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rules(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ACLUpdateRequest::ACLUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ACLUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        rules_(arena, from.rules_) {}

ACLUpdateRequest::ACLUpdateRequest(
    ::google::protobuf::Arena* arena,
    const ACLUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  ACLUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ACLUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        rules_(arena) {}

inline void ACLUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ACLUpdateRequest::~ACLUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ACLUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.rules_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ACLUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.rules_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> ACLUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACLUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string rules = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_.rules_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string rules = 2;
    {PROTOBUF_FIELD_OFFSET(ACLUpdateRequest, _impl_.rules_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\2\5\0\0\0\0\0"
    "SDMS.Auth.ACLUpdateRequest"
    "id"
    "rules"
  }},
};

::uint8_t* ACLUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ACLUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ACLUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string rules = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_rules();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ACLUpdateRequest.rules");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ACLUpdateRequest)
  return target;
}

::size_t ACLUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ACLUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional string rules = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rules());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLUpdateRequest::_class_data_ = {
    ACLUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void ACLUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLUpdateRequest*>(&to_msg);
  auto& from = static_cast<const ACLUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ACLUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_rules(from._internal_rules());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLUpdateRequest::CopyFrom(const ACLUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ACLUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ACLUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLUpdateRequest::InternalSwap(ACLUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rules_, &other->_impl_.rules_, arena);
}

::google::protobuf::Metadata ACLUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[66]);
}
// ===================================================================

class ACLSharedListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ACLSharedListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_._has_bits_);
  static void set_has_inc_users(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_inc_projects(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ACLSharedListRequest::ACLSharedListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ACLSharedListRequest)
}
ACLSharedListRequest::ACLSharedListRequest(
    ::google::protobuf::Arena* arena, const ACLSharedListRequest& from)
    : ACLSharedListRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ACLSharedListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ACLSharedListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, inc_users_),
           0,
           offsetof(Impl_, inc_projects_) -
               offsetof(Impl_, inc_users_) +
               sizeof(Impl_::inc_projects_));
}
ACLSharedListRequest::~ACLSharedListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ACLSharedListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLSharedListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLSharedListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ACLSharedListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.inc_users_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inc_projects_) -
      reinterpret_cast<char*>(&_impl_.inc_users_)) + sizeof(_impl_.inc_projects_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLSharedListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ACLSharedListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACLSharedListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool inc_users = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ACLSharedListRequest, _impl_.inc_users_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_users_)}},
    // optional bool inc_projects = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ACLSharedListRequest, _impl_.inc_projects_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_projects_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool inc_users = 2;
    {PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_users_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool inc_projects = 3;
    {PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_projects_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ACLSharedListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ACLSharedListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool inc_users = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_inc_users(), target);
  }

  // optional bool inc_projects = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_inc_projects(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ACLSharedListRequest)
  return target;
}

::size_t ACLSharedListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ACLSharedListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool inc_users = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool inc_projects = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLSharedListRequest::_class_data_ = {
    ACLSharedListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLSharedListRequest::GetClassData() const {
  return &_class_data_;
}

void ACLSharedListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLSharedListRequest*>(&to_msg);
  auto& from = static_cast<const ACLSharedListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ACLSharedListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.inc_users_ = from._impl_.inc_users_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.inc_projects_ = from._impl_.inc_projects_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLSharedListRequest::CopyFrom(const ACLSharedListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ACLSharedListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLSharedListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ACLSharedListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLSharedListRequest::InternalSwap(ACLSharedListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_projects_)
      + sizeof(ACLSharedListRequest::_impl_.inc_projects_)
      - PROTOBUF_FIELD_OFFSET(ACLSharedListRequest, _impl_.inc_users_)>(
          reinterpret_cast<char*>(&_impl_.inc_users_),
          reinterpret_cast<char*>(&other->_impl_.inc_users_));
}

::google::protobuf::Metadata ACLSharedListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[67]);
}
// ===================================================================

class ACLSharedListItemsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ACLSharedListItemsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ACLSharedListItemsRequest, _impl_._has_bits_);
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ACLSharedListItemsRequest::ACLSharedListItemsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ACLSharedListItemsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLSharedListItemsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        owner_(arena, from.owner_) {}

ACLSharedListItemsRequest::ACLSharedListItemsRequest(
    ::google::protobuf::Arena* arena,
    const ACLSharedListItemsRequest& from)
    : ::google::protobuf::Message(arena) {
  ACLSharedListItemsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ACLSharedListItemsRequest)
}
inline PROTOBUF_NDEBUG_INLINE ACLSharedListItemsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        owner_(arena) {}

inline void ACLSharedListItemsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ACLSharedListItemsRequest::~ACLSharedListItemsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ACLSharedListItemsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLSharedListItemsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.owner_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLSharedListItemsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ACLSharedListItemsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.owner_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLSharedListItemsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> ACLSharedListItemsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ACLSharedListItemsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACLSharedListItemsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string owner = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ACLSharedListItemsRequest, _impl_.owner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string owner = 2;
    {PROTOBUF_FIELD_OFFSET(ACLSharedListItemsRequest, _impl_.owner_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\5\0\0\0\0\0\0"
    "SDMS.Auth.ACLSharedListItemsRequest"
    "owner"
  }},
};

::uint8_t* ACLSharedListItemsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ACLSharedListItemsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string owner = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ACLSharedListItemsRequest.owner");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ACLSharedListItemsRequest)
  return target;
}

::size_t ACLSharedListItemsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ACLSharedListItemsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string owner = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLSharedListItemsRequest::_class_data_ = {
    ACLSharedListItemsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLSharedListItemsRequest::GetClassData() const {
  return &_class_data_;
}

void ACLSharedListItemsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLSharedListItemsRequest*>(&to_msg);
  auto& from = static_cast<const ACLSharedListItemsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ACLSharedListItemsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLSharedListItemsRequest::CopyFrom(const ACLSharedListItemsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ACLSharedListItemsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLSharedListItemsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ACLSharedListItemsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLSharedListItemsRequest::InternalSwap(ACLSharedListItemsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata ACLSharedListItemsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[68]);
}
// ===================================================================

class ACLDataReply::_Internal {
 public:
};

void ACLDataReply::clear_rule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rule_.Clear();
}
ACLDataReply::ACLDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ACLDataReply)
}
inline PROTOBUF_NDEBUG_INLINE ACLDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : rule_{visibility, arena, from.rule_},
        _cached_size_{0} {}

ACLDataReply::ACLDataReply(
    ::google::protobuf::Arena* arena,
    const ACLDataReply& from)
    : ::google::protobuf::Message(arena) {
  ACLDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ACLDataReply)
}
inline PROTOBUF_NDEBUG_INLINE ACLDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rule_{visibility, arena},
        _cached_size_{0} {}

inline void ACLDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ACLDataReply::~ACLDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ACLDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ACLDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rule_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ACLDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ACLDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ACLRule rule = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ACLDataReply, _impl_.rule_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.ACLRule rule = 1;
    {PROTOBUF_FIELD_OFFSET(ACLDataReply, _impl_.rule_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::ACLRule>()},
  }}, {{
  }},
};

::uint8_t* ACLDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ACLDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.ACLRule rule = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rule_size()); i < n; i++) {
    const auto& repfield = this->_internal_rule().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ACLDataReply)
  return target;
}

::size_t ACLDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ACLDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.ACLRule rule = 1;
  total_size += 1UL * this->_internal_rule_size();
  for (const auto& msg : this->_internal_rule()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLDataReply::_class_data_ = {
    ACLDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLDataReply::GetClassData() const {
  return &_class_data_;
}

void ACLDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLDataReply*>(&to_msg);
  auto& from = static_cast<const ACLDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ACLDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rule()->MergeFrom(
      from._internal_rule());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLDataReply::CopyFrom(const ACLDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ACLDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_rule()))
    return false;
  return true;
}

::_pbi::CachedSize* ACLDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLDataReply::InternalSwap(ACLDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rule_.InternalSwap(&other->_impl_.rule_);
}

::google::protobuf::Metadata ACLDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[69]);
}
// ===================================================================

class ProjectViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectViewRequest::ProjectViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

ProjectViewRequest::ProjectViewRequest(
    ::google::protobuf::Arena* arena,
    const ProjectViewRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void ProjectViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectViewRequest::~ProjectViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 39, 2> ProjectViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\2\0\0\0\0\0\0"
    "SDMS.Auth.ProjectViewRequest"
    "id"
  }},
};

::uint8_t* ProjectViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectViewRequest)
  return target;
}

::size_t ProjectViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectViewRequest::_class_data_ = {
    ProjectViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectViewRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectViewRequest*>(&to_msg);
  auto& from = static_cast<const ProjectViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectViewRequest::CopyFrom(const ProjectViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectViewRequest::InternalSwap(ProjectViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata ProjectViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[70]);
}
// ===================================================================

class ProjectDataReply::_Internal {
 public:
};

void ProjectDataReply::clear_proj() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.proj_.Clear();
}
ProjectDataReply::ProjectDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectDataReply)
}
inline PROTOBUF_NDEBUG_INLINE ProjectDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : proj_{visibility, arena, from.proj_},
        _cached_size_{0} {}

ProjectDataReply::ProjectDataReply(
    ::google::protobuf::Arena* arena,
    const ProjectDataReply& from)
    : ::google::protobuf::Message(arena) {
  ProjectDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectDataReply)
}
inline PROTOBUF_NDEBUG_INLINE ProjectDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proj_{visibility, arena},
        _cached_size_{0} {}

inline void ProjectDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectDataReply::~ProjectDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proj_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ProjectDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProjectDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ProjectData proj = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectDataReply, _impl_.proj_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.ProjectData proj = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectDataReply, _impl_.proj_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::ProjectData>()},
  }}, {{
  }},
};

::uint8_t* ProjectDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.ProjectData proj = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_proj_size()); i < n; i++) {
    const auto& repfield = this->_internal_proj().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectDataReply)
  return target;
}

::size_t ProjectDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.ProjectData proj = 1;
  total_size += 1UL * this->_internal_proj_size();
  for (const auto& msg : this->_internal_proj()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectDataReply::_class_data_ = {
    ProjectDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectDataReply::GetClassData() const {
  return &_class_data_;
}

void ProjectDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectDataReply*>(&to_msg);
  auto& from = static_cast<const ProjectDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_proj()->MergeFrom(
      from._internal_proj());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectDataReply::CopyFrom(const ProjectDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_proj()))
    return false;
  return true;
}

::_pbi::CachedSize* ProjectDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectDataReply::InternalSwap(ProjectDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.proj_.InternalSwap(&other->_impl_.proj_);
}

::google::protobuf::Metadata ProjectDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[71]);
}
// ===================================================================

class ProjectCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectCreateRequest::ProjectCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        member_{visibility, arena, from.member_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_) {}

ProjectCreateRequest::ProjectCreateRequest(
    ::google::protobuf::Arena* arena,
    const ProjectCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        member_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena) {}

inline void ProjectCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectCreateRequest::~ProjectCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  _impl_.member_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> ProjectCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.desc_)}},
    // repeated string admin = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.admin_)}},
    // repeated string member = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.member_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string admin = 4;
    {PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string member = 5;
    {PROTOBUF_FIELD_OFFSET(ProjectCreateRequest, _impl_.member_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\2\5\4\5\6\0\0"
    "SDMS.Auth.ProjectCreateRequest"
    "id"
    "title"
    "desc"
    "admin"
    "member"
  }},
};

::uint8_t* ProjectCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectCreateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectCreateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectCreateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated string admin = 4;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectCreateRequest.admin");
    target = stream->WriteString(4, s, target);
  }

  // repeated string member = 5;
  for (int i = 0, n = this->_internal_member_size(); i < n; ++i) {
    const auto& s = this->_internal_member().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectCreateRequest.member");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectCreateRequest)
  return target;
}

::size_t ProjectCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  // repeated string member = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_member().size());
  for (int i = 0, n = _internal_member().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_member().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectCreateRequest::_class_data_ = {
    ProjectCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectCreateRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectCreateRequest*>(&to_msg);
  auto& from = static_cast<const ProjectCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  _this->_internal_mutable_member()->MergeFrom(from._internal_member());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectCreateRequest::CopyFrom(const ProjectCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectCreateRequest::InternalSwap(ProjectCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  _impl_.member_.InternalSwap(&other->_impl_.member_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
}

::google::protobuf::Metadata ProjectCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[72]);
}
// ===================================================================

class ProjectUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_admin_set(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_member_set(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectUpdateRequest::ProjectUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        member_{visibility, arena, from.member_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_) {}

ProjectUpdateRequest::ProjectUpdateRequest(
    ::google::protobuf::Arena* arena,
    const ProjectUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, admin_set_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, admin_set_),
           offsetof(Impl_, member_set_) -
               offsetof(Impl_, admin_set_) +
               sizeof(Impl_::member_set_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        member_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena) {}

inline void ProjectUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, admin_set_),
           0,
           offsetof(Impl_, member_set_) -
               offsetof(Impl_, admin_set_) +
               sizeof(Impl_::member_set_));
}
ProjectUpdateRequest::~ProjectUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  _impl_.member_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.admin_set_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.member_set_) -
      reinterpret_cast<char*>(&_impl_.admin_set_)) + sizeof(_impl_.member_set_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 61, 2> ProjectUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.desc_)}},
    // optional bool admin_set = 4 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectUpdateRequest, _impl_.admin_set_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.admin_set_)}},
    // repeated string admin = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.admin_)}},
    // optional bool member_set = 6 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectUpdateRequest, _impl_.member_set_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.member_set_)}},
    // repeated string member = 7;
    {::_pbi::TcParser::FastSR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.member_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool admin_set = 4 [default = false];
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.admin_set_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string admin = 5;
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional bool member_set = 6 [default = false];
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.member_set_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string member = 7;
    {PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.member_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\2\5\4\0\5\0\6"
    "SDMS.Auth.ProjectUpdateRequest"
    "id"
    "title"
    "desc"
    "admin"
    "member"
  }},
};

::uint8_t* ProjectUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bool admin_set = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_admin_set(), target);
  }

  // repeated string admin = 5;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectUpdateRequest.admin");
    target = stream->WriteString(5, s, target);
  }

  // optional bool member_set = 6 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_member_set(), target);
  }

  // repeated string member = 7;
  for (int i = 0, n = this->_internal_member_size(); i < n; ++i) {
    const auto& s = this->_internal_member().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectUpdateRequest.member");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectUpdateRequest)
  return target;
}

::size_t ProjectUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  // repeated string member = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_member().size());
  for (int i = 0, n = _internal_member().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_member().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional bool admin_set = 4 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool member_set = 6 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectUpdateRequest::_class_data_ = {
    ProjectUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectUpdateRequest*>(&to_msg);
  auto& from = static_cast<const ProjectUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  _this->_internal_mutable_member()->MergeFrom(from._internal_member());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.admin_set_ = from._impl_.admin_set_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.member_set_ = from._impl_.member_set_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectUpdateRequest::CopyFrom(const ProjectUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectUpdateRequest::InternalSwap(ProjectUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  _impl_.member_.InternalSwap(&other->_impl_.member_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.member_set_)
      + sizeof(ProjectUpdateRequest::_impl_.member_set_)
      - PROTOBUF_FIELD_OFFSET(ProjectUpdateRequest, _impl_.admin_set_)>(
          reinterpret_cast<char*>(&_impl_.admin_set_),
          reinterpret_cast<char*>(&other->_impl_.admin_set_));
}

::google::protobuf::Metadata ProjectUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[73]);
}
// ===================================================================

class ProjectDeleteRequest::_Internal {
 public:
};

ProjectDeleteRequest::ProjectDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

ProjectDeleteRequest::ProjectDeleteRequest(
    ::google::protobuf::Arena* arena,
    const ProjectDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void ProjectDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectDeleteRequest::~ProjectDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> ProjectDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectDeleteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\2\0\0\0\0\0\0"
    "SDMS.Auth.ProjectDeleteRequest"
    "id"
  }},
};

::uint8_t* ProjectDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectDeleteRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectDeleteRequest)
  return target;
}

::size_t ProjectDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectDeleteRequest::_class_data_ = {
    ProjectDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectDeleteRequest*>(&to_msg);
  auto& from = static_cast<const ProjectDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectDeleteRequest::CopyFrom(const ProjectDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProjectDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectDeleteRequest::InternalSwap(ProjectDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata ProjectDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[74]);
}
// ===================================================================

class ProjectListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_as_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_as_admin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_as_member(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sort(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_sort_rev(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

ProjectListRequest::ProjectListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

ProjectListRequest::ProjectListRequest(
    ::google::protobuf::Arena* arena,
    const ProjectListRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, as_owner_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, as_owner_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, as_owner_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectListRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void ProjectListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, as_owner_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, as_owner_) +
               sizeof(Impl_::count_));
}
ProjectListRequest::~ProjectListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.as_owner_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.as_owner_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 52, 2> ProjectListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProjectListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProjectListRequest, _impl_.count_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.count_)}},
    // optional string subject = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.subject_)}},
    // optional bool as_owner = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectListRequest, _impl_.as_owner_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_owner_)}},
    // optional bool as_admin = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectListRequest, _impl_.as_admin_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_admin_)}},
    // optional bool as_member = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectListRequest, _impl_.as_member_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_member_)}},
    // optional .SDMS.SortOption sort = 5;
    {::_pbi::TcParser::FastEr0S1,
     {40, 5, 5, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.sort_)}},
    // optional bool sort_rev = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProjectListRequest, _impl_.sort_rev_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.sort_rev_)}},
    // optional uint32 offset = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProjectListRequest, _impl_.offset_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string subject = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool as_owner = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_owner_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool as_admin = 3;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_admin_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool as_member = 4;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_member_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .SDMS.SortOption sort = 5;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.sort_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool sort_rev = 6;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.sort_rev_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 offset = 7;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.offset_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 8;
    {PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.count_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 6},
  }}, {{
    "\34\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "SDMS.Auth.ProjectListRequest"
    "subject"
  }},
};

::uint8_t* ProjectListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string subject = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectListRequest.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool as_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_as_owner(), target);
  }

  // optional bool as_admin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_as_admin(), target);
  }

  // optional bool as_member = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_as_member(), target);
  }

  // optional .SDMS.SortOption sort = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_sort(), target);
  }

  // optional bool sort_rev = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_sort_rev(), target);
  }

  // optional uint32 offset = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_offset(), target);
  }

  // optional uint32 count = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectListRequest)
  return target;
}

::size_t ProjectListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string subject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // optional bool as_owner = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool as_admin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool as_member = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool sort_rev = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional .SDMS.SortOption sort = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_sort());
    }

    // optional uint32 offset = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectListRequest::_class_data_ = {
    ProjectListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectListRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectListRequest*>(&to_msg);
  auto& from = static_cast<const ProjectListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.as_owner_ = from._impl_.as_owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.as_admin_ = from._impl_.as_admin_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.as_member_ = from._impl_.as_member_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.sort_rev_ = from._impl_.sort_rev_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.sort_ = from._impl_.sort_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectListRequest::CopyFrom(const ProjectListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProjectListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectListRequest::InternalSwap(ProjectListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.count_)
      + sizeof(ProjectListRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(ProjectListRequest, _impl_.as_owner_)>(
          reinterpret_cast<char*>(&_impl_.as_owner_),
          reinterpret_cast<char*>(&other->_impl_.as_owner_));
}

::google::protobuf::Metadata ProjectListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[75]);
}
// ===================================================================

class ProjectSearchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectSearchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_._has_bits_);
  static void set_has_text_query(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectSearchRequest::ProjectSearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        scope_{visibility, arena, from.scope_},
        text_query_(arena, from.text_query_) {}

ProjectSearchRequest::ProjectSearchRequest(
    ::google::protobuf::Arena* arena,
    const ProjectSearchRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectSearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        scope_{visibility, arena},
        text_query_(arena) {}

inline void ProjectSearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectSearchRequest::~ProjectSearchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectSearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectSearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_query_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectSearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scope_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.text_query_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectSearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> ProjectSearchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectSearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string scope = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_.scope_)}},
    // required string text_query = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_.text_query_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string text_query = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_.text_query_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string scope = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectSearchRequest, _impl_.scope_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\12\5\0\0\0\0\0"
    "SDMS.Auth.ProjectSearchRequest"
    "text_query"
    "scope"
  }},
};

::uint8_t* ProjectSearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectSearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string text_query = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_text_query();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectSearchRequest.text_query");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string scope = 2;
  for (int i = 0, n = this->_internal_scope_size(); i < n; ++i) {
    const auto& s = this->_internal_scope().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectSearchRequest.scope");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectSearchRequest)
  return target;
}

::size_t ProjectSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectSearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string scope = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_scope().size());
  for (int i = 0, n = _internal_scope().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_scope().Get(i));
  }
  // required string text_query = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text_query());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectSearchRequest::_class_data_ = {
    ProjectSearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectSearchRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectSearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectSearchRequest*>(&to_msg);
  auto& from = static_cast<const ProjectSearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectSearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scope()->MergeFrom(from._internal_scope());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_text_query(from._internal_text_query());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectSearchRequest::CopyFrom(const ProjectSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectSearchRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectSearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectSearchRequest::InternalSwap(ProjectSearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.scope_.InternalSwap(&other->_impl_.scope_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_query_, &other->_impl_.text_query_, arena);
}

::google::protobuf::Metadata ProjectSearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[76]);
}
// ===================================================================

class ProjectGetRoleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectGetRoleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectGetRoleRequest::ProjectGetRoleRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectGetRoleRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectGetRoleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        subject_(arena, from.subject_) {}

ProjectGetRoleRequest::ProjectGetRoleRequest(
    ::google::protobuf::Arena* arena,
    const ProjectGetRoleRequest& from)
    : ::google::protobuf::Message(arena) {
  ProjectGetRoleRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.ProjectGetRoleRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProjectGetRoleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        subject_(arena) {}

inline void ProjectGetRoleRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProjectGetRoleRequest::~ProjectGetRoleRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectGetRoleRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectGetRoleRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectGetRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectGetRoleRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectGetRoleRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> ProjectGetRoleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProjectGetRoleRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_.subject_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string subject = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectGetRoleRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\2\7\0\0\0\0\0"
    "SDMS.Auth.ProjectGetRoleRequest"
    "id"
    "subject"
  }},
};

::uint8_t* ProjectGetRoleRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectGetRoleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectGetRoleRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.ProjectGetRoleRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectGetRoleRequest)
  return target;
}

::size_t ProjectGetRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectGetRoleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectGetRoleRequest::_class_data_ = {
    ProjectGetRoleRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectGetRoleRequest::GetClassData() const {
  return &_class_data_;
}

void ProjectGetRoleRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectGetRoleRequest*>(&to_msg);
  auto& from = static_cast<const ProjectGetRoleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectGetRoleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectGetRoleRequest::CopyFrom(const ProjectGetRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectGetRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectGetRoleRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectGetRoleRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectGetRoleRequest::InternalSwap(ProjectGetRoleRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata ProjectGetRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[77]);
}
// ===================================================================

class ProjectGetRoleReply::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectGetRoleReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectGetRoleReply, _impl_._has_bits_);
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProjectGetRoleReply::ProjectGetRoleReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.ProjectGetRoleReply)
}
ProjectGetRoleReply::ProjectGetRoleReply(
    ::google::protobuf::Arena* arena, const ProjectGetRoleReply& from)
    : ProjectGetRoleReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProjectGetRoleReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProjectGetRoleReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.role_ = {};
}
ProjectGetRoleReply::~ProjectGetRoleReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.ProjectGetRoleReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectGetRoleReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectGetRoleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.ProjectGetRoleReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectGetRoleReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ProjectGetRoleReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectGetRoleReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProjectGetRoleReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .SDMS.ProjectRole role = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 3, PROTOBUF_FIELD_OFFSET(ProjectGetRoleReply, _impl_.role_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.ProjectRole role = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectGetRoleReply, _impl_.role_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 4},
  }}, {{
  }},
};

::uint8_t* ProjectGetRoleReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.ProjectGetRoleReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.ProjectRole role = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.ProjectGetRoleReply)
  return target;
}

::size_t ProjectGetRoleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.ProjectGetRoleReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .SDMS.ProjectRole role = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_role());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectGetRoleReply::_class_data_ = {
    ProjectGetRoleReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectGetRoleReply::GetClassData() const {
  return &_class_data_;
}

void ProjectGetRoleReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectGetRoleReply*>(&to_msg);
  auto& from = static_cast<const ProjectGetRoleReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.ProjectGetRoleReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_role(from._internal_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectGetRoleReply::CopyFrom(const ProjectGetRoleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.ProjectGetRoleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectGetRoleReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ProjectGetRoleReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectGetRoleReply::InternalSwap(ProjectGetRoleReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.role_, other->_impl_.role_);
}

::google::protobuf::Metadata ProjectGetRoleReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[78]);
}
// ===================================================================

class RepoDataDeleteRequest::_Internal {
 public:
};

void RepoDataDeleteRequest::clear_loc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.loc_.Clear();
}
RepoDataDeleteRequest::RepoDataDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoDataDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : loc_{visibility, arena, from.loc_},
        _cached_size_{0} {}

RepoDataDeleteRequest::RepoDataDeleteRequest(
    ::google::protobuf::Arena* arena,
    const RepoDataDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoDataDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoDataDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loc_{visibility, arena},
        _cached_size_{0} {}

inline void RepoDataDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoDataDeleteRequest::~RepoDataDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoDataDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoDataDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoDataDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoDataDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loc_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoDataDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoDataDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoDataDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.RecordDataLocation loc = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoDataDeleteRequest, _impl_.loc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.RecordDataLocation loc = 1;
    {PROTOBUF_FIELD_OFFSET(RepoDataDeleteRequest, _impl_.loc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordDataLocation>()},
  }}, {{
  }},
};

::uint8_t* RepoDataDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoDataDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.RecordDataLocation loc = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_loc_size()); i < n; i++) {
    const auto& repfield = this->_internal_loc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoDataDeleteRequest)
  return target;
}

::size_t RepoDataDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoDataDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RecordDataLocation loc = 1;
  total_size += 1UL * this->_internal_loc_size();
  for (const auto& msg : this->_internal_loc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoDataDeleteRequest::_class_data_ = {
    RepoDataDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoDataDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void RepoDataDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoDataDeleteRequest*>(&to_msg);
  auto& from = static_cast<const RepoDataDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoDataDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loc()->MergeFrom(
      from._internal_loc());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoDataDeleteRequest::CopyFrom(const RepoDataDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoDataDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoDataDeleteRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_loc()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoDataDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoDataDeleteRequest::InternalSwap(RepoDataDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.loc_.InternalSwap(&other->_impl_.loc_);
}

::google::protobuf::Metadata RepoDataDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[79]);
}
// ===================================================================

class RepoDataGetSizeRequest::_Internal {
 public:
};

void RepoDataGetSizeRequest::clear_loc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.loc_.Clear();
}
RepoDataGetSizeRequest::RepoDataGetSizeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoDataGetSizeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataGetSizeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : loc_{visibility, arena, from.loc_},
        _cached_size_{0} {}

RepoDataGetSizeRequest::RepoDataGetSizeRequest(
    ::google::protobuf::Arena* arena,
    const RepoDataGetSizeRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoDataGetSizeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoDataGetSizeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataGetSizeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loc_{visibility, arena},
        _cached_size_{0} {}

inline void RepoDataGetSizeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoDataGetSizeRequest::~RepoDataGetSizeRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoDataGetSizeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoDataGetSizeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoDataGetSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoDataGetSizeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loc_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoDataGetSizeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoDataGetSizeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoDataGetSizeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.RecordDataLocation loc = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoDataGetSizeRequest, _impl_.loc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.RecordDataLocation loc = 1;
    {PROTOBUF_FIELD_OFFSET(RepoDataGetSizeRequest, _impl_.loc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordDataLocation>()},
  }}, {{
  }},
};

::uint8_t* RepoDataGetSizeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoDataGetSizeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.RecordDataLocation loc = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_loc_size()); i < n; i++) {
    const auto& repfield = this->_internal_loc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoDataGetSizeRequest)
  return target;
}

::size_t RepoDataGetSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoDataGetSizeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RecordDataLocation loc = 1;
  total_size += 1UL * this->_internal_loc_size();
  for (const auto& msg : this->_internal_loc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoDataGetSizeRequest::_class_data_ = {
    RepoDataGetSizeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoDataGetSizeRequest::GetClassData() const {
  return &_class_data_;
}

void RepoDataGetSizeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoDataGetSizeRequest*>(&to_msg);
  auto& from = static_cast<const RepoDataGetSizeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoDataGetSizeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loc()->MergeFrom(
      from._internal_loc());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoDataGetSizeRequest::CopyFrom(const RepoDataGetSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoDataGetSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoDataGetSizeRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_loc()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoDataGetSizeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoDataGetSizeRequest::InternalSwap(RepoDataGetSizeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.loc_.InternalSwap(&other->_impl_.loc_);
}

::google::protobuf::Metadata RepoDataGetSizeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[80]);
}
// ===================================================================

class RepoDataSizeReply::_Internal {
 public:
};

void RepoDataSizeReply::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_.Clear();
}
RepoDataSizeReply::RepoDataSizeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoDataSizeReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataSizeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : size_{visibility, arena, from.size_},
        _cached_size_{0} {}

RepoDataSizeReply::RepoDataSizeReply(
    ::google::protobuf::Arena* arena,
    const RepoDataSizeReply& from)
    : ::google::protobuf::Message(arena) {
  RepoDataSizeReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoDataSizeReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataSizeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : size_{visibility, arena},
        _cached_size_{0} {}

inline void RepoDataSizeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoDataSizeReply::~RepoDataSizeReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoDataSizeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoDataSizeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoDataSizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoDataSizeReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.size_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoDataSizeReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoDataSizeReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoDataSizeReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.RecordDataSize size = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoDataSizeReply, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.RecordDataSize size = 1;
    {PROTOBUF_FIELD_OFFSET(RepoDataSizeReply, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordDataSize>()},
  }}, {{
  }},
};

::uint8_t* RepoDataSizeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoDataSizeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.RecordDataSize size = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_size_size()); i < n; i++) {
    const auto& repfield = this->_internal_size().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoDataSizeReply)
  return target;
}

::size_t RepoDataSizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoDataSizeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RecordDataSize size = 1;
  total_size += 1UL * this->_internal_size_size();
  for (const auto& msg : this->_internal_size()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoDataSizeReply::_class_data_ = {
    RepoDataSizeReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoDataSizeReply::GetClassData() const {
  return &_class_data_;
}

void RepoDataSizeReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoDataSizeReply*>(&to_msg);
  auto& from = static_cast<const RepoDataSizeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoDataSizeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_size()->MergeFrom(
      from._internal_size());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoDataSizeReply::CopyFrom(const RepoDataSizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoDataSizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoDataSizeReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_size()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoDataSizeReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoDataSizeReply::InternalSwap(RepoDataSizeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.size_.InternalSwap(&other->_impl_.size_);
}

::google::protobuf::Metadata RepoDataSizeReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[81]);
}
// ===================================================================

class RepoPathCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoPathCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoPathCreateRequest, _impl_._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoPathCreateRequest::RepoPathCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoPathCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoPathCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

RepoPathCreateRequest::RepoPathCreateRequest(
    ::google::protobuf::Arena* arena,
    const RepoPathCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoPathCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoPathCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoPathCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void RepoPathCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoPathCreateRequest::~RepoPathCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoPathCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoPathCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoPathCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoPathCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.path_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoPathCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> RepoPathCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoPathCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoPathCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string path = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoPathCreateRequest, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string path = 1;
    {PROTOBUF_FIELD_OFFSET(RepoPathCreateRequest, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "SDMS.Auth.RepoPathCreateRequest"
    "path"
  }},
};

::uint8_t* RepoPathCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoPathCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoPathCreateRequest.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoPathCreateRequest)
  return target;
}

::size_t RepoPathCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoPathCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string path = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoPathCreateRequest::_class_data_ = {
    RepoPathCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoPathCreateRequest::GetClassData() const {
  return &_class_data_;
}

void RepoPathCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoPathCreateRequest*>(&to_msg);
  auto& from = static_cast<const RepoPathCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoPathCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoPathCreateRequest::CopyFrom(const RepoPathCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoPathCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoPathCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoPathCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoPathCreateRequest::InternalSwap(RepoPathCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata RepoPathCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[82]);
}
// ===================================================================

class RepoPathDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoPathDeleteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoPathDeleteRequest, _impl_._has_bits_);
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoPathDeleteRequest::RepoPathDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoPathDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoPathDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

RepoPathDeleteRequest::RepoPathDeleteRequest(
    ::google::protobuf::Arena* arena,
    const RepoPathDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoPathDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoPathDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoPathDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void RepoPathDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoPathDeleteRequest::~RepoPathDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoPathDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoPathDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoPathDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoPathDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.path_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoPathDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> RepoPathDeleteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoPathDeleteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoPathDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string path = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoPathDeleteRequest, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string path = 1;
    {PROTOBUF_FIELD_OFFSET(RepoPathDeleteRequest, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "SDMS.Auth.RepoPathDeleteRequest"
    "path"
  }},
};

::uint8_t* RepoPathDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoPathDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoPathDeleteRequest.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoPathDeleteRequest)
  return target;
}

::size_t RepoPathDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoPathDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string path = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoPathDeleteRequest::_class_data_ = {
    RepoPathDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoPathDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void RepoPathDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoPathDeleteRequest*>(&to_msg);
  auto& from = static_cast<const RepoPathDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoPathDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoPathDeleteRequest::CopyFrom(const RepoPathDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoPathDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoPathDeleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoPathDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoPathDeleteRequest::InternalSwap(RepoPathDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata RepoPathDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[83]);
}
// ===================================================================

class RepoListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_._has_bits_);
  static void set_has_details(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_all(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

RepoListRequest::RepoListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoListRequest)
}
RepoListRequest::RepoListRequest(
    ::google::protobuf::Arena* arena, const RepoListRequest& from)
    : RepoListRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RepoListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RepoListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, details_),
           0,
           offsetof(Impl_, all_) -
               offsetof(Impl_, details_) +
               sizeof(Impl_::all_));
}
RepoListRequest::~RepoListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.details_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.all_) -
      reinterpret_cast<char*>(&_impl_.details_)) + sizeof(_impl_.all_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RepoListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool all = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RepoListRequest, _impl_.all_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.all_)}},
    // optional bool details = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RepoListRequest, _impl_.details_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool details = 1;
    {PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.details_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool all = 2;
    {PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.all_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RepoListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool details = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_details(), target);
  }

  // optional bool all = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_all(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoListRequest)
  return target;
}

::size_t RepoListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool details = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool all = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoListRequest::_class_data_ = {
    RepoListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoListRequest::GetClassData() const {
  return &_class_data_;
}

void RepoListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoListRequest*>(&to_msg);
  auto& from = static_cast<const RepoListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.details_ = from._impl_.details_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.all_ = from._impl_.all_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoListRequest::CopyFrom(const RepoListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RepoListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoListRequest::InternalSwap(RepoListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.all_)
      + sizeof(RepoListRequest::_impl_.all_)
      - PROTOBUF_FIELD_OFFSET(RepoListRequest, _impl_.details_)>(
          reinterpret_cast<char*>(&_impl_.details_),
          reinterpret_cast<char*>(&other->_impl_.details_));
}

::google::protobuf::Metadata RepoListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[84]);
}
// ===================================================================

class RepoViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoViewRequest::RepoViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RepoViewRequest::RepoViewRequest(
    ::google::protobuf::Arena* arena,
    const RepoViewRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RepoViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoViewRequest::~RepoViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> RepoViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\2\0\0\0\0\0\0"
    "SDMS.Auth.RepoViewRequest"
    "id"
  }},
};

::uint8_t* RepoViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoViewRequest)
  return target;
}

::size_t RepoViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoViewRequest::_class_data_ = {
    RepoViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoViewRequest::GetClassData() const {
  return &_class_data_;
}

void RepoViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoViewRequest*>(&to_msg);
  auto& from = static_cast<const RepoViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoViewRequest::CopyFrom(const RepoViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoViewRequest::InternalSwap(RepoViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata RepoViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[85]);
}
// ===================================================================

class RepoCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_exp_path(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_address(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_pub_key(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_capacity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000003d3) ^ 0x000003d3) != 0;
  }
};

RepoCreateRequest::RepoCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        domain_(arena, from.domain_),
        path_(arena, from.path_),
        exp_path_(arena, from.exp_path_),
        address_(arena, from.address_),
        endpoint_(arena, from.endpoint_),
        pub_key_(arena, from.pub_key_) {}

RepoCreateRequest::RepoCreateRequest(
    ::google::protobuf::Arena* arena,
    const RepoCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        domain_(arena),
        path_(arena),
        exp_path_(arena),
        address_(arena),
        endpoint_(arena),
        pub_key_(arena) {}

inline void RepoCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capacity_ = {};
}
RepoCreateRequest::~RepoCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.path_.Destroy();
  _impl_.exp_path_.Destroy();
  _impl_.address_.Destroy();
  _impl_.endpoint_.Destroy();
  _impl_.pub_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.exp_path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.endpoint_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.pub_key_.ClearNonDefaultToEmpty();
  }
  _impl_.capacity_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 100, 2> RepoCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.desc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string domain = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.domain_)}},
    // required string path = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.path_)}},
    // optional string exp_path = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.exp_path_)}},
    // required string address = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 6, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.address_)}},
    // required string endpoint = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 7, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.endpoint_)}},
    // required string pub_key = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 8, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.pub_key_)}},
    // required uint64 capacity = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RepoCreateRequest, _impl_.capacity_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.capacity_)}},
    // repeated string admin = 12;
    {::_pbi::TcParser::FastSR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.admin_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string domain = 5;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.domain_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string path = 6;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.path_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string exp_path = 7;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.exp_path_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string address = 8;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.address_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string endpoint = 9;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.endpoint_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string pub_key = 10;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.pub_key_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 capacity = 11;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.capacity_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated string admin = 12;
    {PROTOBUF_FIELD_OFFSET(RepoCreateRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\2\5\4\6\4\10\7\10\7\0\5\0\0\0\0"
    "SDMS.Auth.RepoCreateRequest"
    "id"
    "title"
    "desc"
    "domain"
    "path"
    "exp_path"
    "address"
    "endpoint"
    "pub_key"
    "admin"
  }},
};

::uint8_t* RepoCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string domain = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.domain");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // required string path = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.path");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string exp_path = 7;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_exp_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.exp_path");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // required string address = 8;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.address");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // required string endpoint = 9;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_endpoint();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.endpoint");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // required string pub_key = 10;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_pub_key();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.pub_key");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // required uint64 capacity = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_capacity(), target);
  }

  // repeated string admin = 12;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCreateRequest.admin");
    target = stream->WriteString(12, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoCreateRequest)
  return target;
}

::size_t RepoCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 12;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string domain = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

  }
  // required string path = 6;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // optional string exp_path = 7;
  if (cached_has_bits & 0x00000020u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_exp_path());
  }

  if (cached_has_bits & 0x000000c0u) {
    // required string address = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_address());
    }

    // required string endpoint = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_endpoint());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // required string pub_key = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pub_key());
    }

    // required uint64 capacity = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_capacity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoCreateRequest::_class_data_ = {
    RepoCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoCreateRequest::GetClassData() const {
  return &_class_data_;
}

void RepoCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoCreateRequest*>(&to_msg);
  auto& from = static_cast<const RepoCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_exp_path(from._internal_exp_path());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_address(from._internal_address());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_endpoint(from._internal_endpoint());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_pub_key(from._internal_pub_key());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.capacity_ = from._impl_.capacity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoCreateRequest::CopyFrom(const RepoCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoCreateRequest::InternalSwap(RepoCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exp_path_, &other->_impl_.exp_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endpoint_, &other->_impl_.endpoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pub_key_, &other->_impl_.pub_key_, arena);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata RepoCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[86]);
}
// ===================================================================

class RepoUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_exp_path(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_address(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_pub_key(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_capacity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoUpdateRequest::RepoUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        domain_(arena, from.domain_),
        path_(arena, from.path_),
        exp_path_(arena, from.exp_path_),
        address_(arena, from.address_),
        endpoint_(arena, from.endpoint_),
        pub_key_(arena, from.pub_key_) {}

RepoUpdateRequest::RepoUpdateRequest(
    ::google::protobuf::Arena* arena,
    const RepoUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        domain_(arena),
        path_(arena),
        exp_path_(arena),
        address_(arena),
        endpoint_(arena),
        pub_key_(arena) {}

inline void RepoUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capacity_ = {};
}
RepoUpdateRequest::~RepoUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.path_.Destroy();
  _impl_.exp_path_.Destroy();
  _impl_.address_.Destroy();
  _impl_.endpoint_.Destroy();
  _impl_.pub_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.exp_path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.endpoint_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.pub_key_.ClearNonDefaultToEmpty();
  }
  _impl_.capacity_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 100, 2> RepoUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.desc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string domain = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.domain_)}},
    // optional string path = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.path_)}},
    // optional string exp_path = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.exp_path_)}},
    // optional string address = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 6, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.address_)}},
    // optional string endpoint = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 7, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.endpoint_)}},
    // optional string pub_key = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 8, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.pub_key_)}},
    // optional uint64 capacity = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RepoUpdateRequest, _impl_.capacity_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.capacity_)}},
    // repeated string admin = 12;
    {::_pbi::TcParser::FastSR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.admin_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string domain = 5;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.domain_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string path = 6;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.path_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string exp_path = 7;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.exp_path_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string address = 8;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.address_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string endpoint = 9;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.endpoint_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string pub_key = 10;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.pub_key_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 capacity = 11;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.capacity_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated string admin = 12;
    {PROTOBUF_FIELD_OFFSET(RepoUpdateRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\2\5\4\6\4\10\7\10\7\0\5\0\0\0\0"
    "SDMS.Auth.RepoUpdateRequest"
    "id"
    "title"
    "desc"
    "domain"
    "path"
    "exp_path"
    "address"
    "endpoint"
    "pub_key"
    "admin"
  }},
};

::uint8_t* RepoUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string domain = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.domain");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string path = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.path");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string exp_path = 7;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_exp_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.exp_path");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string address = 8;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.address");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string endpoint = 9;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_endpoint();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.endpoint");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string pub_key = 10;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_pub_key();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.pub_key");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional uint64 capacity = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_capacity(), target);
  }

  // repeated string admin = 12;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoUpdateRequest.admin");
    target = stream->WriteString(12, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoUpdateRequest)
  return target;
}

::size_t RepoUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 12;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x000000feu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string domain = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

    // optional string path = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

    // optional string exp_path = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_exp_path());
    }

    // optional string address = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_address());
    }

    // optional string endpoint = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_endpoint());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional string pub_key = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pub_key());
    }

    // optional uint64 capacity = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_capacity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoUpdateRequest::_class_data_ = {
    RepoUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void RepoUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoUpdateRequest*>(&to_msg);
  auto& from = static_cast<const RepoUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_exp_path(from._internal_exp_path());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_address(from._internal_address());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_endpoint(from._internal_endpoint());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_pub_key(from._internal_pub_key());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.capacity_ = from._impl_.capacity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoUpdateRequest::CopyFrom(const RepoUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoUpdateRequest::InternalSwap(RepoUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exp_path_, &other->_impl_.exp_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endpoint_, &other->_impl_.endpoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pub_key_, &other->_impl_.pub_key_, arena);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata RepoUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[87]);
}
// ===================================================================

class RepoDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoDeleteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoDeleteRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoDeleteRequest::RepoDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RepoDeleteRequest::RepoDeleteRequest(
    ::google::protobuf::Arena* arena,
    const RepoDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RepoDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoDeleteRequest::~RepoDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> RepoDeleteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoDeleteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoDeleteRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.RepoDeleteRequest"
    "id"
  }},
};

::uint8_t* RepoDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoDeleteRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoDeleteRequest)
  return target;
}

::size_t RepoDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoDeleteRequest::_class_data_ = {
    RepoDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void RepoDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoDeleteRequest*>(&to_msg);
  auto& from = static_cast<const RepoDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoDeleteRequest::CopyFrom(const RepoDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoDeleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoDeleteRequest::InternalSwap(RepoDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata RepoDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[88]);
}
// ===================================================================

class RepoDataReply::_Internal {
 public:
};

void RepoDataReply::clear_repo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.repo_.Clear();
}
RepoDataReply::RepoDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoDataReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : repo_{visibility, arena, from.repo_},
        _cached_size_{0} {}

RepoDataReply::RepoDataReply(
    ::google::protobuf::Arena* arena,
    const RepoDataReply& from)
    : ::google::protobuf::Message(arena) {
  RepoDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoDataReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : repo_{visibility, arena},
        _cached_size_{0} {}

inline void RepoDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoDataReply::~RepoDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.repo_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.RepoData repo = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoDataReply, _impl_.repo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.RepoData repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoDataReply, _impl_.repo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RepoData>()},
  }}, {{
  }},
};

::uint8_t* RepoDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.RepoData repo = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_repo_size()); i < n; i++) {
    const auto& repfield = this->_internal_repo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoDataReply)
  return target;
}

::size_t RepoDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RepoData repo = 1;
  total_size += 1UL * this->_internal_repo_size();
  for (const auto& msg : this->_internal_repo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoDataReply::_class_data_ = {
    RepoDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoDataReply::GetClassData() const {
  return &_class_data_;
}

void RepoDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoDataReply*>(&to_msg);
  auto& from = static_cast<const RepoDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_repo()->MergeFrom(
      from._internal_repo());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoDataReply::CopyFrom(const RepoDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_repo()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoDataReply::InternalSwap(RepoDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.repo_.InternalSwap(&other->_impl_.repo_);
}

::google::protobuf::Metadata RepoDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[89]);
}
// ===================================================================

class RepoCalcSizeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoCalcSizeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_._has_bits_);
  static void set_has_recurse(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoCalcSizeRequest::RepoCalcSizeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoCalcSizeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoCalcSizeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_{visibility, arena, from.item_} {}

RepoCalcSizeRequest::RepoCalcSizeRequest(
    ::google::protobuf::Arena* arena,
    const RepoCalcSizeRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoCalcSizeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.recurse_ = from._impl_.recurse_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoCalcSizeRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoCalcSizeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        item_{visibility, arena} {}

inline void RepoCalcSizeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.recurse_ = {};
}
RepoCalcSizeRequest::~RepoCalcSizeRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoCalcSizeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoCalcSizeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoCalcSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoCalcSizeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  _impl_.recurse_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoCalcSizeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> RepoCalcSizeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoCalcSizeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string item = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_.item_)}},
    // required bool recurse = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RepoCalcSizeRequest, _impl_.recurse_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_.recurse_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool recurse = 1;
    {PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_.recurse_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string item = 2;
    {PROTOBUF_FIELD_OFFSET(RepoCalcSizeRequest, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\0\4\0\0\0\0\0"
    "SDMS.Auth.RepoCalcSizeRequest"
    "item"
  }},
};

::uint8_t* RepoCalcSizeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoCalcSizeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool recurse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_recurse(), target);
  }

  // repeated string item = 2;
  for (int i = 0, n = this->_internal_item_size(); i < n; ++i) {
    const auto& s = this->_internal_item().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoCalcSizeRequest.item");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoCalcSizeRequest)
  return target;
}

::size_t RepoCalcSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoCalcSizeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string item = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_item().size());
  for (int i = 0, n = _internal_item().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_item().Get(i));
  }
  // required bool recurse = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoCalcSizeRequest::_class_data_ = {
    RepoCalcSizeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoCalcSizeRequest::GetClassData() const {
  return &_class_data_;
}

void RepoCalcSizeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoCalcSizeRequest*>(&to_msg);
  auto& from = static_cast<const RepoCalcSizeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoCalcSizeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(from._internal_item());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_recurse(from._internal_recurse());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoCalcSizeRequest::CopyFrom(const RepoCalcSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoCalcSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoCalcSizeRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoCalcSizeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoCalcSizeRequest::InternalSwap(RepoCalcSizeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
        swap(_impl_.recurse_, other->_impl_.recurse_);
}

::google::protobuf::Metadata RepoCalcSizeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[90]);
}
// ===================================================================

class RepoCalcSizeReply::_Internal {
 public:
};

void RepoCalcSizeReply::clear_stats() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stats_.Clear();
}
RepoCalcSizeReply::RepoCalcSizeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoCalcSizeReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoCalcSizeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : stats_{visibility, arena, from.stats_},
        _cached_size_{0} {}

RepoCalcSizeReply::RepoCalcSizeReply(
    ::google::protobuf::Arena* arena,
    const RepoCalcSizeReply& from)
    : ::google::protobuf::Message(arena) {
  RepoCalcSizeReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoCalcSizeReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoCalcSizeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stats_{visibility, arena},
        _cached_size_{0} {}

inline void RepoCalcSizeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoCalcSizeReply::~RepoCalcSizeReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoCalcSizeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoCalcSizeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoCalcSizeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoCalcSizeReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stats_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoCalcSizeReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoCalcSizeReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoCalcSizeReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.AllocStatsData stats = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoCalcSizeReply, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.AllocStatsData stats = 1;
    {PROTOBUF_FIELD_OFFSET(RepoCalcSizeReply, _impl_.stats_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocStatsData>()},
  }}, {{
  }},
};

::uint8_t* RepoCalcSizeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoCalcSizeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.AllocStatsData stats = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stats_size()); i < n; i++) {
    const auto& repfield = this->_internal_stats().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoCalcSizeReply)
  return target;
}

::size_t RepoCalcSizeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoCalcSizeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.AllocStatsData stats = 1;
  total_size += 1UL * this->_internal_stats_size();
  for (const auto& msg : this->_internal_stats()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoCalcSizeReply::_class_data_ = {
    RepoCalcSizeReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoCalcSizeReply::GetClassData() const {
  return &_class_data_;
}

void RepoCalcSizeReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoCalcSizeReply*>(&to_msg);
  auto& from = static_cast<const RepoCalcSizeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoCalcSizeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stats()->MergeFrom(
      from._internal_stats());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoCalcSizeReply::CopyFrom(const RepoCalcSizeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoCalcSizeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoCalcSizeReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_stats()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoCalcSizeReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoCalcSizeReply::InternalSwap(RepoCalcSizeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stats_.InternalSwap(&other->_impl_.stats_);
}

::google::protobuf::Metadata RepoCalcSizeReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[91]);
}
// ===================================================================

class RepoListAllocationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoListAllocationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoListAllocationsRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoListAllocationsRequest::RepoListAllocationsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoListAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RepoListAllocationsRequest::RepoListAllocationsRequest(
    ::google::protobuf::Arena* arena,
    const RepoListAllocationsRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoListAllocationsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoListAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RepoListAllocationsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoListAllocationsRequest::~RepoListAllocationsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoListAllocationsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoListAllocationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoListAllocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoListAllocationsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoListAllocationsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> RepoListAllocationsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoListAllocationsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoListAllocationsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoListAllocationsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoListAllocationsRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\2\0\0\0\0\0\0"
    "SDMS.Auth.RepoListAllocationsRequest"
    "id"
  }},
};

::uint8_t* RepoListAllocationsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoListAllocationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoListAllocationsRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoListAllocationsRequest)
  return target;
}

::size_t RepoListAllocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoListAllocationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoListAllocationsRequest::_class_data_ = {
    RepoListAllocationsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoListAllocationsRequest::GetClassData() const {
  return &_class_data_;
}

void RepoListAllocationsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoListAllocationsRequest*>(&to_msg);
  auto& from = static_cast<const RepoListAllocationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoListAllocationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoListAllocationsRequest::CopyFrom(const RepoListAllocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoListAllocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoListAllocationsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoListAllocationsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoListAllocationsRequest::InternalSwap(RepoListAllocationsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata RepoListAllocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[92]);
}
// ===================================================================

class RepoListSubjectAllocationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoListSubjectAllocationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

RepoListSubjectAllocationsRequest::RepoListSubjectAllocationsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoListSubjectAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListSubjectAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

RepoListSubjectAllocationsRequest::RepoListSubjectAllocationsRequest(
    ::google::protobuf::Arena* arena,
    const RepoListSubjectAllocationsRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoListSubjectAllocationsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.stats_ = from._impl_.stats_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoListSubjectAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListSubjectAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void RepoListSubjectAllocationsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stats_ = {};
}
RepoListSubjectAllocationsRequest::~RepoListSubjectAllocationsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoListSubjectAllocationsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoListSubjectAllocationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoListSubjectAllocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoListSubjectAllocationsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  _impl_.stats_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoListSubjectAllocationsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> RepoListSubjectAllocationsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoListSubjectAllocationsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool stats = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RepoListSubjectAllocationsRequest, _impl_.stats_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_.stats_)}},
    // optional string subject = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_.subject_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string subject = 1;
    {PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool stats = 2;
    {PROTOBUF_FIELD_OFFSET(RepoListSubjectAllocationsRequest, _impl_.stats_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\53\7\0\0\0\0\0\0"
    "SDMS.Auth.RepoListSubjectAllocationsRequest"
    "subject"
  }},
};

::uint8_t* RepoListSubjectAllocationsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoListSubjectAllocationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string subject = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoListSubjectAllocationsRequest.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool stats = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_stats(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoListSubjectAllocationsRequest)
  return target;
}

::size_t RepoListSubjectAllocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoListSubjectAllocationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string subject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // optional bool stats = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoListSubjectAllocationsRequest::_class_data_ = {
    RepoListSubjectAllocationsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoListSubjectAllocationsRequest::GetClassData() const {
  return &_class_data_;
}

void RepoListSubjectAllocationsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoListSubjectAllocationsRequest*>(&to_msg);
  auto& from = static_cast<const RepoListSubjectAllocationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoListSubjectAllocationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.stats_ = from._impl_.stats_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoListSubjectAllocationsRequest::CopyFrom(const RepoListSubjectAllocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoListSubjectAllocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoListSubjectAllocationsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RepoListSubjectAllocationsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoListSubjectAllocationsRequest::InternalSwap(RepoListSubjectAllocationsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
        swap(_impl_.stats_, other->_impl_.stats_);
}

::google::protobuf::Metadata RepoListSubjectAllocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[93]);
}
// ===================================================================

class RepoListObjectAllocationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoListObjectAllocationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoListObjectAllocationsRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoListObjectAllocationsRequest::RepoListObjectAllocationsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoListObjectAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListObjectAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RepoListObjectAllocationsRequest::RepoListObjectAllocationsRequest(
    ::google::protobuf::Arena* arena,
    const RepoListObjectAllocationsRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoListObjectAllocationsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoListObjectAllocationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoListObjectAllocationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RepoListObjectAllocationsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoListObjectAllocationsRequest::~RepoListObjectAllocationsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoListObjectAllocationsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoListObjectAllocationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoListObjectAllocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoListObjectAllocationsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoListObjectAllocationsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> RepoListObjectAllocationsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoListObjectAllocationsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoListObjectAllocationsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoListObjectAllocationsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoListObjectAllocationsRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\2\0\0\0\0\0\0"
    "SDMS.Auth.RepoListObjectAllocationsRequest"
    "id"
  }},
};

::uint8_t* RepoListObjectAllocationsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoListObjectAllocationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoListObjectAllocationsRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoListObjectAllocationsRequest)
  return target;
}

::size_t RepoListObjectAllocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoListObjectAllocationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoListObjectAllocationsRequest::_class_data_ = {
    RepoListObjectAllocationsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoListObjectAllocationsRequest::GetClassData() const {
  return &_class_data_;
}

void RepoListObjectAllocationsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoListObjectAllocationsRequest*>(&to_msg);
  auto& from = static_cast<const RepoListObjectAllocationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoListObjectAllocationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoListObjectAllocationsRequest::CopyFrom(const RepoListObjectAllocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoListObjectAllocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoListObjectAllocationsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoListObjectAllocationsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoListObjectAllocationsRequest::InternalSwap(RepoListObjectAllocationsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata RepoListObjectAllocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[94]);
}
// ===================================================================

class RepoViewAllocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoViewAllocationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RepoViewAllocationRequest::RepoViewAllocationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoViewAllocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoViewAllocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoViewAllocationRequest::RepoViewAllocationRequest(
    ::google::protobuf::Arena* arena,
    const RepoViewAllocationRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoViewAllocationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoViewAllocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoViewAllocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoViewAllocationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoViewAllocationRequest::~RepoViewAllocationRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoViewAllocationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoViewAllocationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoViewAllocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoViewAllocationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoViewAllocationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> RepoViewAllocationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoViewAllocationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_.subject_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_.repo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoViewAllocationRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoViewAllocationRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoViewAllocationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoViewAllocationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoViewAllocationRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoViewAllocationRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoViewAllocationRequest)
  return target;
}

::size_t RepoViewAllocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoViewAllocationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string subject = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoViewAllocationRequest::_class_data_ = {
    RepoViewAllocationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoViewAllocationRequest::GetClassData() const {
  return &_class_data_;
}

void RepoViewAllocationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoViewAllocationRequest*>(&to_msg);
  auto& from = static_cast<const RepoViewAllocationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoViewAllocationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoViewAllocationRequest::CopyFrom(const RepoViewAllocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoViewAllocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoViewAllocationRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoViewAllocationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoViewAllocationRequest::InternalSwap(RepoViewAllocationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata RepoViewAllocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[95]);
}
// ===================================================================

class RepoAllocationsReply::_Internal {
 public:
};

void RepoAllocationsReply::clear_alloc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alloc_.Clear();
}
RepoAllocationsReply::RepoAllocationsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationsReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : alloc_{visibility, arena, from.alloc_},
        _cached_size_{0} {}

RepoAllocationsReply::RepoAllocationsReply(
    ::google::protobuf::Arena* arena,
    const RepoAllocationsReply& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationsReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alloc_{visibility, arena},
        _cached_size_{0} {}

inline void RepoAllocationsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoAllocationsReply::~RepoAllocationsReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationsReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alloc_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationsReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoAllocationsReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoAllocationsReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.AllocData alloc = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationsReply, _impl_.alloc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.AllocData alloc = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationsReply, _impl_.alloc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocData>()},
  }}, {{
  }},
};

::uint8_t* RepoAllocationsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.AllocData alloc = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alloc_size()); i < n; i++) {
    const auto& repfield = this->_internal_alloc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationsReply)
  return target;
}

::size_t RepoAllocationsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.AllocData alloc = 1;
  total_size += 1UL * this->_internal_alloc_size();
  for (const auto& msg : this->_internal_alloc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationsReply::_class_data_ = {
    RepoAllocationsReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationsReply::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationsReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationsReply*>(&to_msg);
  auto& from = static_cast<const RepoAllocationsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alloc()->MergeFrom(
      from._internal_alloc());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationsReply::CopyFrom(const RepoAllocationsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationsReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_alloc()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoAllocationsReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationsReply::InternalSwap(RepoAllocationsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alloc_.InternalSwap(&other->_impl_.alloc_);
}

::google::protobuf::Metadata RepoAllocationsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[96]);
}
// ===================================================================

class RepoAllocationStatsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationStatsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoAllocationStatsRequest::RepoAllocationStatsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoAllocationStatsRequest::RepoAllocationStatsRequest(
    ::google::protobuf::Arena* arena,
    const RepoAllocationStatsRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationStatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationStatsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationStatsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoAllocationStatsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoAllocationStatsRequest::~RepoAllocationStatsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationStatsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationStatsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationStatsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationStatsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> RepoAllocationStatsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAllocationStatsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_.subject_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_.repo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationStatsRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoAllocationStatsRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoAllocationStatsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationStatsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationStatsRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationStatsRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationStatsRequest)
  return target;
}

::size_t RepoAllocationStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationStatsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string repo = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo());
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationStatsRequest::_class_data_ = {
    RepoAllocationStatsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationStatsRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationStatsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationStatsRequest*>(&to_msg);
  auto& from = static_cast<const RepoAllocationStatsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationStatsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationStatsRequest::CopyFrom(const RepoAllocationStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationStatsRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationStatsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationStatsRequest::InternalSwap(RepoAllocationStatsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata RepoAllocationStatsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[97]);
}
// ===================================================================

class RepoAllocationStatsReply::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationStatsReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationStatsReply, _impl_._has_bits_);
  static const ::SDMS::AllocStatsData& alloc(const RepoAllocationStatsReply* msg);
  static void set_has_alloc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::SDMS::AllocStatsData& RepoAllocationStatsReply::_Internal::alloc(const RepoAllocationStatsReply* msg) {
  return *msg->_impl_.alloc_;
}
void RepoAllocationStatsReply::clear_alloc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.alloc_ != nullptr) _impl_.alloc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RepoAllocationStatsReply::RepoAllocationStatsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationStatsReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationStatsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RepoAllocationStatsReply::RepoAllocationStatsReply(
    ::google::protobuf::Arena* arena,
    const RepoAllocationStatsReply& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationStatsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.alloc_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::SDMS::AllocStatsData>(arena, *from._impl_.alloc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationStatsReply)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationStatsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RepoAllocationStatsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.alloc_ = {};
}
RepoAllocationStatsReply::~RepoAllocationStatsReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationStatsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationStatsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.alloc_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationStatsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationStatsReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.alloc_ != nullptr);
    _impl_.alloc_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationStatsReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RepoAllocationStatsReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationStatsReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoAllocationStatsReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .SDMS.AllocStatsData alloc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationStatsReply, _impl_.alloc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.AllocStatsData alloc = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationStatsReply, _impl_.alloc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocStatsData>()},
  }}, {{
  }},
};

::uint8_t* RepoAllocationStatsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationStatsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.AllocStatsData alloc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::alloc(this),
        _Internal::alloc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationStatsReply)
  return target;
}

::size_t RepoAllocationStatsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationStatsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .SDMS.AllocStatsData alloc = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.alloc_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationStatsReply::_class_data_ = {
    RepoAllocationStatsReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationStatsReply::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationStatsReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationStatsReply*>(&to_msg);
  auto& from = static_cast<const RepoAllocationStatsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationStatsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_alloc()->::SDMS::AllocStatsData::MergeFrom(
        from._internal_alloc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationStatsReply::CopyFrom(const RepoAllocationStatsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationStatsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationStatsReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.alloc_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationStatsReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationStatsReply::InternalSwap(RepoAllocationStatsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.alloc_, other->_impl_.alloc_);
}

::google::protobuf::Metadata RepoAllocationStatsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[98]);
}
// ===================================================================

class RepoAllocationCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rec_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

RepoAllocationCreateRequest::RepoAllocationCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoAllocationCreateRequest::RepoAllocationCreateRequest(
    ::google::protobuf::Arena* arena,
    const RepoAllocationCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_limit_),
           offsetof(Impl_, rec_limit_) -
               offsetof(Impl_, data_limit_) +
               sizeof(Impl_::rec_limit_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoAllocationCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_limit_),
           0,
           offsetof(Impl_, rec_limit_) -
               offsetof(Impl_, data_limit_) +
               sizeof(Impl_::rec_limit_));
}
RepoAllocationCreateRequest::~RepoAllocationCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.data_limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rec_limit_) -
        reinterpret_cast<char*>(&_impl_.data_limit_)) + sizeof(_impl_.rec_limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 57, 2> RepoAllocationCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAllocationCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 rec_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RepoAllocationCreateRequest, _impl_.rec_limit_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.rec_limit_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.repo_)}},
    // required string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.subject_)}},
    // required uint64 data_limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RepoAllocationCreateRequest, _impl_.data_limit_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.data_limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 data_limit = 3;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.data_limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 rec_limit = 4;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.rec_limit_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\45\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoAllocationCreateRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoAllocationCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationCreateRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationCreateRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required uint64 data_limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_data_limit(), target);
  }

  // required uint32 rec_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_rec_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationCreateRequest)
  return target;
}

::size_t RepoAllocationCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string subject = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // required uint64 data_limit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_limit());
    }

    // required uint32 rec_limit = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_limit());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationCreateRequest::_class_data_ = {
    RepoAllocationCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationCreateRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationCreateRequest*>(&to_msg);
  auto& from = static_cast<const RepoAllocationCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.data_limit_ = from._impl_.data_limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.rec_limit_ = from._impl_.rec_limit_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationCreateRequest::CopyFrom(const RepoAllocationCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationCreateRequest::InternalSwap(RepoAllocationCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.rec_limit_)
      + sizeof(RepoAllocationCreateRequest::_impl_.rec_limit_)
      - PROTOBUF_FIELD_OFFSET(RepoAllocationCreateRequest, _impl_.data_limit_)>(
          reinterpret_cast<char*>(&_impl_.data_limit_),
          reinterpret_cast<char*>(&other->_impl_.data_limit_));
}

::google::protobuf::Metadata RepoAllocationCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[99]);
}
// ===================================================================

class RepoAllocationSetRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationSetRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_data_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rec_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

RepoAllocationSetRequest::RepoAllocationSetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationSetRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationSetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoAllocationSetRequest::RepoAllocationSetRequest(
    ::google::protobuf::Arena* arena,
    const RepoAllocationSetRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationSetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_limit_),
           offsetof(Impl_, rec_limit_) -
               offsetof(Impl_, data_limit_) +
               sizeof(Impl_::rec_limit_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationSetRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationSetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoAllocationSetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_limit_),
           0,
           offsetof(Impl_, rec_limit_) -
               offsetof(Impl_, data_limit_) +
               sizeof(Impl_::rec_limit_));
}
RepoAllocationSetRequest::~RepoAllocationSetRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationSetRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationSetRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationSetRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.data_limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rec_limit_) -
        reinterpret_cast<char*>(&_impl_.data_limit_)) + sizeof(_impl_.rec_limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationSetRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2> RepoAllocationSetRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAllocationSetRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 rec_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RepoAllocationSetRequest, _impl_.rec_limit_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.rec_limit_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.repo_)}},
    // required string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.subject_)}},
    // required uint64 data_limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RepoAllocationSetRequest, _impl_.data_limit_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.data_limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 data_limit = 3;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.data_limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 rec_limit = 4;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.rec_limit_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\42\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoAllocationSetRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoAllocationSetRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationSetRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationSetRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationSetRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required uint64 data_limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_data_limit(), target);
  }

  // required uint32 rec_limit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_rec_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationSetRequest)
  return target;
}

::size_t RepoAllocationSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationSetRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string subject = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // required uint64 data_limit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_limit());
    }

    // required uint32 rec_limit = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_limit());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationSetRequest::_class_data_ = {
    RepoAllocationSetRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationSetRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationSetRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationSetRequest*>(&to_msg);
  auto& from = static_cast<const RepoAllocationSetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationSetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.data_limit_ = from._impl_.data_limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.rec_limit_ = from._impl_.rec_limit_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationSetRequest::CopyFrom(const RepoAllocationSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationSetRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationSetRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationSetRequest::InternalSwap(RepoAllocationSetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.rec_limit_)
      + sizeof(RepoAllocationSetRequest::_impl_.rec_limit_)
      - PROTOBUF_FIELD_OFFSET(RepoAllocationSetRequest, _impl_.data_limit_)>(
          reinterpret_cast<char*>(&_impl_.data_limit_),
          reinterpret_cast<char*>(&other->_impl_.data_limit_));
}

::google::protobuf::Metadata RepoAllocationSetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[100]);
}
// ===================================================================

class RepoAllocationSetDefaultRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationSetDefaultRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoAllocationSetDefaultRequest::RepoAllocationSetDefaultRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationSetDefaultRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationSetDefaultRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoAllocationSetDefaultRequest::RepoAllocationSetDefaultRequest(
    ::google::protobuf::Arena* arena,
    const RepoAllocationSetDefaultRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationSetDefaultRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationSetDefaultRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationSetDefaultRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoAllocationSetDefaultRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoAllocationSetDefaultRequest::~RepoAllocationSetDefaultRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationSetDefaultRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationSetDefaultRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationSetDefaultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationSetDefaultRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationSetDefaultRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> RepoAllocationSetDefaultRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAllocationSetDefaultRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_.subject_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_.repo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationSetDefaultRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoAllocationSetDefaultRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoAllocationSetDefaultRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationSetDefaultRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationSetDefaultRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationSetDefaultRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationSetDefaultRequest)
  return target;
}

::size_t RepoAllocationSetDefaultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationSetDefaultRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string repo = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo());
  }

  // optional string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationSetDefaultRequest::_class_data_ = {
    RepoAllocationSetDefaultRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationSetDefaultRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationSetDefaultRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationSetDefaultRequest*>(&to_msg);
  auto& from = static_cast<const RepoAllocationSetDefaultRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationSetDefaultRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationSetDefaultRequest::CopyFrom(const RepoAllocationSetDefaultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationSetDefaultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationSetDefaultRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationSetDefaultRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationSetDefaultRequest::InternalSwap(RepoAllocationSetDefaultRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata RepoAllocationSetDefaultRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[101]);
}
// ===================================================================

class RepoAllocationDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAllocationDeleteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RepoAllocationDeleteRequest::RepoAllocationDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAllocationDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        subject_(arena, from.subject_) {}

RepoAllocationDeleteRequest::RepoAllocationDeleteRequest(
    ::google::protobuf::Arena* arena,
    const RepoAllocationDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAllocationDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAllocationDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAllocationDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        subject_(arena) {}

inline void RepoAllocationDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoAllocationDeleteRequest::~RepoAllocationDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAllocationDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAllocationDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAllocationDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAllocationDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAllocationDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> RepoAllocationDeleteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAllocationDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_.subject_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_.repo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string subject = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAllocationDeleteRequest, _impl_.subject_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\4\7\0\0\0\0\0"
    "SDMS.Auth.RepoAllocationDeleteRequest"
    "repo"
    "subject"
  }},
};

::uint8_t* RepoAllocationDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAllocationDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationDeleteRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string subject = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAllocationDeleteRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAllocationDeleteRequest)
  return target;
}

::size_t RepoAllocationDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAllocationDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string subject = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAllocationDeleteRequest::_class_data_ = {
    RepoAllocationDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAllocationDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAllocationDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAllocationDeleteRequest*>(&to_msg);
  auto& from = static_cast<const RepoAllocationDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAllocationDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject(from._internal_subject());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAllocationDeleteRequest::CopyFrom(const RepoAllocationDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAllocationDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAllocationDeleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAllocationDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAllocationDeleteRequest::InternalSwap(RepoAllocationDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata RepoAllocationDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[102]);
}
// ===================================================================

class RepoAuthzRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoAuthzRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

RepoAuthzRequest::RepoAuthzRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.RepoAuthzRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAuthzRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        client_(arena, from.client_),
        file_(arena, from.file_),
        action_(arena, from.action_) {}

RepoAuthzRequest::RepoAuthzRequest(
    ::google::protobuf::Arena* arena,
    const RepoAuthzRequest& from)
    : ::google::protobuf::Message(arena) {
  RepoAuthzRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.RepoAuthzRequest)
}
inline PROTOBUF_NDEBUG_INLINE RepoAuthzRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        client_(arena),
        file_(arena),
        action_(arena) {}

inline void RepoAuthzRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoAuthzRequest::~RepoAuthzRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.RepoAuthzRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoAuthzRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.client_.Destroy();
  _impl_.file_.Destroy();
  _impl_.action_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoAuthzRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.RepoAuthzRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.client_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.file_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.action_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoAuthzRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> RepoAuthzRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoAuthzRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string action = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.action_)}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.repo_)}},
    // required string client = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.client_)}},
    // required string file = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.file_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string client = 2;
    {PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.client_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string file = 3;
    {PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.file_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string action = 4;
    {PROTOBUF_FIELD_OFFSET(RepoAuthzRequest, _impl_.action_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\4\6\4\6\0\0\0"
    "SDMS.Auth.RepoAuthzRequest"
    "repo"
    "client"
    "file"
    "action"
  }},
};

::uint8_t* RepoAuthzRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.RepoAuthzRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAuthzRequest.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string client = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_client();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAuthzRequest.client");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string file = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_file();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAuthzRequest.file");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string action = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_action();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.RepoAuthzRequest.action");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.RepoAuthzRequest)
  return target;
}

::size_t RepoAuthzRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.RepoAuthzRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string client = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_client());
    }

    // required string file = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_file());
    }

    // required string action = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_action());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoAuthzRequest::_class_data_ = {
    RepoAuthzRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoAuthzRequest::GetClassData() const {
  return &_class_data_;
}

void RepoAuthzRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoAuthzRequest*>(&to_msg);
  auto& from = static_cast<const RepoAuthzRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.RepoAuthzRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_client(from._internal_client());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_file(from._internal_file());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_action(from._internal_action());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoAuthzRequest::CopyFrom(const RepoAuthzRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.RepoAuthzRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoAuthzRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoAuthzRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoAuthzRequest::InternalSwap(RepoAuthzRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_, &other->_impl_.file_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
}

::google::protobuf::Metadata RepoAuthzRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[103]);
}
// ===================================================================

class QueryCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_._has_bits_);
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::SDMS::Auth::SearchRequest& query(const QueryCreateRequest* msg);
  static void set_has_query(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::SDMS::Auth::SearchRequest& QueryCreateRequest::_Internal::query(const QueryCreateRequest* msg) {
  return *msg->_impl_.query_;
}
QueryCreateRequest::QueryCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_) {}

QueryCreateRequest::QueryCreateRequest(
    ::google::protobuf::Arena* arena,
    const QueryCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  QueryCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.query_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::SDMS::Auth::SearchRequest>(arena, *from._impl_.query_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena) {}

inline void QueryCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.query_ = {};
}
QueryCreateRequest::~QueryCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  delete _impl_.query_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.query_ != nullptr);
      _impl_.query_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2> QueryCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .SDMS.Auth.SearchRequest query = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_.query_)}},
    // required string title = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_.title_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string title = 1;
    {PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .SDMS.Auth.SearchRequest query = 2;
    {PROTOBUF_FIELD_OFFSET(QueryCreateRequest, _impl_.query_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::Auth::SearchRequest>()},
  }}, {{
    "\34\5\0\0\0\0\0\0"
    "SDMS.Auth.QueryCreateRequest"
    "title"
  }},
};

::uint8_t* QueryCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string title = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryCreateRequest.title");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .SDMS.Auth.SearchRequest query = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::query(this),
        _Internal::query(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryCreateRequest)
  return target;
}

::size_t QueryCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string title = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // required .SDMS.Auth.SearchRequest query = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.query_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryCreateRequest::_class_data_ = {
    QueryCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryCreateRequest::GetClassData() const {
  return &_class_data_;
}

void QueryCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryCreateRequest*>(&to_msg);
  auto& from = static_cast<const QueryCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_query()->::SDMS::Auth::SearchRequest::MergeFrom(
          from._internal_query());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCreateRequest::CopyFrom(const QueryCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.query_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* QueryCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryCreateRequest::InternalSwap(QueryCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  swap(_impl_.query_, other->_impl_.query_);
}

::google::protobuf::Metadata QueryCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[104]);
}
// ===================================================================

class QueryUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::SDMS::Auth::SearchRequest& query(const QueryUpdateRequest* msg);
  static void set_has_query(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::SDMS::Auth::SearchRequest& QueryUpdateRequest::_Internal::query(const QueryUpdateRequest* msg) {
  return *msg->_impl_.query_;
}
QueryUpdateRequest::QueryUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        title_(arena, from.title_) {}

QueryUpdateRequest::QueryUpdateRequest(
    ::google::protobuf::Arena* arena,
    const QueryUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  QueryUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.query_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::SDMS::Auth::SearchRequest>(arena, *from._impl_.query_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        title_(arena) {}

inline void QueryUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.query_ = {};
}
QueryUpdateRequest::~QueryUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  delete _impl_.query_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.query_ != nullptr);
      _impl_.query_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 44, 2> QueryUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.title_)}},
    // optional .SDMS.Auth.SearchRequest query = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.query_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.Auth.SearchRequest query = 3;
    {PROTOBUF_FIELD_OFFSET(QueryUpdateRequest, _impl_.query_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::Auth::SearchRequest>()},
  }}, {{
    "\34\2\5\0\0\0\0\0"
    "SDMS.Auth.QueryUpdateRequest"
    "id"
    "title"
  }},
};

::uint8_t* QueryUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryUpdateRequest.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .SDMS.Auth.SearchRequest query = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::query(this),
        _Internal::query(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryUpdateRequest)
  return target;
}

::size_t QueryUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional .SDMS.Auth.SearchRequest query = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.query_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryUpdateRequest::_class_data_ = {
    QueryUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void QueryUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryUpdateRequest*>(&to_msg);
  auto& from = static_cast<const QueryUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_query()->::SDMS::Auth::SearchRequest::MergeFrom(
          from._internal_query());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUpdateRequest::CopyFrom(const QueryUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.query_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* QueryUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryUpdateRequest::InternalSwap(QueryUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  swap(_impl_.query_, other->_impl_.query_);
}

::google::protobuf::Metadata QueryUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[105]);
}
// ===================================================================

class QueryDeleteRequest::_Internal {
 public:
};

QueryDeleteRequest::QueryDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _cached_size_{0} {}

QueryDeleteRequest::QueryDeleteRequest(
    ::google::protobuf::Arena* arena,
    const QueryDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  QueryDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _cached_size_{0} {}

inline void QueryDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDeleteRequest::~QueryDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 39, 2> QueryDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string id = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryDeleteRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\34\2\0\0\0\0\0\0"
    "SDMS.Auth.QueryDeleteRequest"
    "id"
  }},
};

::uint8_t* QueryDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string id = 1;
  for (int i = 0, n = this->_internal_id_size(); i < n; ++i) {
    const auto& s = this->_internal_id().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryDeleteRequest.id");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryDeleteRequest)
  return target;
}

::size_t QueryDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string id = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_id().size());
  for (int i = 0, n = _internal_id().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_id().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryDeleteRequest::_class_data_ = {
    QueryDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void QueryDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryDeleteRequest*>(&to_msg);
  auto& from = static_cast<const QueryDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDeleteRequest::CopyFrom(const QueryDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* QueryDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryDeleteRequest::InternalSwap(QueryDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata QueryDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[106]);
}
// ===================================================================

class QueryListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

QueryListRequest::QueryListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryListRequest)
}
QueryListRequest::QueryListRequest(
    ::google::protobuf::Arena* arena, const QueryListRequest& from)
    : QueryListRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
QueryListRequest::~QueryListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> QueryListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryListRequest, _impl_.count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.count_)}},
    // optional uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryListRequest, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 2;
    {PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* QueryListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_offset(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryListRequest)
  return target;
}

::size_t QueryListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 offset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryListRequest::_class_data_ = {
    QueryListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryListRequest::GetClassData() const {
  return &_class_data_;
}

void QueryListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryListRequest*>(&to_msg);
  auto& from = static_cast<const QueryListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryListRequest::CopyFrom(const QueryListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* QueryListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryListRequest::InternalSwap(QueryListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.count_)
      + sizeof(QueryListRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(QueryListRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata QueryListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[107]);
}
// ===================================================================

class QueryViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

QueryViewRequest::QueryViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

QueryViewRequest::QueryViewRequest(
    ::google::protobuf::Arena* arena,
    const QueryViewRequest& from)
    : ::google::protobuf::Message(arena) {
  QueryViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void QueryViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryViewRequest::~QueryViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> QueryViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\2\0\0\0\0\0\0"
    "SDMS.Auth.QueryViewRequest"
    "id"
  }},
};

::uint8_t* QueryViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryViewRequest)
  return target;
}

::size_t QueryViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryViewRequest::_class_data_ = {
    QueryViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryViewRequest::GetClassData() const {
  return &_class_data_;
}

void QueryViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryViewRequest*>(&to_msg);
  auto& from = static_cast<const QueryViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryViewRequest::CopyFrom(const QueryViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* QueryViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryViewRequest::InternalSwap(QueryViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata QueryViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[108]);
}
// ===================================================================

class QueryExecRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryExecRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

QueryExecRequest::QueryExecRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryExecRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryExecRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

QueryExecRequest::QueryExecRequest(
    ::google::protobuf::Arena* arena,
    const QueryExecRequest& from)
    : ::google::protobuf::Message(arena) {
  QueryExecRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryExecRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryExecRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void QueryExecRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
QueryExecRequest::~QueryExecRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryExecRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryExecRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryExecRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryExecRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryExecRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 37, 2> QueryExecRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryExecRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.id_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryExecRequest, _impl_.offset_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryExecRequest, _impl_.count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\32\2\0\0\0\0\0\0"
    "SDMS.Auth.QueryExecRequest"
    "id"
  }},
};

::uint8_t* QueryExecRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryExecRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryExecRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryExecRequest)
  return target;
}

::size_t QueryExecRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryExecRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryExecRequest::_class_data_ = {
    QueryExecRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryExecRequest::GetClassData() const {
  return &_class_data_;
}

void QueryExecRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryExecRequest*>(&to_msg);
  auto& from = static_cast<const QueryExecRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryExecRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryExecRequest::CopyFrom(const QueryExecRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryExecRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryExecRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* QueryExecRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryExecRequest::InternalSwap(QueryExecRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.count_)
      + sizeof(QueryExecRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(QueryExecRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata QueryExecRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[109]);
}
// ===================================================================

class QueryDataReply::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDataReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::SDMS::Auth::SearchRequest& query(const QueryDataReply* msg);
  static void set_has_query(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

const ::SDMS::Auth::SearchRequest& QueryDataReply::_Internal::query(const QueryDataReply* msg) {
  return *msg->_impl_.query_;
}
QueryDataReply::QueryDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.QueryDataReply)
}
inline PROTOBUF_NDEBUG_INLINE QueryDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        title_(arena, from.title_),
        owner_(arena, from.owner_) {}

QueryDataReply::QueryDataReply(
    ::google::protobuf::Arena* arena,
    const QueryDataReply& from)
    : ::google::protobuf::Message(arena) {
  QueryDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.query_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::SDMS::Auth::SearchRequest>(arena, *from._impl_.query_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ct_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ct_),
           offsetof(Impl_, ut_) -
               offsetof(Impl_, ct_) +
               sizeof(Impl_::ut_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.QueryDataReply)
}
inline PROTOBUF_NDEBUG_INLINE QueryDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        title_(arena),
        owner_(arena) {}

inline void QueryDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, query_),
           0,
           offsetof(Impl_, ut_) -
               offsetof(Impl_, query_) +
               sizeof(Impl_::ut_));
}
QueryDataReply::~QueryDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.QueryDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.owner_.Destroy();
  delete _impl_.query_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.QueryDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.query_ != nullptr);
      _impl_.query_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.ct_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ut_) -
        reinterpret_cast<char*>(&_impl_.ct_)) + sizeof(_impl_.ut_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 45, 2> QueryDataReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967172,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.title_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // required string owner = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.owner_)}},
    // required uint32 ct = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryDataReply, _impl_.ct_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.ct_)}},
    // required uint32 ut = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryDataReply, _impl_.ut_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.ut_)}},
    // required .SDMS.Auth.SearchRequest query = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.query_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string owner = 4;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.owner_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 ct = 5;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.ct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 ut = 6;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.ut_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required .SDMS.Auth.SearchRequest query = 7;
    {PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.query_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::Auth::SearchRequest>()},
  }}, {{
    "\30\2\5\5\0\0\0\0"
    "SDMS.Auth.QueryDataReply"
    "id"
    "title"
    "owner"
  }},
};

::uint8_t* QueryDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.QueryDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryDataReply.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryDataReply.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string owner = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.QueryDataReply.owner");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required uint32 ct = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_ct(), target);
  }

  // required uint32 ut = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_ut(), target);
  }

  // required .SDMS.Auth.SearchRequest query = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::query(this),
        _Internal::query(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.QueryDataReply)
  return target;
}

::size_t QueryDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.QueryDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // required string owner = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // required .SDMS.Auth.SearchRequest query = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.query_);
    }

    // required uint32 ct = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // required uint32 ut = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryDataReply::_class_data_ = {
    QueryDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryDataReply::GetClassData() const {
  return &_class_data_;
}

void QueryDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryDataReply*>(&to_msg);
  auto& from = static_cast<const QueryDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.QueryDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_query()->::SDMS::Auth::SearchRequest::MergeFrom(
          from._internal_query());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDataReply::CopyFrom(const QueryDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.QueryDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryDataReply::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.query_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* QueryDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryDataReply::InternalSwap(QueryDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.ut_)
      + sizeof(QueryDataReply::_impl_.ut_)
      - PROTOBUF_FIELD_OFFSET(QueryDataReply, _impl_.query_)>(
          reinterpret_cast<char*>(&_impl_.query_),
          reinterpret_cast<char*>(&other->_impl_.query_));
}

::google::protobuf::Metadata QueryDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[110]);
}
// ===================================================================

class NoteListBySubjectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteListBySubjectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteListBySubjectRequest, _impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

NoteListBySubjectRequest::NoteListBySubjectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteListBySubjectRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteListBySubjectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

NoteListBySubjectRequest::NoteListBySubjectRequest(
    ::google::protobuf::Arena* arena,
    const NoteListBySubjectRequest& from)
    : ::google::protobuf::Message(arena) {
  NoteListBySubjectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteListBySubjectRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteListBySubjectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void NoteListBySubjectRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NoteListBySubjectRequest::~NoteListBySubjectRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteListBySubjectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteListBySubjectRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteListBySubjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteListBySubjectRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteListBySubjectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> NoteListBySubjectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteListBySubjectRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NoteListBySubjectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string subject = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteListBySubjectRequest, _impl_.subject_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string subject = 1;
    {PROTOBUF_FIELD_OFFSET(NoteListBySubjectRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\7\0\0\0\0\0\0"
    "SDMS.Auth.NoteListBySubjectRequest"
    "subject"
  }},
};

::uint8_t* NoteListBySubjectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteListBySubjectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string subject = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteListBySubjectRequest.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteListBySubjectRequest)
  return target;
}

::size_t NoteListBySubjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteListBySubjectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string subject = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteListBySubjectRequest::_class_data_ = {
    NoteListBySubjectRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteListBySubjectRequest::GetClassData() const {
  return &_class_data_;
}

void NoteListBySubjectRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteListBySubjectRequest*>(&to_msg);
  auto& from = static_cast<const NoteListBySubjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteListBySubjectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_subject(from._internal_subject());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteListBySubjectRequest::CopyFrom(const NoteListBySubjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteListBySubjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteListBySubjectRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteListBySubjectRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteListBySubjectRequest::InternalSwap(NoteListBySubjectRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
}

::google::protobuf::Metadata NoteListBySubjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[111]);
}
// ===================================================================

class NoteViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

NoteViewRequest::NoteViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

NoteViewRequest::NoteViewRequest(
    ::google::protobuf::Arena* arena,
    const NoteViewRequest& from)
    : ::google::protobuf::Message(arena) {
  NoteViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void NoteViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NoteViewRequest::~NoteViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> NoteViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NoteViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(NoteViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\2\0\0\0\0\0\0"
    "SDMS.Auth.NoteViewRequest"
    "id"
  }},
};

::uint8_t* NoteViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteViewRequest)
  return target;
}

::size_t NoteViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteViewRequest::_class_data_ = {
    NoteViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteViewRequest::GetClassData() const {
  return &_class_data_;
}

void NoteViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteViewRequest*>(&to_msg);
  auto& from = static_cast<const NoteViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteViewRequest::CopyFrom(const NoteViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteViewRequest::InternalSwap(NoteViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata NoteViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[112]);
}
// ===================================================================

class NoteCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_comment(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_activate(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

NoteCreateRequest::NoteCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_),
        title_(arena, from.title_),
        comment_(arena, from.comment_) {}

NoteCreateRequest::NoteCreateRequest(
    ::google::protobuf::Arena* arena,
    const NoteCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  NoteCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, activate_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::activate_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena),
        title_(arena),
        comment_(arena) {}

inline void NoteCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, activate_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::activate_));
}
NoteCreateRequest::~NoteCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.title_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.comment_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.activate_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.activate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 55, 2> NoteCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoteCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .SDMS.NoteType type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 3, 3, PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.type_)}},
    // required string subject = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.subject_)}},
    // required string title = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.title_)}},
    // required string comment = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.comment_)}},
    // required bool activate = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NoteCreateRequest, _impl_.activate_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.activate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .SDMS.NoteType type = 1;
    {PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required string subject = 2;
    {PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 3;
    {PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string comment = 4;
    {PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.comment_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required bool activate = 5;
    {PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.activate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {0, 4},
  }}, {{
    "\33\0\7\5\7\0\0\0"
    "SDMS.Auth.NoteCreateRequest"
    "subject"
    "title"
    "comment"
  }},
};

::uint8_t* NoteCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .SDMS.NoteType type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // required string subject = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteCreateRequest.subject");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string title = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteCreateRequest.title");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string comment = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_comment();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteCreateRequest.comment");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required bool activate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_activate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteCreateRequest)
  return target;
}

::size_t NoteCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required string subject = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // required string title = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // required string comment = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_comment());
    }

    // required .SDMS.NoteType type = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required bool activate = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteCreateRequest::_class_data_ = {
    NoteCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteCreateRequest::GetClassData() const {
  return &_class_data_;
}

void NoteCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteCreateRequest*>(&to_msg);
  auto& from = static_cast<const NoteCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_comment(from._internal_comment());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.activate_ = from._impl_.activate_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteCreateRequest::CopyFrom(const NoteCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteCreateRequest::InternalSwap(NoteCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.activate_)
      + sizeof(NoteCreateRequest::_impl_.activate_)
      - PROTOBUF_FIELD_OFFSET(NoteCreateRequest, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata NoteCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[113]);
}
// ===================================================================

class NoteUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_comment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_new_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_new_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_new_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

NoteUpdateRequest::NoteUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        comment_(arena, from.comment_),
        new_title_(arena, from.new_title_) {}

NoteUpdateRequest::NoteUpdateRequest(
    ::google::protobuf::Arena* arena,
    const NoteUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  NoteUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, new_type_),
           offsetof(Impl_, new_state_) -
               offsetof(Impl_, new_type_) +
               sizeof(Impl_::new_state_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        comment_(arena),
        new_title_(arena) {}

inline void NoteUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_type_),
           0,
           offsetof(Impl_, new_state_) -
               offsetof(Impl_, new_type_) +
               sizeof(Impl_::new_state_));
}
NoteUpdateRequest::~NoteUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.new_title_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.comment_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.new_title_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.new_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.new_state_) -
        reinterpret_cast<char*>(&_impl_.new_type_)) + sizeof(_impl_.new_state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 54, 2> NoteUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoteUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.id_)}},
    // required string comment = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.comment_)}},
    // optional .SDMS.NoteType new_type = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 3, 3, PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_type_)}},
    // optional .SDMS.NoteState new_state = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 4, 2, PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_state_)}},
    // optional string new_title = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_title_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string comment = 2;
    {PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.comment_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.NoteType new_type = 3;
    {PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .SDMS.NoteState new_state = 4;
    {PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_state_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string new_title = 5;
    {PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_title_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 4},
    {0, 3},
  }}, {{
    "\33\2\7\0\0\11\0\0"
    "SDMS.Auth.NoteUpdateRequest"
    "id"
    "comment"
    "new_title"
  }},
};

::uint8_t* NoteUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string comment = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_comment();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteUpdateRequest.comment");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .SDMS.NoteType new_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_new_type(), target);
  }

  // optional .SDMS.NoteState new_state = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_new_state(), target);
  }

  // optional string new_title = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_new_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteUpdateRequest.new_title");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteUpdateRequest)
  return target;
}

::size_t NoteUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string comment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_comment());
    }

  }
  if (cached_has_bits & 0x0000001cu) {
    // optional string new_title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_new_title());
    }

    // optional .SDMS.NoteType new_type = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_new_type());
    }

    // optional .SDMS.NoteState new_state = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_new_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteUpdateRequest::_class_data_ = {
    NoteUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void NoteUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteUpdateRequest*>(&to_msg);
  auto& from = static_cast<const NoteUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_comment(from._internal_comment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_new_title(from._internal_new_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.new_type_ = from._impl_.new_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.new_state_ = from._impl_.new_state_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteUpdateRequest::CopyFrom(const NoteUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteUpdateRequest::InternalSwap(NoteUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_title_, &other->_impl_.new_title_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_state_)
      + sizeof(NoteUpdateRequest::_impl_.new_state_)
      - PROTOBUF_FIELD_OFFSET(NoteUpdateRequest, _impl_.new_type_)>(
          reinterpret_cast<char*>(&_impl_.new_type_),
          reinterpret_cast<char*>(&other->_impl_.new_type_));
}

::google::protobuf::Metadata NoteUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[114]);
}
// ===================================================================

class NoteCommentEditRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteCommentEditRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_comment_idx(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_comment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

NoteCommentEditRequest::NoteCommentEditRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteCommentEditRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteCommentEditRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        comment_(arena, from.comment_) {}

NoteCommentEditRequest::NoteCommentEditRequest(
    ::google::protobuf::Arena* arena,
    const NoteCommentEditRequest& from)
    : ::google::protobuf::Message(arena) {
  NoteCommentEditRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.comment_idx_ = from._impl_.comment_idx_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteCommentEditRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoteCommentEditRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        comment_(arena) {}

inline void NoteCommentEditRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.comment_idx_ = {};
}
NoteCommentEditRequest::~NoteCommentEditRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteCommentEditRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteCommentEditRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteCommentEditRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteCommentEditRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.comment_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.comment_idx_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteCommentEditRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2> NoteCommentEditRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NoteCommentEditRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.id_)}},
    // required uint32 comment_idx = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NoteCommentEditRequest, _impl_.comment_idx_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.comment_idx_)}},
    // required string comment = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.comment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 comment_idx = 2;
    {PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.comment_idx_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required string comment = 3;
    {PROTOBUF_FIELD_OFFSET(NoteCommentEditRequest, _impl_.comment_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\2\0\7\0\0\0\0"
    "SDMS.Auth.NoteCommentEditRequest"
    "id"
    "comment"
  }},
};

::uint8_t* NoteCommentEditRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteCommentEditRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteCommentEditRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 comment_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_comment_idx(), target);
  }

  // required string comment = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_comment();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.NoteCommentEditRequest.comment");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteCommentEditRequest)
  return target;
}

::size_t NoteCommentEditRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteCommentEditRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string comment = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_comment());
    }

    // required uint32 comment_idx = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_comment_idx());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteCommentEditRequest::_class_data_ = {
    NoteCommentEditRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteCommentEditRequest::GetClassData() const {
  return &_class_data_;
}

void NoteCommentEditRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteCommentEditRequest*>(&to_msg);
  auto& from = static_cast<const NoteCommentEditRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteCommentEditRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_comment(from._internal_comment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.comment_idx_ = from._impl_.comment_idx_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteCommentEditRequest::CopyFrom(const NoteCommentEditRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteCommentEditRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteCommentEditRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteCommentEditRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteCommentEditRequest::InternalSwap(NoteCommentEditRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
        swap(_impl_.comment_idx_, other->_impl_.comment_idx_);
}

::google::protobuf::Metadata NoteCommentEditRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[115]);
}
// ===================================================================

class NoteDataReply::_Internal {
 public:
};

void NoteDataReply::clear_note() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.note_.Clear();
}
void NoteDataReply::clear_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_.Clear();
}
NoteDataReply::NoteDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.NoteDataReply)
}
inline PROTOBUF_NDEBUG_INLINE NoteDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : note_{visibility, arena, from.note_},
        update_{visibility, arena, from.update_},
        _cached_size_{0} {}

NoteDataReply::NoteDataReply(
    ::google::protobuf::Arena* arena,
    const NoteDataReply& from)
    : ::google::protobuf::Message(arena) {
  NoteDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.NoteDataReply)
}
inline PROTOBUF_NDEBUG_INLINE NoteDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : note_{visibility, arena},
        update_{visibility, arena},
        _cached_size_{0} {}

inline void NoteDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NoteDataReply::~NoteDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.NoteDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.NoteDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.note_.Clear();
  _impl_.update_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> NoteDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoteDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ListingData update = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(NoteDataReply, _impl_.update_)}},
    // repeated .SDMS.NoteData note = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NoteDataReply, _impl_.note_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.NoteData note = 1;
    {PROTOBUF_FIELD_OFFSET(NoteDataReply, _impl_.note_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SDMS.ListingData update = 2;
    {PROTOBUF_FIELD_OFFSET(NoteDataReply, _impl_.update_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::NoteData>()},
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
  }}, {{
  }},
};

::uint8_t* NoteDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.NoteDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.NoteData note = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_note_size()); i < n; i++) {
    const auto& repfield = this->_internal_note().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .SDMS.ListingData update = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_update_size()); i < n; i++) {
    const auto& repfield = this->_internal_update().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.NoteDataReply)
  return target;
}

::size_t NoteDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.NoteDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.NoteData note = 1;
  total_size += 1UL * this->_internal_note_size();
  for (const auto& msg : this->_internal_note()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .SDMS.ListingData update = 2;
  total_size += 1UL * this->_internal_update_size();
  for (const auto& msg : this->_internal_update()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteDataReply::_class_data_ = {
    NoteDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteDataReply::GetClassData() const {
  return &_class_data_;
}

void NoteDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteDataReply*>(&to_msg);
  auto& from = static_cast<const NoteDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.NoteDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_note()->MergeFrom(
      from._internal_note());
  _this->_internal_mutable_update()->MergeFrom(
      from._internal_update());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteDataReply::CopyFrom(const NoteDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.NoteDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_note()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_update()))
    return false;
  return true;
}

::_pbi::CachedSize* NoteDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteDataReply::InternalSwap(NoteDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.note_.InternalSwap(&other->_impl_.note_);
  _impl_.update_.InternalSwap(&other->_impl_.update_);
}

::google::protobuf::Metadata NoteDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[116]);
}
// ===================================================================

class TaskViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TaskViewRequest, _impl_._has_bits_);
  static void set_has_task_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TaskViewRequest::TaskViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TaskViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_id_(arena, from.task_id_) {}

TaskViewRequest::TaskViewRequest(
    ::google::protobuf::Arena* arena,
    const TaskViewRequest& from)
    : ::google::protobuf::Message(arena) {
  TaskViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TaskViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_id_(arena) {}

inline void TaskViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaskViewRequest::~TaskViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TaskViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TaskViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TaskViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.task_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> TaskViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TaskViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string task_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TaskViewRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskViewRequest, _impl_.task_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\0\0\0\0\0\0"
    "SDMS.Auth.TaskViewRequest"
    "task_id"
  }},
};

::uint8_t* TaskViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TaskViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string task_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.TaskViewRequest.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TaskViewRequest)
  return target;
}

::size_t TaskViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TaskViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string task_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskViewRequest::_class_data_ = {
    TaskViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TaskViewRequest::GetClassData() const {
  return &_class_data_;
}

void TaskViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskViewRequest*>(&to_msg);
  auto& from = static_cast<const TaskViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TaskViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskViewRequest::CopyFrom(const TaskViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TaskViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TaskViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TaskViewRequest::InternalSwap(TaskViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata TaskViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[117]);
}
// ===================================================================

class TaskListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_._has_bits_);
  static void set_has_since(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

TaskListRequest::TaskListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TaskListRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        status_{visibility, arena, from.status_} {}

TaskListRequest::TaskListRequest(
    ::google::protobuf::Arena* arena,
    const TaskListRequest& from)
    : ::google::protobuf::Message(arena) {
  TaskListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, since_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, since_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TaskListRequest)
}
inline PROTOBUF_NDEBUG_INLINE TaskListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        status_{visibility, arena} {}

inline void TaskListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, since_) +
               sizeof(Impl_::count_));
}
TaskListRequest::~TaskListRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TaskListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TaskListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TaskListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.since_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.since_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> TaskListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TaskListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 since = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskListRequest, _impl_.since_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.since_)}},
    // optional uint32 from = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskListRequest, _impl_.from_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.from_)}},
    // optional uint32 to = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskListRequest, _impl_.to_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.to_)}},
    // repeated .SDMS.TaskStatus status = 4;
    {::_pbi::TcParser::FastEr0R1,
     {32, 63, 4, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.status_)}},
    // optional uint32 offset = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskListRequest, _impl_.offset_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.offset_)}},
    // optional uint32 count = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskListRequest, _impl_.count_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 since = 1;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.since_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 from = 2;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.from_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 to = 3;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.to_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .SDMS.TaskStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
    // optional uint32 offset = 5;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.offset_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 6;
    {PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 5},
  }}, {{
  }},
};

::uint8_t* TaskListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TaskListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 since = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_since(), target);
  }

  // optional uint32 from = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_from(), target);
  }

  // optional uint32 to = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_to(), target);
  }

  // repeated .SDMS.TaskStatus status = 4;
  for (int i = 0, n = this->_internal_status_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, static_cast<::SDMS::TaskStatus>(this->_internal_status().Get(i)),
        target);
  }

  // optional uint32 offset = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_offset(), target);
  }

  // optional uint32 count = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TaskListRequest)
  return target;
}

::size_t TaskListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TaskListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.TaskStatus status = 4;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_status_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_status().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 since = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_since());
    }

    // optional uint32 from = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_from());
    }

    // optional uint32 to = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_to());
    }

    // optional uint32 offset = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskListRequest::_class_data_ = {
    TaskListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TaskListRequest::GetClassData() const {
  return &_class_data_;
}

void TaskListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskListRequest*>(&to_msg);
  auto& from = static_cast<const TaskListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TaskListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_status()->MergeFrom(from._internal_status());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.since_ = from._impl_.since_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.from_ = from._impl_.from_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.to_ = from._impl_.to_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskListRequest::CopyFrom(const TaskListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TaskListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TaskListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TaskListRequest::InternalSwap(TaskListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.status_.InternalSwap(&other->_impl_.status_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.count_)
      + sizeof(TaskListRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(TaskListRequest, _impl_.since_)>(
          reinterpret_cast<char*>(&_impl_.since_),
          reinterpret_cast<char*>(&other->_impl_.since_));
}

::google::protobuf::Metadata TaskListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[118]);
}
// ===================================================================

class TaskDataReply::_Internal {
 public:
};

void TaskDataReply::clear_task() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.task_.Clear();
}
TaskDataReply::TaskDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TaskDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TaskDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : task_{visibility, arena, from.task_},
        _cached_size_{0} {}

TaskDataReply::TaskDataReply(
    ::google::protobuf::Arena* arena,
    const TaskDataReply& from)
    : ::google::protobuf::Message(arena) {
  TaskDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TaskDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TaskDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_{visibility, arena},
        _cached_size_{0} {}

inline void TaskDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaskDataReply::~TaskDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TaskDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TaskDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TaskDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TaskDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TaskDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.TaskData task = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskDataReply, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.TaskData task = 1;
    {PROTOBUF_FIELD_OFFSET(TaskDataReply, _impl_.task_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::TaskData>()},
  }}, {{
  }},
};

::uint8_t* TaskDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TaskDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.TaskData task = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_task_size()); i < n; i++) {
    const auto& repfield = this->_internal_task().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TaskDataReply)
  return target;
}

::size_t TaskDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TaskDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.TaskData task = 1;
  total_size += 1UL * this->_internal_task_size();
  for (const auto& msg : this->_internal_task()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskDataReply::_class_data_ = {
    TaskDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TaskDataReply::GetClassData() const {
  return &_class_data_;
}

void TaskDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskDataReply*>(&to_msg);
  auto& from = static_cast<const TaskDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TaskDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_task()->MergeFrom(
      from._internal_task());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskDataReply::CopyFrom(const TaskDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TaskDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_task()))
    return false;
  return true;
}

::_pbi::CachedSize* TaskDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TaskDataReply::InternalSwap(TaskDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.task_.InternalSwap(&other->_impl_.task_);
}

::google::protobuf::Metadata TaskDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[119]);
}
// ===================================================================

class TagSearchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TagSearchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

TagSearchRequest::TagSearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TagSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE TagSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

TagSearchRequest::TagSearchRequest(
    ::google::protobuf::Arena* arena,
    const TagSearchRequest& from)
    : ::google::protobuf::Message(arena) {
  TagSearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TagSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE TagSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void TagSearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
TagSearchRequest::~TagSearchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TagSearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TagSearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TagSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TagSearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TagSearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 39, 2> TagSearchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TagSearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.name_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagSearchRequest, _impl_.offset_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagSearchRequest, _impl_.count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "SDMS.Auth.TagSearchRequest"
    "name"
  }},
};

::uint8_t* TagSearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TagSearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.TagSearchRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TagSearchRequest)
  return target;
}

::size_t TagSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TagSearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TagSearchRequest::_class_data_ = {
    TagSearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TagSearchRequest::GetClassData() const {
  return &_class_data_;
}

void TagSearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TagSearchRequest*>(&to_msg);
  auto& from = static_cast<const TagSearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TagSearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TagSearchRequest::CopyFrom(const TagSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TagSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TagSearchRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TagSearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TagSearchRequest::InternalSwap(TagSearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.count_)
      + sizeof(TagSearchRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(TagSearchRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata TagSearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[120]);
}
// ===================================================================

class TagListByCountRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TagListByCountRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TagListByCountRequest::TagListByCountRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TagListByCountRequest)
}
TagListByCountRequest::TagListByCountRequest(
    ::google::protobuf::Arena* arena, const TagListByCountRequest& from)
    : TagListByCountRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TagListByCountRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TagListByCountRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
TagListByCountRequest::~TagListByCountRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TagListByCountRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TagListByCountRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TagListByCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TagListByCountRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TagListByCountRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TagListByCountRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TagListByCountRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagListByCountRequest, _impl_.count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.count_)}},
    // optional uint32 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagListByCountRequest, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 offset = 1;
    {PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 2;
    {PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TagListByCountRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TagListByCountRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_offset(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TagListByCountRequest)
  return target;
}

::size_t TagListByCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TagListByCountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 offset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TagListByCountRequest::_class_data_ = {
    TagListByCountRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TagListByCountRequest::GetClassData() const {
  return &_class_data_;
}

void TagListByCountRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TagListByCountRequest*>(&to_msg);
  auto& from = static_cast<const TagListByCountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TagListByCountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TagListByCountRequest::CopyFrom(const TagListByCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TagListByCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TagListByCountRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TagListByCountRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TagListByCountRequest::InternalSwap(TagListByCountRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.count_)
      + sizeof(TagListByCountRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(TagListByCountRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata TagListByCountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[121]);
}
// ===================================================================

class TagDataReply::_Internal {
 public:
  using HasBits = decltype(std::declval<TagDataReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void TagDataReply::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.Clear();
}
TagDataReply::TagDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TagDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TagDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tag_{visibility, arena, from.tag_} {}

TagDataReply::TagDataReply(
    ::google::protobuf::Arena* arena,
    const TagDataReply& from)
    : ::google::protobuf::Message(arena) {
  TagDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TagDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TagDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tag_{visibility, arena} {}

inline void TagDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));
}
TagDataReply::~TagDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TagDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TagDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TagDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TagDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TagDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TagDataReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TagDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 total = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagDataReply, _impl_.total_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.total_)}},
    // repeated .SDMS.TagData tag = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.tag_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagDataReply, _impl_.offset_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TagDataReply, _impl_.count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.TagData tag = 1;
    {PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.tag_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total = 4;
    {PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.total_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::TagData>()},
  }}, {{
  }},
};

::uint8_t* TagDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TagDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.TagData tag = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tag_size()); i < n; i++) {
    const auto& repfield = this->_internal_tag().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  // optional uint32 total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TagDataReply)
  return target;
}

::size_t TagDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TagDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.TagData tag = 1;
  total_size += 1UL * this->_internal_tag_size();
  for (const auto& msg : this->_internal_tag()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

    // optional uint32 total = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TagDataReply::_class_data_ = {
    TagDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TagDataReply::GetClassData() const {
  return &_class_data_;
}

void TagDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TagDataReply*>(&to_msg);
  auto& from = static_cast<const TagDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TagDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tag()->MergeFrom(
      from._internal_tag());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TagDataReply::CopyFrom(const TagDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TagDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TagDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_tag()))
    return false;
  return true;
}

::_pbi::CachedSize* TagDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TagDataReply::InternalSwap(TagDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tag_.InternalSwap(&other->_impl_.tag_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.total_)
      + sizeof(TagDataReply::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(TagDataReply, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata TagDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[122]);
}
// ===================================================================

class MetadataValidateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MetadataValidateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_._has_bits_);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sch_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

MetadataValidateRequest::MetadataValidateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.MetadataValidateRequest)
}
inline PROTOBUF_NDEBUG_INLINE MetadataValidateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        metadata_(arena, from.metadata_),
        sch_id_(arena, from.sch_id_) {}

MetadataValidateRequest::MetadataValidateRequest(
    ::google::protobuf::Arena* arena,
    const MetadataValidateRequest& from)
    : ::google::protobuf::Message(arena) {
  MetadataValidateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.MetadataValidateRequest)
}
inline PROTOBUF_NDEBUG_INLINE MetadataValidateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        metadata_(arena),
        sch_id_(arena) {}

inline void MetadataValidateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MetadataValidateRequest::~MetadataValidateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.MetadataValidateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetadataValidateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.metadata_.Destroy();
  _impl_.sch_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MetadataValidateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.MetadataValidateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.metadata_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.sch_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetadataValidateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> MetadataValidateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MetadataValidateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string sch_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_.sch_id_)}},
    // required string metadata = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string metadata = 1;
    {PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string sch_id = 2;
    {PROTOBUF_FIELD_OFFSET(MetadataValidateRequest, _impl_.sch_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\10\6\0\0\0\0\0"
    "SDMS.Auth.MetadataValidateRequest"
    "metadata"
    "sch_id"
  }},
};

::uint8_t* MetadataValidateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.MetadataValidateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string metadata = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_metadata();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.MetadataValidateRequest.metadata");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string sch_id = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_sch_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.MetadataValidateRequest.sch_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.MetadataValidateRequest)
  return target;
}

::size_t MetadataValidateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.MetadataValidateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string metadata = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_metadata());
    }

    // required string sch_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sch_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetadataValidateRequest::_class_data_ = {
    MetadataValidateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MetadataValidateRequest::GetClassData() const {
  return &_class_data_;
}

void MetadataValidateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetadataValidateRequest*>(&to_msg);
  auto& from = static_cast<const MetadataValidateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.MetadataValidateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_metadata(from._internal_metadata());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_sch_id(from._internal_sch_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetadataValidateRequest::CopyFrom(const MetadataValidateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.MetadataValidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetadataValidateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MetadataValidateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MetadataValidateRequest::InternalSwap(MetadataValidateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sch_id_, &other->_impl_.sch_id_, arena);
}

::google::protobuf::Metadata MetadataValidateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[123]);
}
// ===================================================================

class MetadataValidateReply::_Internal {
 public:
  using HasBits = decltype(std::declval<MetadataValidateReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MetadataValidateReply, _impl_._has_bits_);
  static void set_has_errors(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MetadataValidateReply::MetadataValidateReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.MetadataValidateReply)
}
inline PROTOBUF_NDEBUG_INLINE MetadataValidateReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errors_(arena, from.errors_) {}

MetadataValidateReply::MetadataValidateReply(
    ::google::protobuf::Arena* arena,
    const MetadataValidateReply& from)
    : ::google::protobuf::Message(arena) {
  MetadataValidateReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.MetadataValidateReply)
}
inline PROTOBUF_NDEBUG_INLINE MetadataValidateReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        errors_(arena) {}

inline void MetadataValidateReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MetadataValidateReply::~MetadataValidateReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.MetadataValidateReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetadataValidateReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.errors_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MetadataValidateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.MetadataValidateReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.errors_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetadataValidateReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 46, 2> MetadataValidateReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MetadataValidateReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MetadataValidateReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string errors = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MetadataValidateReply, _impl_.errors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string errors = 1;
    {PROTOBUF_FIELD_OFFSET(MetadataValidateReply, _impl_.errors_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\6\0\0\0\0\0\0"
    "SDMS.Auth.MetadataValidateReply"
    "errors"
  }},
};

::uint8_t* MetadataValidateReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.MetadataValidateReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string errors = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_errors();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.MetadataValidateReply.errors");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.MetadataValidateReply)
  return target;
}

::size_t MetadataValidateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.MetadataValidateReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string errors = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_errors());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetadataValidateReply::_class_data_ = {
    MetadataValidateReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MetadataValidateReply::GetClassData() const {
  return &_class_data_;
}

void MetadataValidateReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetadataValidateReply*>(&to_msg);
  auto& from = static_cast<const MetadataValidateReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.MetadataValidateReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_errors(from._internal_errors());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetadataValidateReply::CopyFrom(const MetadataValidateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.MetadataValidateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetadataValidateReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MetadataValidateReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MetadataValidateReply::InternalSwap(MetadataValidateReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errors_, &other->_impl_.errors_, arena);
}

::google::protobuf::Metadata MetadataValidateReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[124]);
}
// ===================================================================

class SchemaViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_resolve(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SchemaViewRequest::SchemaViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

SchemaViewRequest::SchemaViewRequest(
    ::google::protobuf::Arena* arena,
    const SchemaViewRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.resolve_ = from._impl_.resolve_;

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void SchemaViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resolve_ = {};
}
SchemaViewRequest::~SchemaViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.resolve_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> SchemaViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SchemaViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool resolve = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaViewRequest, _impl_.resolve_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_.resolve_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool resolve = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaViewRequest, _impl_.resolve_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\2\0\0\0\0\0\0"
    "SDMS.Auth.SchemaViewRequest"
    "id"
  }},
};

::uint8_t* SchemaViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool resolve = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_resolve(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaViewRequest)
  return target;
}

::size_t SchemaViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // optional bool resolve = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaViewRequest::_class_data_ = {
    SchemaViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaViewRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaViewRequest*>(&to_msg);
  auto& from = static_cast<const SchemaViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.resolve_ = from._impl_.resolve_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaViewRequest::CopyFrom(const SchemaViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SchemaViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaViewRequest::InternalSwap(SchemaViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.resolve_, other->_impl_.resolve_);
}

::google::protobuf::Metadata SchemaViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[125]);
}
// ===================================================================

class SchemaSearchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaSearchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sort(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sort_rev(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

SchemaSearchRequest::SchemaSearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        text_(arena, from.text_),
        owner_(arena, from.owner_) {}

SchemaSearchRequest::SchemaSearchRequest(
    ::google::protobuf::Arena* arena,
    const SchemaSearchRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaSearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sort_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sort_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, sort_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        text_(arena),
        owner_(arena) {}

inline void SchemaSearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sort_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, sort_) +
               sizeof(Impl_::count_));
}
SchemaSearchRequest::~SchemaSearchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaSearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaSearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.text_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaSearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&_impl_.sort_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.sort_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaSearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 49, 2> SchemaSearchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SchemaSearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.id_)}},
    // optional string text = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.text_)}},
    // optional string owner = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.owner_)}},
    // optional .SDMS.SortOption sort = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 3, 5, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.sort_)}},
    // optional bool sort_rev = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaSearchRequest, _impl_.sort_rev_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.sort_rev_)}},
    // optional uint32 offset = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaSearchRequest, _impl_.offset_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.offset_)}},
    // optional uint32 count = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaSearchRequest, _impl_.count_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string text = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.text_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string owner = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.owner_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.SortOption sort = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.sort_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool sort_rev = 5;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.sort_rev_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 offset = 6;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.offset_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 7;
    {PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.count_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 6},
  }}, {{
    "\35\2\4\5\0\0\0\0"
    "SDMS.Auth.SchemaSearchRequest"
    "id"
    "text"
    "owner"
  }},
};

::uint8_t* SchemaSearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaSearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaSearchRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaSearchRequest.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string owner = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaSearchRequest.owner");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .SDMS.SortOption sort = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_sort(), target);
  }

  // optional bool sort_rev = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_sort_rev(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_offset(), target);
  }

  // optional uint32 count = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaSearchRequest)
  return target;
}

::size_t SchemaSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaSearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // optional string text = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text());
    }

    // optional string owner = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional .SDMS.SortOption sort = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_sort());
    }

    // optional bool sort_rev = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional uint32 offset = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaSearchRequest::_class_data_ = {
    SchemaSearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaSearchRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaSearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaSearchRequest*>(&to_msg);
  auto& from = static_cast<const SchemaSearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaSearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sort_ = from._impl_.sort_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.sort_rev_ = from._impl_.sort_rev_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaSearchRequest::CopyFrom(const SchemaSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaSearchRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SchemaSearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaSearchRequest::InternalSwap(SchemaSearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.count_)
      + sizeof(SchemaSearchRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SchemaSearchRequest, _impl_.sort_)>(
          reinterpret_cast<char*>(&_impl_.sort_),
          reinterpret_cast<char*>(&other->_impl_.sort_));
}

::google::protobuf::Metadata SchemaSearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[126]);
}
// ===================================================================

class SchemaDataReply::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaDataReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void SchemaDataReply::clear_schema() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.schema_.Clear();
}
SchemaDataReply::SchemaDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaDataReply)
}
inline PROTOBUF_NDEBUG_INLINE SchemaDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        schema_{visibility, arena, from.schema_} {}

SchemaDataReply::SchemaDataReply(
    ::google::protobuf::Arena* arena,
    const SchemaDataReply& from)
    : ::google::protobuf::Message(arena) {
  SchemaDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaDataReply)
}
inline PROTOBUF_NDEBUG_INLINE SchemaDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        schema_{visibility, arena} {}

inline void SchemaDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));
}
SchemaDataReply::~SchemaDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schema_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> SchemaDataReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SchemaDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 total = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaDataReply, _impl_.total_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.total_)}},
    // repeated .SDMS.SchemaData schema = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.schema_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaDataReply, _impl_.offset_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaDataReply, _impl_.count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.SchemaData schema = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.schema_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.total_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::SchemaData>()},
  }}, {{
  }},
};

::uint8_t* SchemaDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.SchemaData schema = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_schema_size()); i < n; i++) {
    const auto& repfield = this->_internal_schema().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  // optional uint32 total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaDataReply)
  return target;
}

::size_t SchemaDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.SchemaData schema = 1;
  total_size += 1UL * this->_internal_schema_size();
  for (const auto& msg : this->_internal_schema()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

    // optional uint32 total = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaDataReply::_class_data_ = {
    SchemaDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaDataReply::GetClassData() const {
  return &_class_data_;
}

void SchemaDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaDataReply*>(&to_msg);
  auto& from = static_cast<const SchemaDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_schema()->MergeFrom(
      from._internal_schema());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaDataReply::CopyFrom(const SchemaDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_schema()))
    return false;
  return true;
}

::_pbi::CachedSize* SchemaDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaDataReply::InternalSwap(SchemaDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.schema_.InternalSwap(&other->_impl_.schema_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.total_)
      + sizeof(SchemaDataReply::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(SchemaDataReply, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata SchemaDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[127]);
}
// ===================================================================

class SchemaCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaCreateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pub(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sys(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_def(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

SchemaCreateRequest::SchemaCreateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        desc_(arena, from.desc_),
        def_(arena, from.def_) {}

SchemaCreateRequest::SchemaCreateRequest(
    ::google::protobuf::Arena* arena,
    const SchemaCreateRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaCreateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pub_),
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaCreateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaCreateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        desc_(arena),
        def_(arena) {}

inline void SchemaCreateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           0,
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));
}
SchemaCreateRequest::~SchemaCreateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaCreateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaCreateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.def_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaCreateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.def_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.pub_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sys_) -
      reinterpret_cast<char*>(&_impl_.pub_)) + sizeof(_impl_.sys_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaCreateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 47, 2> SchemaCreateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SchemaCreateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.id_)}},
    // required string desc = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.desc_)}},
    // required bool pub = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaCreateRequest, _impl_.pub_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.pub_)}},
    // required bool sys = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaCreateRequest, _impl_.sys_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.sys_)}},
    // required string def = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.def_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string desc = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required bool pub = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.pub_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool sys = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.sys_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required string def = 5;
    {PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.def_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\4\0\0\3\0\0"
    "SDMS.Auth.SchemaCreateRequest"
    "id"
    "desc"
    "def"
  }},
};

::uint8_t* SchemaCreateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaCreateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaCreateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string desc = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaCreateRequest.desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required bool pub = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_pub(), target);
  }

  // required bool sys = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_sys(), target);
  }

  // required string def = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_def();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaCreateRequest.def");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaCreateRequest)
  return target;
}

::size_t SchemaCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaCreateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string desc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // required string def = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_def());
    }

    // required bool pub = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // required bool sys = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaCreateRequest::_class_data_ = {
    SchemaCreateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaCreateRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaCreateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaCreateRequest*>(&to_msg);
  auto& from = static_cast<const SchemaCreateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaCreateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_def(from._internal_def());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pub_ = from._impl_.pub_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.sys_ = from._impl_.sys_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaCreateRequest::CopyFrom(const SchemaCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaCreateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SchemaCreateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaCreateRequest::InternalSwap(SchemaCreateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.def_, &other->_impl_.def_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.sys_)
      + sizeof(SchemaCreateRequest::_impl_.sys_)
      - PROTOBUF_FIELD_OFFSET(SchemaCreateRequest, _impl_.pub_)>(
          reinterpret_cast<char*>(&_impl_.pub_),
          reinterpret_cast<char*>(&other->_impl_.pub_));
}

::google::protobuf::Metadata SchemaCreateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[128]);
}
// ===================================================================

class SchemaUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_id_new(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pub(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sys(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_def(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SchemaUpdateRequest::SchemaUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        id_new_(arena, from.id_new_),
        desc_(arena, from.desc_),
        def_(arena, from.def_) {}

SchemaUpdateRequest::SchemaUpdateRequest(
    ::google::protobuf::Arena* arena,
    const SchemaUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pub_),
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        id_new_(arena),
        desc_(arena),
        def_(arena) {}

inline void SchemaUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           0,
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));
}
SchemaUpdateRequest::~SchemaUpdateRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.id_new_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.def_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.id_new_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.def_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.pub_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sys_) -
      reinterpret_cast<char*>(&_impl_.pub_)) + sizeof(_impl_.sys_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2> SchemaUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SchemaUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.id_)}},
    // optional string id_new = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.id_new_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.desc_)}},
    // optional bool pub = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaUpdateRequest, _impl_.pub_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.pub_)}},
    // optional bool sys = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaUpdateRequest, _impl_.sys_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.sys_)}},
    // optional string def = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.def_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string id_new = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.id_new_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool pub = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.pub_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool sys = 5;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.sys_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string def = 6;
    {PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.def_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\6\4\0\0\3\0"
    "SDMS.Auth.SchemaUpdateRequest"
    "id"
    "id_new"
    "desc"
    "def"
  }},
};

::uint8_t* SchemaUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaUpdateRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string id_new = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_id_new();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaUpdateRequest.id_new");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaUpdateRequest.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bool pub = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_pub(), target);
  }

  // optional bool sys = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_sys(), target);
  }

  // optional string def = 6;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_def();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaUpdateRequest.def");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaUpdateRequest)
  return target;
}

::size_t SchemaUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000003eu) {
    // optional string id_new = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id_new());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string def = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_def());
    }

    // optional bool pub = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional bool sys = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaUpdateRequest::_class_data_ = {
    SchemaUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaUpdateRequest*>(&to_msg);
  auto& from = static_cast<const SchemaUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_id_new(from._internal_id_new());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_def(from._internal_def());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.pub_ = from._impl_.pub_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.sys_ = from._impl_.sys_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaUpdateRequest::CopyFrom(const SchemaUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaUpdateRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SchemaUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaUpdateRequest::InternalSwap(SchemaUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_new_, &other->_impl_.id_new_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.def_, &other->_impl_.def_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.sys_)
      + sizeof(SchemaUpdateRequest::_impl_.sys_)
      - PROTOBUF_FIELD_OFFSET(SchemaUpdateRequest, _impl_.pub_)>(
          reinterpret_cast<char*>(&_impl_.pub_),
          reinterpret_cast<char*>(&other->_impl_.pub_));
}

::google::protobuf::Metadata SchemaUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[129]);
}
// ===================================================================

class SchemaReviseRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaReviseRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pub(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sys(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_def(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SchemaReviseRequest::SchemaReviseRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaReviseRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaReviseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        desc_(arena, from.desc_),
        def_(arena, from.def_) {}

SchemaReviseRequest::SchemaReviseRequest(
    ::google::protobuf::Arena* arena,
    const SchemaReviseRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaReviseRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pub_),
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaReviseRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaReviseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        desc_(arena),
        def_(arena) {}

inline void SchemaReviseRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_),
           0,
           offsetof(Impl_, sys_) -
               offsetof(Impl_, pub_) +
               sizeof(Impl_::sys_));
}
SchemaReviseRequest::~SchemaReviseRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaReviseRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaReviseRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.def_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaReviseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaReviseRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.def_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.pub_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sys_) -
      reinterpret_cast<char*>(&_impl_.pub_)) + sizeof(_impl_.sys_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaReviseRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 47, 2> SchemaReviseRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SchemaReviseRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.id_)}},
    // optional string desc = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.desc_)}},
    // optional bool pub = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaReviseRequest, _impl_.pub_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.pub_)}},
    // optional bool sys = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaReviseRequest, _impl_.sys_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.sys_)}},
    // optional string def = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.def_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool pub = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.pub_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool sys = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.sys_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string def = 5;
    {PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.def_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\4\0\0\3\0\0"
    "SDMS.Auth.SchemaReviseRequest"
    "id"
    "desc"
    "def"
  }},
};

::uint8_t* SchemaReviseRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaReviseRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaReviseRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string desc = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaReviseRequest.desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool pub = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_pub(), target);
  }

  // optional bool sys = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_sys(), target);
  }

  // optional string def = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_def();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaReviseRequest.def");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaReviseRequest)
  return target;
}

::size_t SchemaReviseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaReviseRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string desc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string def = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_def());
    }

    // optional bool pub = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool sys = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaReviseRequest::_class_data_ = {
    SchemaReviseRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaReviseRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaReviseRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaReviseRequest*>(&to_msg);
  auto& from = static_cast<const SchemaReviseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaReviseRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_def(from._internal_def());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pub_ = from._impl_.pub_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.sys_ = from._impl_.sys_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaReviseRequest::CopyFrom(const SchemaReviseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaReviseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaReviseRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SchemaReviseRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaReviseRequest::InternalSwap(SchemaReviseRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.def_, &other->_impl_.def_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.sys_)
      + sizeof(SchemaReviseRequest::_impl_.sys_)
      - PROTOBUF_FIELD_OFFSET(SchemaReviseRequest, _impl_.pub_)>(
          reinterpret_cast<char*>(&_impl_.pub_),
          reinterpret_cast<char*>(&other->_impl_.pub_));
}

::google::protobuf::Metadata SchemaReviseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[130]);
}
// ===================================================================

class SchemaDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaDeleteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaDeleteRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SchemaDeleteRequest::SchemaDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.SchemaDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

SchemaDeleteRequest::SchemaDeleteRequest(
    ::google::protobuf::Arena* arena,
    const SchemaDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  SchemaDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.SchemaDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE SchemaDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void SchemaDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SchemaDeleteRequest::~SchemaDeleteRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.SchemaDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.SchemaDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> SchemaDeleteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaDeleteRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SchemaDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaDeleteRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaDeleteRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\0\0\0\0\0\0"
    "SDMS.Auth.SchemaDeleteRequest"
    "id"
  }},
};

::uint8_t* SchemaDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.SchemaDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.SchemaDeleteRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.SchemaDeleteRequest)
  return target;
}

::size_t SchemaDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.SchemaDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaDeleteRequest::_class_data_ = {
    SchemaDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void SchemaDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaDeleteRequest*>(&to_msg);
  auto& from = static_cast<const SchemaDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.SchemaDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaDeleteRequest::CopyFrom(const SchemaDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.SchemaDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaDeleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SchemaDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaDeleteRequest::InternalSwap(SchemaDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata SchemaDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[131]);
}
// ===================================================================

class TopicListTopicsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicListTopicsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_._has_bits_);
  static void set_has_topic_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

TopicListTopicsRequest::TopicListTopicsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TopicListTopicsRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicListTopicsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        topic_id_(arena, from.topic_id_) {}

TopicListTopicsRequest::TopicListTopicsRequest(
    ::google::protobuf::Arena* arena,
    const TopicListTopicsRequest& from)
    : ::google::protobuf::Message(arena) {
  TopicListTopicsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TopicListTopicsRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicListTopicsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        topic_id_(arena) {}

inline void TopicListTopicsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::count_));
}
TopicListTopicsRequest::~TopicListTopicsRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TopicListTopicsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicListTopicsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.topic_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopicListTopicsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TopicListTopicsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.topic_id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopicListTopicsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> TopicListTopicsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TopicListTopicsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string topic_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.topic_id_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicListTopicsRequest, _impl_.offset_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicListTopicsRequest, _impl_.count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string topic_id = 1;
    {PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.topic_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\40\10\0\0\0\0\0\0"
    "SDMS.Auth.TopicListTopicsRequest"
    "topic_id"
  }},
};

::uint8_t* TopicListTopicsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TopicListTopicsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string topic_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_topic_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.TopicListTopicsRequest.topic_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TopicListTopicsRequest)
  return target;
}

::size_t TopicListTopicsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TopicListTopicsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string topic_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_topic_id());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopicListTopicsRequest::_class_data_ = {
    TopicListTopicsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopicListTopicsRequest::GetClassData() const {
  return &_class_data_;
}

void TopicListTopicsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopicListTopicsRequest*>(&to_msg);
  auto& from = static_cast<const TopicListTopicsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TopicListTopicsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_topic_id(from._internal_topic_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicListTopicsRequest::CopyFrom(const TopicListTopicsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TopicListTopicsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopicListTopicsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TopicListTopicsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopicListTopicsRequest::InternalSwap(TopicListTopicsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_id_, &other->_impl_.topic_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.count_)
      + sizeof(TopicListTopicsRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(TopicListTopicsRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata TopicListTopicsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[132]);
}
// ===================================================================

class TopicViewRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicViewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TopicViewRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TopicViewRequest::TopicViewRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TopicViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

TopicViewRequest::TopicViewRequest(
    ::google::protobuf::Arena* arena,
    const TopicViewRequest& from)
    : ::google::protobuf::Message(arena) {
  TopicViewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TopicViewRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicViewRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void TopicViewRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TopicViewRequest::~TopicViewRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TopicViewRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicViewRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopicViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TopicViewRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopicViewRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> TopicViewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TopicViewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TopicViewRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TopicViewRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(TopicViewRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\2\0\0\0\0\0\0"
    "SDMS.Auth.TopicViewRequest"
    "id"
  }},
};

::uint8_t* TopicViewRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TopicViewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.TopicViewRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TopicViewRequest)
  return target;
}

::size_t TopicViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TopicViewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopicViewRequest::_class_data_ = {
    TopicViewRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopicViewRequest::GetClassData() const {
  return &_class_data_;
}

void TopicViewRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopicViewRequest*>(&to_msg);
  auto& from = static_cast<const TopicViewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TopicViewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicViewRequest::CopyFrom(const TopicViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TopicViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopicViewRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TopicViewRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopicViewRequest::InternalSwap(TopicViewRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata TopicViewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[133]);
}
// ===================================================================

class TopicSearchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicSearchRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TopicSearchRequest, _impl_._has_bits_);
  static void set_has_phrase(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TopicSearchRequest::TopicSearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TopicSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        phrase_(arena, from.phrase_) {}

TopicSearchRequest::TopicSearchRequest(
    ::google::protobuf::Arena* arena,
    const TopicSearchRequest& from)
    : ::google::protobuf::Message(arena) {
  TopicSearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TopicSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE TopicSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        phrase_(arena) {}

inline void TopicSearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TopicSearchRequest::~TopicSearchRequest() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TopicSearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicSearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.phrase_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopicSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TopicSearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.phrase_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopicSearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> TopicSearchRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TopicSearchRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TopicSearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string phrase = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TopicSearchRequest, _impl_.phrase_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string phrase = 1;
    {PROTOBUF_FIELD_OFFSET(TopicSearchRequest, _impl_.phrase_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\6\0\0\0\0\0\0"
    "SDMS.Auth.TopicSearchRequest"
    "phrase"
  }},
};

::uint8_t* TopicSearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TopicSearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string phrase = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_phrase();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.Auth.TopicSearchRequest.phrase");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TopicSearchRequest)
  return target;
}

::size_t TopicSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TopicSearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string phrase = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phrase());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopicSearchRequest::_class_data_ = {
    TopicSearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopicSearchRequest::GetClassData() const {
  return &_class_data_;
}

void TopicSearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopicSearchRequest*>(&to_msg);
  auto& from = static_cast<const TopicSearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TopicSearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_phrase(from._internal_phrase());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicSearchRequest::CopyFrom(const TopicSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TopicSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopicSearchRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TopicSearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopicSearchRequest::InternalSwap(TopicSearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phrase_, &other->_impl_.phrase_, arena);
}

::google::protobuf::Metadata TopicSearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[134]);
}
// ===================================================================

class TopicDataReply::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicDataReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_._has_bits_);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void TopicDataReply::clear_topic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.topic_.Clear();
}
TopicDataReply::TopicDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.Auth.TopicDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TopicDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        topic_{visibility, arena, from.topic_} {}

TopicDataReply::TopicDataReply(
    ::google::protobuf::Arena* arena,
    const TopicDataReply& from)
    : ::google::protobuf::Message(arena) {
  TopicDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));

  // @@protoc_insertion_point(copy_constructor:SDMS.Auth.TopicDataReply)
}
inline PROTOBUF_NDEBUG_INLINE TopicDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        topic_{visibility, arena} {}

inline void TopicDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::total_));
}
TopicDataReply::~TopicDataReply() {
  // @@protoc_insertion_point(destructor:SDMS.Auth.TopicDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopicDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.Auth.TopicDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.total_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopicDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TopicDataReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TopicDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 total = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicDataReply, _impl_.total_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.total_)}},
    // repeated .SDMS.TopicData topic = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.topic_)}},
    // optional uint32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicDataReply, _impl_.offset_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.offset_)}},
    // optional uint32 count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicDataReply, _impl_.count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.TopicData topic = 1;
    {PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.topic_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 count = 3;
    {PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 total = 4;
    {PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.total_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::TopicData>()},
  }}, {{
  }},
};

::uint8_t* TopicDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.Auth.TopicDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.TopicData topic = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_topic_size()); i < n; i++) {
    const auto& repfield = this->_internal_topic().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_offset(), target);
  }

  // optional uint32 count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_count(), target);
  }

  // optional uint32 total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.Auth.TopicDataReply)
  return target;
}

::size_t TopicDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.Auth.TopicDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.TopicData topic = 1;
  total_size += 1UL * this->_internal_topic_size();
  for (const auto& msg : this->_internal_topic()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
    }

    // optional uint32 count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_count());
    }

    // optional uint32 total = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_total());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopicDataReply::_class_data_ = {
    TopicDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopicDataReply::GetClassData() const {
  return &_class_data_;
}

void TopicDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopicDataReply*>(&to_msg);
  auto& from = static_cast<const TopicDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.Auth.TopicDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topic()->MergeFrom(
      from._internal_topic());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.total_ = from._impl_.total_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicDataReply::CopyFrom(const TopicDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.Auth.TopicDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopicDataReply::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_topic()))
    return false;
  return true;
}

::_pbi::CachedSize* TopicDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopicDataReply::InternalSwap(TopicDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.topic_.InternalSwap(&other->_impl_.topic_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.total_)
      + sizeof(TopicDataReply::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(TopicDataReply, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata TopicDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_5fAuth_2eproto_getter, &descriptor_table_SDMS_5fAuth_2eproto_once,
      file_level_metadata_SDMS_5fAuth_2eproto[135]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Auth
}  // namespace SDMS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
