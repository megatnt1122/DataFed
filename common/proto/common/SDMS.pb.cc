// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SDMS.proto

#include "SDMS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace SDMS {

inline constexpr TopicData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_{false},
        coll_cnt_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TopicData::TopicData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicDataDefaultTypeInternal() {}
  union {
    TopicData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicDataDefaultTypeInternal _TopicData_default_instance_;

inline constexpr TaskData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::SDMS::TaskType >(0)},
        status_{static_cast< ::SDMS::TaskStatus >(0)},
        step_{0u},
        steps_{0u},
        ct_{0u},
        ut_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TaskData::TaskData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaskDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDataDefaultTypeInternal() {}
  union {
    TaskData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDataDefaultTypeInternal _TaskData_default_instance_;

inline constexpr TagData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR TagData::TagData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TagDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TagDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TagDataDefaultTypeInternal() {}
  union {
    TagData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TagDataDefaultTypeInternal _TagData_default_instance_;

inline constexpr SchemaData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uses_{},
        used_by_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        own_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        own_nm_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ver_{0u},
        cnt_{0u},
        depr_{false},
        ref_{false},
        pub_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SchemaData::SchemaData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SchemaDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchemaDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchemaDataDefaultTypeInternal() {}
  union {
    SchemaData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchemaDataDefaultTypeInternal _SchemaData_default_instance_;

inline constexpr RepoData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endpoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exp_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        capacity_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR RepoData::RepoData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDataDefaultTypeInternal() {}
  union {
    RepoData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDataDefaultTypeInternal _RepoData_default_instance_;

inline constexpr RecordDataSize::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordDataSize::RecordDataSize(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDataSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDataSizeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDataSizeDefaultTypeInternal() {}
  union {
    RecordDataSize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDataSizeDefaultTypeInternal _RecordDataSize_default_instance_;

inline constexpr RecordDataLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RecordDataLocation::RecordDataLocation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDataLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDataLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDataLocationDefaultTypeInternal() {}
  union {
    RecordDataLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDataLocationDefaultTypeInternal _RecordDataLocation_default_instance_;

inline constexpr NoteComment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{0u},
        type_{static_cast< ::SDMS::NoteType >(0)},
        state_{static_cast< ::SDMS::NoteState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NoteComment::NoteComment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteCommentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteCommentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteCommentDefaultTypeInternal() {}
  union {
    NoteComment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteCommentDefaultTypeInternal _NoteComment_default_instance_;

inline constexpr GroupData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        member_{},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GroupData::GroupData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GroupDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupDataDefaultTypeInternal() {}
  union {
    GroupData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupDataDefaultTypeInternal _GroupData_default_instance_;

inline constexpr DependencySpecData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::SDMS::DependencyType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DependencySpecData::DependencySpecData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DependencySpecDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DependencySpecDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DependencySpecDataDefaultTypeInternal() {}
  union {
    DependencySpecData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DependencySpecDataDefaultTypeInternal _DependencySpecData_default_instance_;

inline constexpr DependencyData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        notes_{0u},
        type_{static_cast< ::SDMS::DependencyType >(0)},
        dir_{static_cast< ::SDMS::DependencyDir >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DependencyData::DependencyData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DependencyDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DependencyDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DependencyDataDefaultTypeInternal() {}
  union {
    DependencyData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DependencyDataDefaultTypeInternal _DependencyData_default_instance_;

inline constexpr CollData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        topic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ct_{0u},
        ut_{0u},
        notes_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CollData::CollData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CollDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollDataDefaultTypeInternal() {}
  union {
    CollData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollDataDefaultTypeInternal _CollData_default_instance_;

inline constexpr AllocStatsData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        histogram_{},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rec_count_{0u},
        file_count_{0u},
        data_size_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR AllocStatsData::AllocStatsData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllocStatsDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocStatsDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocStatsDataDefaultTypeInternal() {}
  union {
    AllocStatsData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocStatsDataDefaultTypeInternal _AllocStatsData_default_instance_;

inline constexpr ACLRule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        grant_{0u},
        inhgrant_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ACLRule::ACLRule(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ACLRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ACLRuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ACLRuleDefaultTypeInternal() {}
  union {
    ACLRule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ACLRuleDefaultTypeInternal _ACLRule_default_instance_;

inline constexpr RepoRecordDataLocations::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        loc_{},
        repo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RepoRecordDataLocations::RepoRecordDataLocations(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RepoRecordDataLocationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoRecordDataLocationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoRecordDataLocationsDefaultTypeInternal() {}
  union {
    RepoRecordDataLocations _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoRecordDataLocationsDefaultTypeInternal _RepoRecordDataLocations_default_instance_;

inline constexpr RecordData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        deps_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        repo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        md_err_msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{0},
        external_{false},
        ext_auto_{false},
        locked_{false},
        ct_{0u},
        ut_{0u},
        dt_{0u},
        notes_{0u},
        sch_ver_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RecordData::RecordData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDataDefaultTypeInternal() {}
  union {
    RecordData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDataDefaultTypeInternal _RecordData_default_instance_;

inline constexpr NoteData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        comment_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::SDMS::NoteType >(0)},
        state_{static_cast< ::SDMS::NoteState >(0)},
        ct_{0u},
        ut_{0u},
        has_child_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NoteData::NoteData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoteDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteDataDefaultTypeInternal() {}
  union {
    NoteData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteDataDefaultTypeInternal _NoteData_default_instance_;

inline constexpr ListingData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dep_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{0},
        locked_{false},
        external_{false},
        deps_avail_{false},
        notes_{0u},
        gen_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListingData::ListingData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListingDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListingDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListingDataDefaultTypeInternal() {}
  union {
    ListingData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListingDataDefaultTypeInternal _ListingData_default_instance_;

inline constexpr AllocData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stats_{nullptr},
        data_limit_{::uint64_t{0u}},
        data_size_{::uint64_t{0u}},
        rec_limit_{0u},
        rec_count_{0u},
        is_def_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AllocData::AllocData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllocDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocDataDefaultTypeInternal() {}
  union {
    AllocData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocDataDefaultTypeInternal _AllocData_default_instance_;

inline constexpr UserData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ident_{},
        alloc_{},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_last_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_first_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_admin_{false},
        is_repo_admin_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UserData::UserData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDataDefaultTypeInternal() {}
  union {
    UserData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDataDefaultTypeInternal _UserData_default_instance_;

inline constexpr ProjectData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_{},
        member_{},
        alloc_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ct_{0u},
        ut_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ProjectData::ProjectData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectDataDefaultTypeInternal() {}
  union {
    ProjectData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectDataDefaultTypeInternal _ProjectData_default_instance_;

inline constexpr PathData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : item_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PathData::PathData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PathDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathDataDefaultTypeInternal() {}
  union {
    PathData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathDataDefaultTypeInternal _PathData_default_instance_;
}  // namespace SDMS
static ::_pb::Metadata file_level_metadata_SDMS_2eproto[22];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_SDMS_2eproto[13];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_SDMS_2eproto = nullptr;
const ::uint32_t TableStruct_SDMS_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_.rec_count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_.file_count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_.data_size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocStatsData, _impl_.histogram_),
    0,
    1,
    2,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.repo_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.data_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.data_size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.rec_limit_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.rec_count_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.is_def_),
    PROTOBUF_FIELD_OFFSET(::SDMS::AllocData, _impl_.stats_),
    0,
    4,
    5,
    6,
    7,
    1,
    2,
    8,
    3,
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_.notes_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencyData, _impl_.dir_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencySpecData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencySpecData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencySpecData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::DependencySpecData, _impl_.type_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.name_last_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.name_first_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.is_admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.is_repo_admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.ident_),
    PROTOBUF_FIELD_OFFSET(::SDMS::UserData, _impl_.alloc_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.member_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ProjectData, _impl_.alloc_),
    0,
    1,
    2,
    3,
    4,
    5,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.locked_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.external_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.notes_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.gen_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.deps_avail_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.dep_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.owner_name_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ListingData, _impl_.desc_),
    0,
    1,
    2,
    8,
    3,
    4,
    7,
    9,
    11,
    12,
    10,
    ~0u,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::SDMS::TagData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TagData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::TagData, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TagData, _impl_.count_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SDMS::PathData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::PathData, _impl_.item_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.external_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.repo_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.size_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.ext_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.ext_auto_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.dt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.locked_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.deps_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.notes_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.md_err_msg_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.sch_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordData, _impl_.sch_ver_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    14,
    5,
    6,
    13,
    7,
    15,
    17,
    18,
    19,
    8,
    9,
    16,
    10,
    ~0u,
    20,
    11,
    12,
    21,
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataLocation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataLocation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataLocation, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataLocation, _impl_.path_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoRecordDataLocations, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoRecordDataLocations, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoRecordDataLocations, _impl_.repo_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoRecordDataLocations, _impl_.loc_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataSize, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataSize, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataSize, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RecordDataSize, _impl_.size_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.alias_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.topic_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::CollData, _impl_.notes_),
    0,
    1,
    2,
    3,
    ~0u,
    4,
    5,
    6,
    8,
    9,
    7,
    10,
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_.gid_),
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::GroupData, _impl_.member_),
    0,
    1,
    2,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::ACLRule, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ACLRule, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::ACLRule, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ACLRule, _impl_.grant_),
    PROTOBUF_FIELD_OFFSET(::SDMS::ACLRule, _impl_.inhgrant_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.creator_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.admin_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TopicData, _impl_.coll_cnt_),
    0,
    1,
    ~0u,
    2,
    3,
    4,
    5,
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.capacity_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.pub_key_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.endpoint_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.domain_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.exp_path_),
    PROTOBUF_FIELD_OFFSET(::SDMS::RepoData, _impl_.admin_),
    0,
    1,
    2,
    9,
    3,
    4,
    5,
    6,
    7,
    8,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_.comment_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteComment, _impl_.state_),
    0,
    2,
    1,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.subject_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.title_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.comment_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.parent_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::NoteData, _impl_.has_child_),
    0,
    4,
    5,
    1,
    2,
    ~0u,
    6,
    7,
    3,
    8,
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.client_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.step_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.steps_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.msg_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.ct_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.ut_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.source_),
    PROTOBUF_FIELD_OFFSET(::SDMS::TaskData, _impl_.dest_),
    0,
    5,
    6,
    1,
    7,
    8,
    2,
    9,
    10,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.ver_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.depr_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.cnt_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.ref_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.own_id_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.own_nm_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.desc_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.pub_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.def_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.uses_),
    PROTOBUF_FIELD_OFFSET(::SDMS::SchemaData, _impl_.used_by_),
    0,
    5,
    7,
    6,
    8,
    1,
    2,
    3,
    9,
    4,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::SDMS::AllocStatsData)},
        {18, 35, -1, sizeof(::SDMS::AllocData)},
        {44, 57, -1, sizeof(::SDMS::DependencyData)},
        {62, 72, -1, sizeof(::SDMS::DependencySpecData)},
        {74, 91, -1, sizeof(::SDMS::UserData)},
        {100, 117, -1, sizeof(::SDMS::ProjectData)},
        {126, 148, -1, sizeof(::SDMS::ListingData)},
        {162, 172, -1, sizeof(::SDMS::TagData)},
        {174, -1, -1, sizeof(::SDMS::PathData)},
        {183, 215, -1, sizeof(::SDMS::RecordData)},
        {239, 249, -1, sizeof(::SDMS::RecordDataLocation)},
        {251, 261, -1, sizeof(::SDMS::RepoRecordDataLocations)},
        {263, 273, -1, sizeof(::SDMS::RecordDataSize)},
        {275, 295, -1, sizeof(::SDMS::CollData)},
        {307, 320, -1, sizeof(::SDMS::GroupData)},
        {325, 336, -1, sizeof(::SDMS::ACLRule)},
        {339, 354, -1, sizeof(::SDMS::TopicData)},
        {361, 380, -1, sizeof(::SDMS::RepoData)},
        {391, 404, -1, sizeof(::SDMS::NoteComment)},
        {409, 427, -1, sizeof(::SDMS::NoteData)},
        {437, 456, -1, sizeof(::SDMS::TaskData)},
        {467, 487, -1, sizeof(::SDMS::SchemaData)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::SDMS::_AllocStatsData_default_instance_._instance,
    &::SDMS::_AllocData_default_instance_._instance,
    &::SDMS::_DependencyData_default_instance_._instance,
    &::SDMS::_DependencySpecData_default_instance_._instance,
    &::SDMS::_UserData_default_instance_._instance,
    &::SDMS::_ProjectData_default_instance_._instance,
    &::SDMS::_ListingData_default_instance_._instance,
    &::SDMS::_TagData_default_instance_._instance,
    &::SDMS::_PathData_default_instance_._instance,
    &::SDMS::_RecordData_default_instance_._instance,
    &::SDMS::_RecordDataLocation_default_instance_._instance,
    &::SDMS::_RepoRecordDataLocations_default_instance_._instance,
    &::SDMS::_RecordDataSize_default_instance_._instance,
    &::SDMS::_CollData_default_instance_._instance,
    &::SDMS::_GroupData_default_instance_._instance,
    &::SDMS::_ACLRule_default_instance_._instance,
    &::SDMS::_TopicData_default_instance_._instance,
    &::SDMS::_RepoData_default_instance_._instance,
    &::SDMS::_NoteComment_default_instance_._instance,
    &::SDMS::_NoteData_default_instance_._instance,
    &::SDMS::_TaskData_default_instance_._instance,
    &::SDMS::_SchemaData_default_instance_._instance,
};
const char descriptor_table_protodef_SDMS_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nSDMS.proto\022\004SDMS\"k\n\016AllocStatsData\022\014\n\004"
    "repo\030\001 \002(\t\022\021\n\trec_count\030\002 \002(\r\022\022\n\nfile_co"
    "unt\030\003 \002(\r\022\021\n\tdata_size\030\004 \002(\004\022\021\n\thistogra"
    "m\030\005 \003(\r\"\265\001\n\tAllocData\022\014\n\004repo\030\001 \002(\t\022\022\n\nd"
    "ata_limit\030\002 \002(\004\022\021\n\tdata_size\030\003 \002(\004\022\021\n\tre"
    "c_limit\030\004 \002(\r\022\021\n\trec_count\030\005 \002(\r\022\014\n\004path"
    "\030\006 \002(\t\022\n\n\002id\030\007 \001(\t\022\016\n\006is_def\030\010 \001(\010\022#\n\005st"
    "ats\030\t \001(\0132\024.SDMS.AllocStatsData\"\200\001\n\016Depe"
    "ndencyData\022\n\n\002id\030\001 \002(\t\022\r\n\005alias\030\002 \001(\t\022\r\n"
    "\005notes\030\003 \001(\r\022\"\n\004type\030\004 \002(\0162\024.SDMS.Depend"
    "encyType\022 \n\003dir\030\005 \002(\0162\023.SDMS.DependencyD"
    "ir\"D\n\022DependencySpecData\022\n\n\002id\030\001 \002(\t\022\"\n\004"
    "type\030\002 \002(\0162\024.SDMS.DependencyType\"\266\001\n\010Use"
    "rData\022\013\n\003uid\030\001 \002(\t\022\021\n\tname_last\030\002 \002(\t\022\022\n"
    "\nname_first\030\003 \002(\t\022\r\n\005email\030\004 \001(\t\022\017\n\007opti"
    "ons\030\005 \001(\t\022\020\n\010is_admin\030\006 \001(\010\022\025\n\ris_repo_a"
    "dmin\030\007 \001(\010\022\r\n\005ident\030\010 \003(\t\022\036\n\005alloc\030\t \003(\013"
    "2\017.SDMS.AllocData\"\234\001\n\013ProjectData\022\n\n\002id\030"
    "\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\014\n\004desc\030\003 \001(\t\022\r\n\005ow"
    "ner\030\004 \001(\t\022\n\n\002ct\030\005 \001(\r\022\n\n\002ut\030\006 \001(\r\022\r\n\005adm"
    "in\030\007 \003(\t\022\016\n\006member\030\010 \003(\t\022\036\n\005alloc\030\t \003(\0132"
    "\017.SDMS.AllocData\"\374\001\n\013ListingData\022\n\n\002id\030\001"
    " \002(\t\022\r\n\005title\030\002 \002(\t\022\r\n\005alias\030\003 \001(\t\022\016\n\006lo"
    "cked\030\004 \001(\010\022\r\n\005owner\030\005 \001(\t\022\017\n\007creator\030\006 \001"
    "(\t\022\014\n\004size\030\007 \001(\001\022\020\n\010external\030\010 \001(\010\022\r\n\005no"
    "tes\030\t \001(\r\022\013\n\003gen\030\n \001(\005\022\022\n\ndeps_avail\030\013 \001"
    "(\010\022!\n\003dep\030\014 \003(\0132\024.SDMS.DependencyData\022\022\n"
    "\nowner_name\030\r \001(\t\022\014\n\004desc\030\016 \001(\t\"&\n\007TagDa"
    "ta\022\014\n\004name\030\001 \002(\t\022\r\n\005count\030\002 \002(\004\"+\n\010PathD"
    "ata\022\037\n\004item\030\001 \003(\0132\021.SDMS.ListingData\"\223\003\n"
    "\nRecordData\022\n\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\r"
    "\n\005alias\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\014\n\004tags\030\005 \003("
    "\t\022\020\n\010metadata\030\006 \001(\t\022\020\n\010external\030\007 \001(\010\022\016\n"
    "\006source\030\010 \001(\t\022\017\n\007repo_id\030\t \001(\t\022\014\n\004size\030\n"
    " \001(\001\022\013\n\003ext\030\013 \001(\t\022\020\n\010ext_auto\030\014 \001(\010\022\n\n\002c"
    "t\030\r \001(\r\022\n\n\002ut\030\016 \001(\r\022\n\n\002dt\030\017 \001(\r\022\r\n\005owner"
    "\030\020 \001(\t\022\017\n\007creator\030\021 \001(\t\022\016\n\006locked\030\022 \001(\010\022"
    "\021\n\tparent_id\030\023 \001(\t\022\"\n\004deps\030\024 \003(\0132\024.SDMS."
    "DependencyData\022\r\n\005notes\030\025 \001(\r\022\022\n\nmd_err_"
    "msg\030\026 \001(\t\022\016\n\006sch_id\030\027 \001(\t\022\017\n\007sch_ver\030\030 \001"
    "(\r\".\n\022RecordDataLocation\022\n\n\002id\030\001 \002(\t\022\014\n\004"
    "path\030\002 \002(\t\"Q\n\027RepoRecordDataLocations\022\017\n"
    "\007repo_id\030\001 \002(\t\022%\n\003loc\030\002 \003(\0132\030.SDMS.Recor"
    "dDataLocation\"*\n\016RecordDataSize\022\n\n\002id\030\001 "
    "\002(\t\022\014\n\004size\030\002 \002(\001\"\271\001\n\010CollData\022\n\n\002id\030\001 \002"
    "(\t\022\r\n\005title\030\002 \002(\t\022\r\n\005alias\030\003 \001(\t\022\014\n\004desc"
    "\030\004 \001(\t\022\014\n\004tags\030\005 \003(\t\022\r\n\005topic\030\006 \001(\t\022\r\n\005o"
    "wner\030\007 \001(\t\022\017\n\007creator\030\010 \001(\t\022\n\n\002ct\030\t \001(\r\022"
    "\n\n\002ut\030\n \001(\r\022\021\n\tparent_id\030\013 \001(\t\022\r\n\005notes\030"
    "\014 \001(\r\"R\n\tGroupData\022\013\n\003uid\030\001 \002(\t\022\013\n\003gid\030\002"
    " \002(\t\022\r\n\005title\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\016\n\006mem"
    "ber\030\005 \003(\t\"6\n\007ACLRule\022\n\n\002id\030\001 \002(\t\022\r\n\005gran"
    "t\030\002 \001(\r\022\020\n\010inhgrant\030\003 \001(\r\"\205\001\n\tTopicData\022"
    "\n\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \002(\t\022\035\n\004path\030\003 \003(\013"
    "2\017.SDMS.TopicData\022\014\n\004desc\030\004 \001(\t\022\017\n\007creat"
    "or\030\005 \001(\t\022\r\n\005admin\030\006 \001(\010\022\020\n\010coll_cnt\030\007 \002("
    "\r\"\270\001\n\010RepoData\022\n\n\002id\030\001 \002(\t\022\r\n\005title\030\002 \001("
    "\t\022\014\n\004desc\030\003 \001(\t\022\020\n\010capacity\030\004 \001(\004\022\017\n\007pub"
    "_key\030\005 \001(\t\022\017\n\007address\030\006 \001(\t\022\020\n\010endpoint\030"
    "\007 \001(\t\022\014\n\004path\030\010 \001(\t\022\016\n\006domain\030\t \001(\t\022\020\n\010e"
    "xp_path\030\n \001(\t\022\r\n\005admin\030\013 \003(\t\"x\n\013NoteComm"
    "ent\022\014\n\004user\030\001 \002(\t\022\014\n\004time\030\002 \002(\r\022\017\n\007comme"
    "nt\030\003 \002(\t\022\034\n\004type\030\004 \001(\0162\016.SDMS.NoteType\022\036"
    "\n\005state\030\005 \001(\0162\017.SDMS.NoteState\"\331\001\n\010NoteD"
    "ata\022\n\n\002id\030\001 \002(\t\022\034\n\004type\030\002 \002(\0162\016.SDMS.Not"
    "eType\022\036\n\005state\030\003 \002(\0162\017.SDMS.NoteState\022\022\n"
    "\nsubject_id\030\004 \002(\t\022\r\n\005title\030\005 \002(\t\022\"\n\007comm"
    "ent\030\006 \003(\0132\021.SDMS.NoteComment\022\n\n\002ct\030\007 \002(\r"
    "\022\n\n\002ut\030\010 \002(\r\022\021\n\tparent_id\030\t \001(\t\022\021\n\thas_c"
    "hild\030\n \001(\010\"\306\001\n\010TaskData\022\n\n\002id\030\001 \002(\t\022\034\n\004t"
    "ype\030\002 \002(\0162\016.SDMS.TaskType\022 \n\006status\030\003 \002("
    "\0162\020.SDMS.TaskStatus\022\016\n\006client\030\004 \002(\t\022\014\n\004s"
    "tep\030\005 \002(\r\022\r\n\005steps\030\006 \002(\r\022\013\n\003msg\030\007 \002(\t\022\n\n"
    "\002ct\030\010 \002(\r\022\n\n\002ut\030\t \002(\r\022\016\n\006source\030\n \001(\t\022\014\n"
    "\004dest\030\013 \001(\t\"\330\001\n\nSchemaData\022\n\n\002id\030\001 \002(\t\022\013"
    "\n\003ver\030\002 \002(\r\022\014\n\004depr\030\003 \001(\010\022\013\n\003cnt\030\004 \001(\r\022\013"
    "\n\003ref\030\005 \001(\010\022\016\n\006own_id\030\006 \001(\t\022\016\n\006own_nm\030\007 "
    "\001(\t\022\014\n\004desc\030\010 \001(\t\022\013\n\003pub\030\t \001(\010\022\013\n\003def\030\n "
    "\001(\t\022\036\n\004uses\030\013 \003(\0132\020.SDMS.SchemaData\022!\n\007u"
    "sed_by\030\014 \003(\0132\020.SDMS.SchemaData*\274\001\n\tError"
    "Code\022\022\n\016ID_BAD_REQUEST\020\001\022\025\n\021ID_INTERNAL_"
    "ERROR\020\002\022\023\n\017ID_CLIENT_ERROR\020\003\022\024\n\020ID_SERVI"
    "CE_ERROR\020\004\022\025\n\021ID_AUTHN_REQUIRED\020\005\022\022\n\016ID_"
    "AUTHN_ERROR\020\006\022\026\n\022ID_DEST_PATH_ERROR\020\007\022\026\n"
    "\022ID_DEST_FILE_ERROR\020\010*N\n\rServiceStatus\022\r"
    "\n\tSS_NORMAL\020\000\022\017\n\013SS_DEGRADED\020\001\022\r\n\tSS_FAI"
    "LED\020\002\022\016\n\nSS_OFFLINE\020\003*,\n\nSearchMode\022\013\n\007S"
    "M_DATA\020\000\022\021\n\rSM_COLLECTION\020\001*q\n\016Dependenc"
    "yType\022\027\n\023DEP_IS_DERIVED_FROM\020\000\022\027\n\023DEP_IS"
    "_COMPONENT_OF\020\001\022\031\n\025DEP_IS_NEW_VERSION_OF"
    "\020\002\022\022\n\016DEP_TYPE_COUNT\020\003*(\n\rDependencyDir\022"
    "\n\n\006DEP_IN\020\000\022\013\n\007DEP_OUT\020\001*y\n\nSortOption\022\013"
    "\n\007SORT_ID\020\000\022\016\n\nSORT_TITLE\020\001\022\016\n\nSORT_OWNE"
    "R\020\002\022\024\n\020SORT_TIME_CREATE\020\003\022\024\n\020SORT_TIME_U"
    "PDATE\020\004\022\022\n\016SORT_RELEVANCE\020\005*R\n\013ProjectRo"
    "le\022\020\n\014PROJ_NO_ROLE\020\000\022\017\n\013PROJ_MEMBER\020\001\022\020\n"
    "\014PROJ_MANAGER\020\002\022\016\n\nPROJ_ADMIN\020\003*K\n\010NoteT"
    "ype\022\021\n\rNOTE_QUESTION\020\000\022\r\n\tNOTE_INFO\020\001\022\r\n"
    "\tNOTE_WARN\020\002\022\016\n\nNOTE_ERROR\020\003*<\n\tNoteStat"
    "e\022\017\n\013NOTE_CLOSED\020\000\022\r\n\tNOTE_OPEN\020\001\022\017\n\013NOT"
    "E_ACTIVE\020\002*\302\001\n\010TaskType\022\017\n\013TT_DATA_GET\020\000"
    "\022\017\n\013TT_DATA_PUT\020\001\022\017\n\013TT_DATA_DEL\020\002\022\024\n\020TT"
    "_REC_CHG_ALLOC\020\003\022\024\n\020TT_REC_CHG_OWNER\020\004\022\016"
    "\n\nTT_REC_DEL\020\005\022\023\n\017TT_ALLOC_CREATE\020\006\022\020\n\014T"
    "T_ALLOC_DEL\020\007\022\017\n\013TT_USER_DEL\020\010\022\017\n\013TT_PRO"
    "J_DEL\020\t*[\n\nTaskStatus\022\016\n\nTS_BLOCKED\020\000\022\014\n"
    "\010TS_READY\020\001\022\016\n\nTS_RUNNING\020\002\022\020\n\014TS_SUCCEE"
    "DED\020\003\022\r\n\tTS_FAILED\020\004*\223\001\n\013TaskCommand\022\013\n\007"
    "TC_STOP\020\000\022\030\n\024TC_RAW_DATA_TRANSFER\020\001\022\026\n\022T"
    "C_RAW_DATA_DELETE\020\002\022\033\n\027TC_RAW_DATA_UPDAT"
    "E_SIZE\020\003\022\023\n\017TC_ALLOC_CREATE\020\004\022\023\n\017TC_ALLO"
    "C_DELETE\020\005*D\n\nEncryption\022\020\n\014ENCRYPT_NONE"
    "\020\000\022\021\n\rENCRYPT_AVAIL\020\001\022\021\n\rENCRYPT_FORCE\020\002"
};
static ::absl::once_flag descriptor_table_SDMS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_SDMS_2eproto = {
    false,
    false,
    4520,
    descriptor_table_protodef_SDMS_2eproto,
    "SDMS.proto",
    &descriptor_table_SDMS_2eproto_once,
    nullptr,
    0,
    22,
    schemas,
    file_default_instances,
    TableStruct_SDMS_2eproto::offsets,
    file_level_metadata_SDMS_2eproto,
    file_level_enum_descriptors_SDMS_2eproto,
    file_level_service_descriptors_SDMS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_SDMS_2eproto_getter() {
  return &descriptor_table_SDMS_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_SDMS_2eproto(&descriptor_table_SDMS_2eproto);
namespace SDMS {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ErrorCode_internal_data_[] = {
    524289u, 0u, };
bool ErrorCode_IsValid(int value) {
  return 1 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* ServiceStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ServiceStatus_internal_data_[] = {
    262144u, 0u, };
bool ServiceStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* SearchMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SearchMode_internal_data_[] = {
    131072u, 0u, };
bool SearchMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* DependencyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t DependencyType_internal_data_[] = {
    262144u, 0u, };
bool DependencyType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* DependencyDir_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t DependencyDir_internal_data_[] = {
    131072u, 0u, };
bool DependencyDir_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* SortOption_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t SortOption_internal_data_[] = {
    393216u, 0u, };
bool SortOption_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* ProjectRole_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t ProjectRole_internal_data_[] = {
    262144u, 0u, };
bool ProjectRole_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* NoteType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t NoteType_internal_data_[] = {
    262144u, 0u, };
bool NoteType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* NoteState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t NoteState_internal_data_[] = {
    196608u, 0u, };
bool NoteState_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* TaskType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t TaskType_internal_data_[] = {
    655360u, 0u, };
bool TaskType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* TaskStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t TaskStatus_internal_data_[] = {
    327680u, 0u, };
bool TaskStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* TaskCommand_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t TaskCommand_internal_data_[] = {
    393216u, 0u, };
bool TaskCommand_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* Encryption_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SDMS_2eproto);
  return file_level_enum_descriptors_SDMS_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t Encryption_internal_data_[] = {
    196608u, 0u, };
bool Encryption_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class AllocStatsData::_Internal {
 public:
  using HasBits = decltype(std::declval<AllocStatsData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rec_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_file_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

AllocStatsData::AllocStatsData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.AllocStatsData)
}
inline PROTOBUF_NDEBUG_INLINE AllocStatsData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        histogram_{visibility, arena, from.histogram_},
        repo_(arena, from.repo_) {}

AllocStatsData::AllocStatsData(
    ::google::protobuf::Arena* arena,
    const AllocStatsData& from)
    : ::google::protobuf::Message(arena) {
  AllocStatsData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rec_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, rec_count_),
           offsetof(Impl_, data_size_) -
               offsetof(Impl_, rec_count_) +
               sizeof(Impl_::data_size_));

  // @@protoc_insertion_point(copy_constructor:SDMS.AllocStatsData)
}
inline PROTOBUF_NDEBUG_INLINE AllocStatsData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        histogram_{visibility, arena},
        repo_(arena) {}

inline void AllocStatsData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rec_count_),
           0,
           offsetof(Impl_, data_size_) -
               offsetof(Impl_, rec_count_) +
               sizeof(Impl_::data_size_));
}
AllocStatsData::~AllocStatsData() {
  // @@protoc_insertion_point(destructor:SDMS.AllocStatsData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllocStatsData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AllocStatsData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.AllocStatsData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.histogram_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.repo_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.rec_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_size_) -
        reinterpret_cast<char*>(&_impl_.rec_count_)) + sizeof(_impl_.data_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AllocStatsData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 32, 2> AllocStatsData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AllocStatsData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.repo_)}},
    // required uint32 rec_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllocStatsData, _impl_.rec_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.rec_count_)}},
    // required uint32 file_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllocStatsData, _impl_.file_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.file_count_)}},
    // required uint64 data_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AllocStatsData, _impl_.data_size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.data_size_)}},
    // repeated uint32 histogram = 5;
    {::_pbi::TcParser::FastV32R1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.histogram_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 rec_count = 2;
    {PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.rec_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 file_count = 3;
    {PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.file_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 data_size = 4;
    {PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.data_size_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated uint32 histogram = 5;
    {PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.histogram_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\23\4\0\0\0\0\0\0"
    "SDMS.AllocStatsData"
    "repo"
  }},
};

::uint8_t* AllocStatsData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.AllocStatsData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.AllocStatsData.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 rec_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_rec_count(), target);
  }

  // required uint32 file_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_file_count(), target);
  }

  // required uint64 data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_data_size(), target);
  }

  // repeated uint32 histogram = 5;
  for (int i = 0, n = this->_internal_histogram_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_histogram().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.AllocStatsData)
  return target;
}

::size_t AllocStatsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.AllocStatsData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 histogram = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_histogram())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_histogram_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required uint32 rec_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_count());
    }

    // required uint32 file_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_file_count());
    }

    // required uint64 data_size = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_size());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AllocStatsData::_class_data_ = {
    AllocStatsData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AllocStatsData::GetClassData() const {
  return &_class_data_;
}

void AllocStatsData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AllocStatsData*>(&to_msg);
  auto& from = static_cast<const AllocStatsData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.AllocStatsData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_histogram()->MergeFrom(from._internal_histogram());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.rec_count_ = from._impl_.rec_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.file_count_ = from._impl_.file_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.data_size_ = from._impl_.data_size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllocStatsData::CopyFrom(const AllocStatsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.AllocStatsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AllocStatsData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AllocStatsData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AllocStatsData::InternalSwap(AllocStatsData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.histogram_.InternalSwap(&other->_impl_.histogram_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.data_size_)
      + sizeof(AllocStatsData::_impl_.data_size_)
      - PROTOBUF_FIELD_OFFSET(AllocStatsData, _impl_.rec_count_)>(
          reinterpret_cast<char*>(&_impl_.rec_count_),
          reinterpret_cast<char*>(&other->_impl_.rec_count_));
}

::google::protobuf::Metadata AllocStatsData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[0]);
}
// ===================================================================

class AllocData::_Internal {
 public:
  using HasBits = decltype(std::declval<AllocData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AllocData, _impl_._has_bits_);
  static void set_has_repo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_rec_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_rec_count(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_def(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::SDMS::AllocStatsData& stats(const AllocData* msg);
  static void set_has_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000f3) ^ 0x000000f3) != 0;
  }
};

const ::SDMS::AllocStatsData& AllocData::_Internal::stats(const AllocData* msg) {
  return *msg->_impl_.stats_;
}
AllocData::AllocData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.AllocData)
}
inline PROTOBUF_NDEBUG_INLINE AllocData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_(arena, from.repo_),
        path_(arena, from.path_),
        id_(arena, from.id_) {}

AllocData::AllocData(
    ::google::protobuf::Arena* arena,
    const AllocData& from)
    : ::google::protobuf::Message(arena) {
  AllocData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stats_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::SDMS::AllocStatsData>(arena, *from._impl_.stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_limit_),
           offsetof(Impl_, is_def_) -
               offsetof(Impl_, data_limit_) +
               sizeof(Impl_::is_def_));

  // @@protoc_insertion_point(copy_constructor:SDMS.AllocData)
}
inline PROTOBUF_NDEBUG_INLINE AllocData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        repo_(arena),
        path_(arena),
        id_(arena) {}

inline void AllocData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stats_),
           0,
           offsetof(Impl_, is_def_) -
               offsetof(Impl_, stats_) +
               sizeof(Impl_::is_def_));
}
AllocData::~AllocData() {
  // @@protoc_insertion_point(destructor:SDMS.AllocData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllocData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_.Destroy();
  _impl_.path_.Destroy();
  _impl_.id_.Destroy();
  delete _impl_.stats_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AllocData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.AllocData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.repo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.data_limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rec_count_) -
        reinterpret_cast<char*>(&_impl_.data_limit_)) + sizeof(_impl_.rec_count_));
  }
  _impl_.is_def_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AllocData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 41, 2> AllocData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AllocData, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AllocData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string repo = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.repo_)}},
    // required uint64 data_limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AllocData, _impl_.data_limit_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.data_limit_)}},
    // required uint64 data_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AllocData, _impl_.data_size_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.data_size_)}},
    // required uint32 rec_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllocData, _impl_.rec_limit_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.rec_limit_)}},
    // required uint32 rec_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllocData, _impl_.rec_count_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.rec_count_)}},
    // required string path = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.path_)}},
    // optional string id = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.id_)}},
    // optional bool is_def = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllocData, _impl_.is_def_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.is_def_)}},
    // optional .SDMS.AllocStatsData stats = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(AllocData, _impl_.stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo = 1;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.repo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 data_limit = 2;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.data_limit_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint64 data_size = 3;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.data_size_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 rec_limit = 4;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.rec_limit_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 rec_count = 5;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.rec_count_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required string path = 6;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string id = 7;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool is_def = 8;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.is_def_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .SDMS.AllocStatsData stats = 9;
    {PROTOBUF_FIELD_OFFSET(AllocData, _impl_.stats_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocStatsData>()},
  }}, {{
    "\16\4\0\0\0\0\4\2\0\0\0\0\0\0\0\0"
    "SDMS.AllocData"
    "repo"
    "path"
    "id"
  }},
};

::uint8_t* AllocData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.AllocData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.AllocData.repo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint64 data_limit = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_data_limit(), target);
  }

  // required uint64 data_size = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_data_size(), target);
  }

  // required uint32 rec_limit = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_rec_limit(), target);
  }

  // required uint32 rec_count = 5;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_rec_count(), target);
  }

  // required string path = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.AllocData.path");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string id = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.AllocData.id");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional bool is_def = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_is_def(), target);
  }

  // optional .SDMS.AllocStatsData stats = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::stats(this),
        _Internal::stats(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.AllocData)
  return target;
}

::size_t AllocData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.AllocData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string repo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo());
    }

    // required string path = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional string id = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // optional .SDMS.AllocStatsData stats = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.stats_);
    }

  }
  if (cached_has_bits & 0x000000f0u) {
    // required uint64 data_limit = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_limit());
    }

    // required uint64 data_size = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_data_size());
    }

    // required uint32 rec_limit = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_limit());
    }

    // required uint32 rec_count = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_rec_count());
    }

  }
  // optional bool is_def = 8;
  if (cached_has_bits & 0x00000100u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AllocData::_class_data_ = {
    AllocData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AllocData::GetClassData() const {
  return &_class_data_;
}

void AllocData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AllocData*>(&to_msg);
  auto& from = static_cast<const AllocData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.AllocData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_repo(from._internal_repo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_stats()->::SDMS::AllocStatsData::MergeFrom(
          from._internal_stats());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.data_limit_ = from._impl_.data_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.data_size_ = from._impl_.data_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.rec_limit_ = from._impl_.rec_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.rec_count_ = from._impl_.rec_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_is_def(from._internal_is_def());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllocData::CopyFrom(const AllocData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.AllocData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AllocData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.stats_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* AllocData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AllocData::InternalSwap(AllocData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_, &other->_impl_.repo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllocData, _impl_.is_def_)
      + sizeof(AllocData::_impl_.is_def_)
      - PROTOBUF_FIELD_OFFSET(AllocData, _impl_.stats_)>(
          reinterpret_cast<char*>(&_impl_.stats_),
          reinterpret_cast<char*>(&other->_impl_.stats_));
}

::google::protobuf::Metadata AllocData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[1]);
}
// ===================================================================

class DependencyData::_Internal {
 public:
  using HasBits = decltype(std::declval<DependencyData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DependencyData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_notes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000019) ^ 0x00000019) != 0;
  }
};

DependencyData::DependencyData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.DependencyData)
}
inline PROTOBUF_NDEBUG_INLINE DependencyData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        alias_(arena, from.alias_) {}

DependencyData::DependencyData(
    ::google::protobuf::Arena* arena,
    const DependencyData& from)
    : ::google::protobuf::Message(arena) {
  DependencyData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, notes_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, notes_),
           offsetof(Impl_, dir_) -
               offsetof(Impl_, notes_) +
               sizeof(Impl_::dir_));

  // @@protoc_insertion_point(copy_constructor:SDMS.DependencyData)
}
inline PROTOBUF_NDEBUG_INLINE DependencyData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        alias_(arena) {}

inline void DependencyData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, notes_),
           0,
           offsetof(Impl_, dir_) -
               offsetof(Impl_, notes_) +
               sizeof(Impl_::dir_));
}
DependencyData::~DependencyData() {
  // @@protoc_insertion_point(destructor:SDMS.DependencyData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DependencyData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DependencyData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.DependencyData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.notes_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dir_) -
        reinterpret_cast<char*>(&_impl_.notes_)) + sizeof(_impl_.dir_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DependencyData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 35, 2> DependencyData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DependencyData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DependencyData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.id_)}},
    // optional string alias = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.alias_)}},
    // optional uint32 notes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DependencyData, _impl_.notes_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.notes_)}},
    // required .SDMS.DependencyType type = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 3, 3, PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.type_)}},
    // required .SDMS.DependencyDir dir = 5;
    {::_pbi::TcParser::FastEr0S1,
     {40, 4, 1, PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.dir_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 2;
    {PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.alias_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 notes = 3;
    {PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.notes_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required .SDMS.DependencyType type = 4;
    {PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required .SDMS.DependencyDir dir = 5;
    {PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.dir_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 4},
    {0, 2},
  }}, {{
    "\23\2\5\0\0\0\0\0"
    "SDMS.DependencyData"
    "id"
    "alias"
  }},
};

::uint8_t* DependencyData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.DependencyData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.DependencyData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string alias = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.DependencyData.alias");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 notes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_notes(), target);
  }

  // required .SDMS.DependencyType type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_type(), target);
  }

  // required .SDMS.DependencyDir dir = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.DependencyData)
  return target;
}

::size_t DependencyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.DependencyData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string alias = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional uint32 notes = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_notes());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // required .SDMS.DependencyType type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required .SDMS.DependencyDir dir = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DependencyData::_class_data_ = {
    DependencyData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DependencyData::GetClassData() const {
  return &_class_data_;
}

void DependencyData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DependencyData*>(&to_msg);
  auto& from = static_cast<const DependencyData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.DependencyData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.notes_ = from._impl_.notes_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dir_ = from._impl_.dir_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DependencyData::CopyFrom(const DependencyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.DependencyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DependencyData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* DependencyData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DependencyData::InternalSwap(DependencyData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.dir_)
      + sizeof(DependencyData::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(DependencyData, _impl_.notes_)>(
          reinterpret_cast<char*>(&_impl_.notes_),
          reinterpret_cast<char*>(&other->_impl_.notes_));
}

::google::protobuf::Metadata DependencyData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[2]);
}
// ===================================================================

class DependencySpecData::_Internal {
 public:
  using HasBits = decltype(std::declval<DependencySpecData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

DependencySpecData::DependencySpecData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.DependencySpecData)
}
inline PROTOBUF_NDEBUG_INLINE DependencySpecData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

DependencySpecData::DependencySpecData(
    ::google::protobuf::Arena* arena,
    const DependencySpecData& from)
    : ::google::protobuf::Message(arena) {
  DependencySpecData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:SDMS.DependencySpecData)
}
inline PROTOBUF_NDEBUG_INLINE DependencySpecData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void DependencySpecData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
DependencySpecData::~DependencySpecData() {
  // @@protoc_insertion_point(destructor:SDMS.DependencySpecData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DependencySpecData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DependencySpecData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.DependencySpecData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DependencySpecData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 34, 2> DependencySpecData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DependencySpecData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .SDMS.DependencyType type = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 3, PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_.type_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .SDMS.DependencyType type = 2;
    {PROTOBUF_FIELD_OFFSET(DependencySpecData, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 4},
  }}, {{
    "\27\2\0\0\0\0\0\0"
    "SDMS.DependencySpecData"
    "id"
  }},
};

::uint8_t* DependencySpecData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.DependencySpecData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.DependencySpecData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .SDMS.DependencyType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.DependencySpecData)
  return target;
}

::size_t DependencySpecData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.DependencySpecData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required .SDMS.DependencyType type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DependencySpecData::_class_data_ = {
    DependencySpecData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DependencySpecData::GetClassData() const {
  return &_class_data_;
}

void DependencySpecData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DependencySpecData*>(&to_msg);
  auto& from = static_cast<const DependencySpecData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.DependencySpecData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DependencySpecData::CopyFrom(const DependencySpecData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.DependencySpecData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DependencySpecData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* DependencySpecData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DependencySpecData::InternalSwap(DependencySpecData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata DependencySpecData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[3]);
}
// ===================================================================

class UserData::_Internal {
 public:
  using HasBits = decltype(std::declval<UserData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserData, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name_last(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name_first(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_admin(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_repo_admin(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

UserData::UserData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.UserData)
}
inline PROTOBUF_NDEBUG_INLINE UserData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ident_{visibility, arena, from.ident_},
        alloc_{visibility, arena, from.alloc_},
        uid_(arena, from.uid_),
        name_last_(arena, from.name_last_),
        name_first_(arena, from.name_first_),
        email_(arena, from.email_),
        options_(arena, from.options_) {}

UserData::UserData(
    ::google::protobuf::Arena* arena,
    const UserData& from)
    : ::google::protobuf::Message(arena) {
  UserData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_admin_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_admin_),
           offsetof(Impl_, is_repo_admin_) -
               offsetof(Impl_, is_admin_) +
               sizeof(Impl_::is_repo_admin_));

  // @@protoc_insertion_point(copy_constructor:SDMS.UserData)
}
inline PROTOBUF_NDEBUG_INLINE UserData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ident_{visibility, arena},
        alloc_{visibility, arena},
        uid_(arena),
        name_last_(arena),
        name_first_(arena),
        email_(arena),
        options_(arena) {}

inline void UserData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_admin_),
           0,
           offsetof(Impl_, is_repo_admin_) -
               offsetof(Impl_, is_admin_) +
               sizeof(Impl_::is_repo_admin_));
}
UserData::~UserData() {
  // @@protoc_insertion_point(destructor:SDMS.UserData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.name_last_.Destroy();
  _impl_.name_first_.Destroy();
  _impl_.email_.Destroy();
  _impl_.options_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.UserData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ident_.Clear();
  _impl_.alloc_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_last_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.name_first_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.options_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.is_admin_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_repo_admin_) -
      reinterpret_cast<char*>(&_impl_.is_admin_)) + sizeof(_impl_.is_repo_admin_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 69, 2> UserData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserData, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.uid_)}},
    // required string name_last = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.name_last_)}},
    // required string name_first = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.name_first_)}},
    // optional string email = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.email_)}},
    // optional string options = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.options_)}},
    // optional bool is_admin = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserData, _impl_.is_admin_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_admin_)}},
    // optional bool is_repo_admin = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UserData, _impl_.is_repo_admin_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_repo_admin_)}},
    // repeated string ident = 8;
    {::_pbi::TcParser::FastSR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.ident_)}},
    // repeated .SDMS.AllocData alloc = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(UserData, _impl_.alloc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string name_last = 2;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.name_last_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string name_first = 3;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.name_first_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string email = 4;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.email_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string options = 5;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.options_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool is_admin = 6;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_admin_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_repo_admin = 7;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_repo_admin_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string ident = 8;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.ident_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .SDMS.AllocData alloc = 9;
    {PROTOBUF_FIELD_OFFSET(UserData, _impl_.alloc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocData>()},
  }}, {{
    "\15\3\11\12\5\7\0\0\5\0\0\0\0\0\0\0"
    "SDMS.UserData"
    "uid"
    "name_last"
    "name_first"
    "email"
    "options"
    "ident"
  }},
};

::uint8_t* UserData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.UserData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string name_last = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_name_last();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.name_last");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string name_first = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_name_first();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.name_first");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string email = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.email");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string options = 5;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_options();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.options");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional bool is_admin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_admin(), target);
  }

  // optional bool is_repo_admin = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_repo_admin(), target);
  }

  // repeated string ident = 8;
  for (int i = 0, n = this->_internal_ident_size(); i < n; ++i) {
    const auto& s = this->_internal_ident().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.UserData.ident");
    target = stream->WriteString(8, s, target);
  }

  // repeated .SDMS.AllocData alloc = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alloc_size()); i < n; i++) {
    const auto& repfield = this->_internal_alloc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.UserData)
  return target;
}

::size_t UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.UserData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ident = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_ident().size());
  for (int i = 0, n = _internal_ident().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_ident().Get(i));
  }
  // repeated .SDMS.AllocData alloc = 9;
  total_size += 1UL * this->_internal_alloc_size();
  for (const auto& msg : this->_internal_alloc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string name_last = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name_last());
    }

    // required string name_first = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name_first());
    }

  }
  if (cached_has_bits & 0x00000078u) {
    // optional string email = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
    }

    // optional string options = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_options());
    }

    // optional bool is_admin = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

    // optional bool is_repo_admin = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserData::_class_data_ = {
    UserData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserData::GetClassData() const {
  return &_class_data_;
}

void UserData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserData*>(&to_msg);
  auto& from = static_cast<const UserData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.UserData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ident()->MergeFrom(from._internal_ident());
  _this->_internal_mutable_alloc()->MergeFrom(
      from._internal_alloc());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name_last(from._internal_name_last());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_name_first(from._internal_name_first());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_options(from._internal_options());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.is_admin_ = from._impl_.is_admin_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.is_repo_admin_ = from._impl_.is_repo_admin_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserData::CopyFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_alloc()))
    return false;
  return true;
}

::_pbi::CachedSize* UserData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserData::InternalSwap(UserData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ident_.InternalSwap(&other->_impl_.ident_);
  _impl_.alloc_.InternalSwap(&other->_impl_.alloc_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_last_, &other->_impl_.name_last_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_first_, &other->_impl_.name_first_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.options_, &other->_impl_.options_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_repo_admin_)
      + sizeof(UserData::_impl_.is_repo_admin_)
      - PROTOBUF_FIELD_OFFSET(UserData, _impl_.is_admin_)>(
          reinterpret_cast<char*>(&_impl_.is_admin_),
          reinterpret_cast<char*>(&other->_impl_.is_admin_));
}

::google::protobuf::Metadata UserData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[4]);
}
// ===================================================================

class ProjectData::_Internal {
 public:
  using HasBits = decltype(std::declval<ProjectData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProjectData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProjectData::ProjectData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.ProjectData)
}
inline PROTOBUF_NDEBUG_INLINE ProjectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        member_{visibility, arena, from.member_},
        alloc_{visibility, arena, from.alloc_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        owner_(arena, from.owner_) {}

ProjectData::ProjectData(
    ::google::protobuf::Arena* arena,
    const ProjectData& from)
    : ::google::protobuf::Message(arena) {
  ProjectData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ct_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ct_),
           offsetof(Impl_, ut_) -
               offsetof(Impl_, ct_) +
               sizeof(Impl_::ut_));

  // @@protoc_insertion_point(copy_constructor:SDMS.ProjectData)
}
inline PROTOBUF_NDEBUG_INLINE ProjectData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        member_{visibility, arena},
        alloc_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        owner_(arena) {}

inline void ProjectData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ct_),
           0,
           offsetof(Impl_, ut_) -
               offsetof(Impl_, ct_) +
               sizeof(Impl_::ut_));
}
ProjectData::~ProjectData() {
  // @@protoc_insertion_point(destructor:SDMS.ProjectData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProjectData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.ProjectData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  _impl_.member_.Clear();
  _impl_.alloc_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.ct_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ut_) -
        reinterpret_cast<char*>(&_impl_.ct_)) + sizeof(_impl_.ut_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProjectData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 60, 2> ProjectData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProjectData, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProjectData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.desc_)}},
    // optional string owner = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.owner_)}},
    // optional uint32 ct = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProjectData, _impl_.ct_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ct_)}},
    // optional uint32 ut = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProjectData, _impl_.ut_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ut_)}},
    // repeated string admin = 7;
    {::_pbi::TcParser::FastSR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.admin_)}},
    // repeated string member = 8;
    {::_pbi::TcParser::FastSR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.member_)}},
    // repeated .SDMS.AllocData alloc = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.alloc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string owner = 4;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.owner_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ct = 5;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ct_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ut = 6;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ut_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string admin = 7;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string member = 8;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.member_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .SDMS.AllocData alloc = 9;
    {PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.alloc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::AllocData>()},
  }}, {{
    "\20\2\5\4\5\0\0\5\6\0\0\0\0\0\0\0"
    "SDMS.ProjectData"
    "id"
    "title"
    "desc"
    "owner"
    "admin"
    "member"
  }},
};

::uint8_t* ProjectData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.ProjectData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string owner = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.owner");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional uint32 ct = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_ct(), target);
  }

  // optional uint32 ut = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_ut(), target);
  }

  // repeated string admin = 7;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.admin");
    target = stream->WriteString(7, s, target);
  }

  // repeated string member = 8;
  for (int i = 0, n = this->_internal_member_size(); i < n; ++i) {
    const auto& s = this->_internal_member().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ProjectData.member");
    target = stream->WriteString(8, s, target);
  }

  // repeated .SDMS.AllocData alloc = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_alloc_size()); i < n; i++) {
    const auto& repfield = this->_internal_alloc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.ProjectData)
  return target;
}

::size_t ProjectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.ProjectData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 7;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  // repeated string member = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_member().size());
  for (int i = 0, n = _internal_member().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_member().Get(i));
  }
  // repeated .SDMS.AllocData alloc = 9;
  total_size += 1UL * this->_internal_alloc_size();
  for (const auto& msg : this->_internal_alloc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x0000003cu) {
    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string owner = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional uint32 ct = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // optional uint32 ut = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProjectData::_class_data_ = {
    ProjectData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProjectData::GetClassData() const {
  return &_class_data_;
}

void ProjectData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProjectData*>(&to_msg);
  auto& from = static_cast<const ProjectData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.ProjectData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  _this->_internal_mutable_member()->MergeFrom(from._internal_member());
  _this->_internal_mutable_alloc()->MergeFrom(
      from._internal_alloc());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectData::CopyFrom(const ProjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.ProjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProjectData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_alloc()))
    return false;
  return true;
}

::_pbi::CachedSize* ProjectData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProjectData::InternalSwap(ProjectData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  _impl_.member_.InternalSwap(&other->_impl_.member_);
  _impl_.alloc_.InternalSwap(&other->_impl_.alloc_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ut_)
      + sizeof(ProjectData::_impl_.ut_)
      - PROTOBUF_FIELD_OFFSET(ProjectData, _impl_.ct_)>(
          reinterpret_cast<char*>(&_impl_.ct_),
          reinterpret_cast<char*>(&other->_impl_.ct_));
}

::google::protobuf::Metadata ProjectData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[5]);
}
// ===================================================================

class ListingData::_Internal {
 public:
  using HasBits = decltype(std::declval<ListingData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListingData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_locked(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_external(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_notes(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_gen(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_deps_avail(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_owner_name(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ListingData::ListingData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.ListingData)
}
inline PROTOBUF_NDEBUG_INLINE ListingData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dep_{visibility, arena, from.dep_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        alias_(arena, from.alias_),
        owner_(arena, from.owner_),
        creator_(arena, from.creator_),
        owner_name_(arena, from.owner_name_),
        desc_(arena, from.desc_) {}

ListingData::ListingData(
    ::google::protobuf::Arena* arena,
    const ListingData& from)
    : ::google::protobuf::Message(arena) {
  ListingData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, gen_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::gen_));

  // @@protoc_insertion_point(copy_constructor:SDMS.ListingData)
}
inline PROTOBUF_NDEBUG_INLINE ListingData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dep_{visibility, arena},
        id_(arena),
        title_(arena),
        alias_(arena),
        owner_(arena),
        creator_(arena),
        owner_name_(arena),
        desc_(arena) {}

inline void ListingData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           0,
           offsetof(Impl_, gen_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::gen_));
}
ListingData::~ListingData() {
  // @@protoc_insertion_point(destructor:SDMS.ListingData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListingData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.owner_name_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListingData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.ListingData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dep_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.creator_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.owner_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.size_ = 0;
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&_impl_.locked_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gen_) -
        reinterpret_cast<char*>(&_impl_.locked_)) + sizeof(_impl_.gen_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListingData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 71, 2> ListingData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListingData, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListingData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.title_)}},
    // optional string alias = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.alias_)}},
    // optional bool locked = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListingData, _impl_.locked_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.locked_)}},
    // optional string owner = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.owner_)}},
    // optional string creator = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.creator_)}},
    // optional double size = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 7, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.size_)}},
    // optional bool external = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListingData, _impl_.external_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.external_)}},
    // optional uint32 notes = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListingData, _impl_.notes_), 11>(),
     {72, 11, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.notes_)}},
    // optional int32 gen = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListingData, _impl_.gen_), 12>(),
     {80, 12, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.gen_)}},
    // optional bool deps_avail = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListingData, _impl_.deps_avail_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.deps_avail_)}},
    // repeated .SDMS.DependencyData dep = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.dep_)}},
    // optional string owner_name = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 5, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.owner_name_)}},
    // optional string desc = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 6, 0, PROTOBUF_FIELD_OFFSET(ListingData, _impl_.desc_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 3;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.alias_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool locked = 4;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.locked_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string owner = 5;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.owner_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string creator = 6;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.creator_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double size = 7;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.size_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool external = 8;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.external_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 notes = 9;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.notes_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 gen = 10;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.gen_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool deps_avail = 11;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.deps_avail_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .SDMS.DependencyData dep = 12;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.dep_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string owner_name = 13;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.owner_name_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 14;
    {PROTOBUF_FIELD_OFFSET(ListingData, _impl_.desc_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::DependencyData>()},
  }}, {{
    "\20\2\5\5\0\5\7\0\0\0\0\0\0\12\4\0"
    "SDMS.ListingData"
    "id"
    "title"
    "alias"
    "owner"
    "creator"
    "owner_name"
    "desc"
  }},
};

::uint8_t* ListingData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.ListingData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.alias");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional bool locked = 4;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_locked(), target);
  }

  // optional string owner = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.owner");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string creator = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_creator();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.creator");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional double size = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_size(), target);
  }

  // optional bool external = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_external(), target);
  }

  // optional uint32 notes = 9;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_notes(), target);
  }

  // optional int32 gen = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_gen(), target);
  }

  // optional bool deps_avail = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_deps_avail(), target);
  }

  // repeated .SDMS.DependencyData dep = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dep_size()); i < n; i++) {
    const auto& repfield = this->_internal_dep().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string owner_name = 13;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_owner_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.owner_name");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional string desc = 14;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ListingData.desc");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.ListingData)
  return target;
}

::size_t ListingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.ListingData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.DependencyData dep = 12;
  total_size += 1UL * this->_internal_dep_size();
  for (const auto& msg : this->_internal_dep()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x000000fcu) {
    // optional string alias = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string owner = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional string creator = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_creator());
    }

    // optional string owner_name = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner_name());
    }

    // optional string desc = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional double size = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional bool locked = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional bool external = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool deps_avail = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional uint32 notes = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_notes());
    }

    // optional int32 gen = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gen());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListingData::_class_data_ = {
    ListingData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListingData::GetClassData() const {
  return &_class_data_;
}

void ListingData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListingData*>(&to_msg);
  auto& from = static_cast<const ListingData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.ListingData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dep()->MergeFrom(
      from._internal_dep());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_creator(from._internal_creator());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_owner_name(from._internal_owner_name());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.locked_ = from._impl_.locked_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.external_ = from._impl_.external_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.deps_avail_ = from._impl_.deps_avail_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.notes_ = from._impl_.notes_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.gen_ = from._impl_.gen_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListingData::CopyFrom(const ListingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.ListingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListingData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_dep()))
    return false;
  return true;
}

::_pbi::CachedSize* ListingData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListingData::InternalSwap(ListingData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dep_.InternalSwap(&other->_impl_.dep_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_name_, &other->_impl_.owner_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListingData, _impl_.gen_)
      + sizeof(ListingData::_impl_.gen_)
      - PROTOBUF_FIELD_OFFSET(ListingData, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata ListingData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[6]);
}
// ===================================================================

class TagData::_Internal {
 public:
  using HasBits = decltype(std::declval<TagData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TagData, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

TagData::TagData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.TagData)
}
inline PROTOBUF_NDEBUG_INLINE TagData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

TagData::TagData(
    ::google::protobuf::Arena* arena,
    const TagData& from)
    : ::google::protobuf::Message(arena) {
  TagData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:SDMS.TagData)
}
inline PROTOBUF_NDEBUG_INLINE TagData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void TagData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
TagData::~TagData() {
  // @@protoc_insertion_point(destructor:SDMS.TagData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TagData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TagData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.TagData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.count_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TagData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 25, 2> TagData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TagData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TagData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint64 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TagData, _impl_.count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TagData, _impl_.count_)}},
    // required string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TagData, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string name = 1;
    {PROTOBUF_FIELD_OFFSET(TagData, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 count = 2;
    {PROTOBUF_FIELD_OFFSET(TagData, _impl_.count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\14\4\0\0\0\0\0\0"
    "SDMS.TagData"
    "name"
  }},
};

::uint8_t* TagData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.TagData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TagData.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint64 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.TagData)
  return target;
}

::size_t TagData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.TagData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // required uint64 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TagData::_class_data_ = {
    TagData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TagData::GetClassData() const {
  return &_class_data_;
}

void TagData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TagData*>(&to_msg);
  auto& from = static_cast<const TagData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.TagData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.count_ = from._impl_.count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TagData::CopyFrom(const TagData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.TagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TagData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TagData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TagData::InternalSwap(TagData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata TagData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[7]);
}
// ===================================================================

class PathData::_Internal {
 public:
};

PathData::PathData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.PathData)
}
inline PROTOBUF_NDEBUG_INLINE PathData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : item_{visibility, arena, from.item_},
        _cached_size_{0} {}

PathData::PathData(
    ::google::protobuf::Arena* arena,
    const PathData& from)
    : ::google::protobuf::Message(arena) {
  PathData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.PathData)
}
inline PROTOBUF_NDEBUG_INLINE PathData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : item_{visibility, arena},
        _cached_size_{0} {}

inline void PathData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PathData::~PathData() {
  // @@protoc_insertion_point(destructor:SDMS.PathData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PathData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PathData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.PathData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PathData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PathData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PathData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.ListingData item = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PathData, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .SDMS.ListingData item = 1;
    {PROTOBUF_FIELD_OFFSET(PathData, _impl_.item_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::ListingData>()},
  }}, {{
  }},
};

::uint8_t* PathData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.PathData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_size()); i < n; i++) {
    const auto& repfield = this->_internal_item().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.PathData)
  return target;
}

::size_t PathData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.PathData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.ListingData item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->_internal_item()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PathData::_class_data_ = {
    PathData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PathData::GetClassData() const {
  return &_class_data_;
}

void PathData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PathData*>(&to_msg);
  auto& from = static_cast<const PathData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.PathData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(
      from._internal_item());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathData::CopyFrom(const PathData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.PathData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PathData::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_item()))
    return false;
  return true;
}

::_pbi::CachedSize* PathData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PathData::InternalSwap(PathData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
}

::google::protobuf::Metadata PathData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[8]);
}
// ===================================================================

class RecordData::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_external(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_repo_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_ext(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ext_auto(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_locked(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_notes(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_md_err_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_sch_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_sch_ver(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RecordData::RecordData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.RecordData)
}
inline PROTOBUF_NDEBUG_INLINE RecordData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        deps_{visibility, arena, from.deps_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        alias_(arena, from.alias_),
        desc_(arena, from.desc_),
        metadata_(arena, from.metadata_),
        source_(arena, from.source_),
        repo_id_(arena, from.repo_id_),
        ext_(arena, from.ext_),
        owner_(arena, from.owner_),
        creator_(arena, from.creator_),
        parent_id_(arena, from.parent_id_),
        md_err_msg_(arena, from.md_err_msg_),
        sch_id_(arena, from.sch_id_) {}

RecordData::RecordData(
    ::google::protobuf::Arena* arena,
    const RecordData& from)
    : ::google::protobuf::Message(arena) {
  RecordData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, sch_ver_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::sch_ver_));

  // @@protoc_insertion_point(copy_constructor:SDMS.RecordData)
}
inline PROTOBUF_NDEBUG_INLINE RecordData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        deps_{visibility, arena},
        id_(arena),
        title_(arena),
        alias_(arena),
        desc_(arena),
        metadata_(arena),
        source_(arena),
        repo_id_(arena),
        ext_(arena),
        owner_(arena),
        creator_(arena),
        parent_id_(arena),
        md_err_msg_(arena),
        sch_id_(arena) {}

inline void RecordData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           0,
           offsetof(Impl_, sch_ver_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::sch_ver_));
}
RecordData::~RecordData() {
  // @@protoc_insertion_point(destructor:SDMS.RecordData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.metadata_.Destroy();
  _impl_.source_.Destroy();
  _impl_.repo_id_.Destroy();
  _impl_.ext_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.md_err_msg_.Destroy();
  _impl_.sch_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.RecordData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.deps_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.metadata_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.repo_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.ext_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000200u) {
      _impl_.creator_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000400u) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000800u) {
      _impl_.md_err_msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00001000u) {
      _impl_.sch_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000e000u) {
    ::memset(&_impl_.size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ext_auto_) -
        reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.ext_auto_));
  }
  if (cached_has_bits & 0x003f0000u) {
    ::memset(&_impl_.locked_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sch_ver_) -
        reinterpret_cast<char*>(&_impl_.locked_)) + sizeof(_impl_.sch_ver_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 1, 129, 2> RecordData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordData, _impl_._has_bits_),
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RecordData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.title_)}},
    // optional string alias = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.alias_)}},
    // optional string desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.desc_)}},
    // repeated string tags = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.tags_)}},
    // optional string metadata = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.metadata_)}},
    // optional bool external = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordData, _impl_.external_), 14>(),
     {56, 14, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.external_)}},
    // optional string source = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.source_)}},
    // optional string repo_id = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 6, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.repo_id_)}},
    // optional double size = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 13, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.size_)}},
    // optional string ext = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 7, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ext_)}},
    // optional bool ext_auto = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RecordData, _impl_.ext_auto_), 15>(),
     {96, 15, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ext_auto_)}},
    // optional uint32 ct = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordData, _impl_.ct_), 17>(),
     {104, 17, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ct_)}},
    // optional uint32 ut = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordData, _impl_.ut_), 18>(),
     {112, 18, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ut_)}},
    // optional uint32 dt = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RecordData, _impl_.dt_), 19>(),
     {120, 19, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.dt_)}},
    // optional string owner = 16;
    {::_pbi::TcParser::FastSS2,
     {386, 8, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.owner_)}},
    // optional string creator = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 9, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.creator_)}},
    // optional bool locked = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 16, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.locked_)}},
    // optional string parent_id = 19;
    {::_pbi::TcParser::FastSS2,
     {410, 10, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.parent_id_)}},
    // repeated .SDMS.DependencyData deps = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.deps_)}},
    // optional uint32 notes = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 20, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.notes_)}},
    // optional string md_err_msg = 22;
    {::_pbi::TcParser::FastSS2,
     {434, 11, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.md_err_msg_)}},
    // optional string sch_id = 23;
    {::_pbi::TcParser::FastSS2,
     {442, 12, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.sch_id_)}},
    // optional uint32 sch_ver = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 21, 0, PROTOBUF_FIELD_OFFSET(RecordData, _impl_.sch_ver_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 3;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.alias_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 4;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 5;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string metadata = 6;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.metadata_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool external = 7;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.external_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string source = 8;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.source_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string repo_id = 9;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.repo_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double size = 10;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.size_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string ext = 11;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ext_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool ext_auto = 12;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ext_auto_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 ct = 13;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ct_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ut = 14;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.ut_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 dt = 15;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.dt_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string owner = 16;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.owner_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string creator = 17;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.creator_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool locked = 18;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.locked_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string parent_id = 19;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.parent_id_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .SDMS.DependencyData deps = 20;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.deps_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 notes = 21;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.notes_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string md_err_msg = 22;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.md_err_msg_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sch_id = 23;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.sch_id_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 sch_ver = 24;
    {PROTOBUF_FIELD_OFFSET(RecordData, _impl_.sch_ver_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::DependencyData>()},
  }}, {{
    "\17\2\5\5\4\4\10\0\6\7\0\3\0\0\0\0\5\7\0\11\0\0\12\6\0\0\0\0\0\0\0\0"
    "SDMS.RecordData"
    "id"
    "title"
    "alias"
    "desc"
    "tags"
    "metadata"
    "source"
    "repo_id"
    "ext"
    "owner"
    "creator"
    "parent_id"
    "md_err_msg"
    "sch_id"
  }},
};

::uint8_t* RecordData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.RecordData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.alias");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string desc = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.desc");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.tags");
    target = stream->WriteString(5, s, target);
  }

  // optional string metadata = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_metadata();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.metadata");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional bool external = 7;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_external(), target);
  }

  // optional string source = 8;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_source();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.source");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string repo_id = 9;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_repo_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.repo_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional double size = 10;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_size(), target);
  }

  // optional string ext = 11;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_ext();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.ext");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional bool ext_auto = 12;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_ext_auto(), target);
  }

  // optional uint32 ct = 13;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        13, this->_internal_ct(), target);
  }

  // optional uint32 ut = 14;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_ut(), target);
  }

  // optional uint32 dt = 15;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_dt(), target);
  }

  // optional string owner = 16;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.owner");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // optional string creator = 17;
  if (cached_has_bits & 0x00000200u) {
    const std::string& _s = this->_internal_creator();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.creator");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional bool locked = 18;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_locked(), target);
  }

  // optional string parent_id = 19;
  if (cached_has_bits & 0x00000400u) {
    const std::string& _s = this->_internal_parent_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.parent_id");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // repeated .SDMS.DependencyData deps = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_deps_size()); i < n; i++) {
    const auto& repfield = this->_internal_deps().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional uint32 notes = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        21, this->_internal_notes(), target);
  }

  // optional string md_err_msg = 22;
  if (cached_has_bits & 0x00000800u) {
    const std::string& _s = this->_internal_md_err_msg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.md_err_msg");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // optional string sch_id = 23;
  if (cached_has_bits & 0x00001000u) {
    const std::string& _s = this->_internal_sch_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordData.sch_id");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // optional uint32 sch_ver = 24;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        24, this->_internal_sch_ver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.RecordData)
  return target;
}

::size_t RecordData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.RecordData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated .SDMS.DependencyData deps = 20;
  total_size += 2UL * this->_internal_deps_size();
  for (const auto& msg : this->_internal_deps()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x000000fcu) {
    // optional string alias = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string desc = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string metadata = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_metadata());
    }

    // optional string source = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_source());
    }

    // optional string repo_id = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_repo_id());
    }

    // optional string ext = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ext());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional string owner = 16;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional string creator = 17;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_creator());
    }

    // optional string parent_id = 19;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_parent_id());
    }

    // optional string md_err_msg = 22;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_md_err_msg());
    }

    // optional string sch_id = 23;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sch_id());
    }

    // optional double size = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += 9;
    }

    // optional bool external = 7;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2;
    }

    // optional bool ext_auto = 12;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x003f0000u) {
    // optional bool locked = 18;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3;
    }

    // optional uint32 ct = 13;
    if (cached_has_bits & 0x00020000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // optional uint32 ut = 14;
    if (cached_has_bits & 0x00040000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

    // optional uint32 dt = 15;
    if (cached_has_bits & 0x00080000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dt());
    }

    // optional uint32 notes = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_notes());
    }

    // optional uint32 sch_ver = 24;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_sch_ver());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordData::_class_data_ = {
    RecordData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordData::GetClassData() const {
  return &_class_data_;
}

void RecordData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordData*>(&to_msg);
  auto& from = static_cast<const RecordData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.RecordData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_deps()->MergeFrom(
      from._internal_deps());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_metadata(from._internal_metadata());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_source(from._internal_source());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_repo_id(from._internal_repo_id());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_ext(from._internal_ext());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_set_creator(from._internal_creator());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_set_parent_id(from._internal_parent_id());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_set_md_err_msg(from._internal_md_err_msg());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_set_sch_id(from._internal_sch_id());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.external_ = from._impl_.external_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.ext_auto_ = from._impl_.ext_auto_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x003f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.locked_ = from._impl_.locked_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.dt_ = from._impl_.dt_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.notes_ = from._impl_.notes_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.sch_ver_ = from._impl_.sch_ver_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordData::CopyFrom(const RecordData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.RecordData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_deps()))
    return false;
  return true;
}

::_pbi::CachedSize* RecordData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordData::InternalSwap(RecordData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.deps_.InternalSwap(&other->_impl_.deps_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_id_, &other->_impl_.repo_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ext_, &other->_impl_.ext_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.md_err_msg_, &other->_impl_.md_err_msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sch_id_, &other->_impl_.sch_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordData, _impl_.sch_ver_)
      + sizeof(RecordData::_impl_.sch_ver_)
      - PROTOBUF_FIELD_OFFSET(RecordData, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata RecordData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[9]);
}
// ===================================================================

class RecordDataLocation::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordDataLocation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RecordDataLocation::RecordDataLocation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.RecordDataLocation)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        path_(arena, from.path_) {}

RecordDataLocation::RecordDataLocation(
    ::google::protobuf::Arena* arena,
    const RecordDataLocation& from)
    : ::google::protobuf::Message(arena) {
  RecordDataLocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.RecordDataLocation)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        path_(arena) {}

inline void RecordDataLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordDataLocation::~RecordDataLocation() {
  // @@protoc_insertion_point(destructor:SDMS.RecordDataLocation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordDataLocation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordDataLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.RecordDataLocation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordDataLocation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> RecordDataLocation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordDataLocation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required string path = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_.path_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string path = 2;
    {PROTOBUF_FIELD_OFFSET(RecordDataLocation, _impl_.path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\2\4\0\0\0\0\0"
    "SDMS.RecordDataLocation"
    "id"
    "path"
  }},
};

::uint8_t* RecordDataLocation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.RecordDataLocation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordDataLocation.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordDataLocation.path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.RecordDataLocation)
  return target;
}

::size_t RecordDataLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.RecordDataLocation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string path = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordDataLocation::_class_data_ = {
    RecordDataLocation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordDataLocation::GetClassData() const {
  return &_class_data_;
}

void RecordDataLocation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordDataLocation*>(&to_msg);
  auto& from = static_cast<const RecordDataLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.RecordDataLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_path(from._internal_path());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordDataLocation::CopyFrom(const RecordDataLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.RecordDataLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordDataLocation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordDataLocation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordDataLocation::InternalSwap(RecordDataLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata RecordDataLocation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[10]);
}
// ===================================================================

class RepoRecordDataLocations::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoRecordDataLocations>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_._has_bits_);
  static void set_has_repo_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoRecordDataLocations::RepoRecordDataLocations(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.RepoRecordDataLocations)
}
inline PROTOBUF_NDEBUG_INLINE RepoRecordDataLocations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        loc_{visibility, arena, from.loc_},
        repo_id_(arena, from.repo_id_) {}

RepoRecordDataLocations::RepoRecordDataLocations(
    ::google::protobuf::Arena* arena,
    const RepoRecordDataLocations& from)
    : ::google::protobuf::Message(arena) {
  RepoRecordDataLocations* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.RepoRecordDataLocations)
}
inline PROTOBUF_NDEBUG_INLINE RepoRecordDataLocations::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        loc_{visibility, arena},
        repo_id_(arena) {}

inline void RepoRecordDataLocations::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RepoRecordDataLocations::~RepoRecordDataLocations() {
  // @@protoc_insertion_point(destructor:SDMS.RepoRecordDataLocations)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoRecordDataLocations::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.repo_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoRecordDataLocations::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.RepoRecordDataLocations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loc_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.repo_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoRecordDataLocations::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 44, 2> RepoRecordDataLocations::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RepoRecordDataLocations_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .SDMS.RecordDataLocation loc = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_.loc_)}},
    // required string repo_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_.repo_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string repo_id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_.repo_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .SDMS.RecordDataLocation loc = 2;
    {PROTOBUF_FIELD_OFFSET(RepoRecordDataLocations, _impl_.loc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::RecordDataLocation>()},
  }}, {{
    "\34\7\0\0\0\0\0\0"
    "SDMS.RepoRecordDataLocations"
    "repo_id"
  }},
};

::uint8_t* RepoRecordDataLocations::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.RepoRecordDataLocations)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string repo_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_repo_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoRecordDataLocations.repo_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .SDMS.RecordDataLocation loc = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_loc_size()); i < n; i++) {
    const auto& repfield = this->_internal_loc().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.RepoRecordDataLocations)
  return target;
}

::size_t RepoRecordDataLocations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.RepoRecordDataLocations)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.RecordDataLocation loc = 2;
  total_size += 1UL * this->_internal_loc_size();
  for (const auto& msg : this->_internal_loc()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string repo_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_repo_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoRecordDataLocations::_class_data_ = {
    RepoRecordDataLocations::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoRecordDataLocations::GetClassData() const {
  return &_class_data_;
}

void RepoRecordDataLocations::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoRecordDataLocations*>(&to_msg);
  auto& from = static_cast<const RepoRecordDataLocations&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.RepoRecordDataLocations)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loc()->MergeFrom(
      from._internal_loc());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_repo_id(from._internal_repo_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoRecordDataLocations::CopyFrom(const RepoRecordDataLocations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.RepoRecordDataLocations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoRecordDataLocations::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_loc()))
    return false;
  return true;
}

::_pbi::CachedSize* RepoRecordDataLocations::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoRecordDataLocations::InternalSwap(RepoRecordDataLocations* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.loc_.InternalSwap(&other->_impl_.loc_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_id_, &other->_impl_.repo_id_, arena);
}

::google::protobuf::Metadata RepoRecordDataLocations::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[11]);
}
// ===================================================================

class RecordDataSize::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordDataSize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RecordDataSize::RecordDataSize(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.RecordDataSize)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataSize::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

RecordDataSize::RecordDataSize(
    ::google::protobuf::Arena* arena,
    const RecordDataSize& from)
    : ::google::protobuf::Message(arena) {
  RecordDataSize* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:SDMS.RecordDataSize)
}
inline PROTOBUF_NDEBUG_INLINE RecordDataSize::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void RecordDataSize::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
RecordDataSize::~RecordDataSize() {
  // @@protoc_insertion_point(destructor:SDMS.RecordDataSize)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RecordDataSize::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RecordDataSize::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.RecordDataSize)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RecordDataSize::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 30, 2> RecordDataSize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RecordDataSize_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required double size = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_.size_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required double size = 2;
    {PROTOBUF_FIELD_OFFSET(RecordDataSize, _impl_.size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\23\2\0\0\0\0\0\0"
    "SDMS.RecordDataSize"
    "id"
  }},
};

::uint8_t* RecordDataSize::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.RecordDataSize)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RecordDataSize.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required double size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.RecordDataSize)
  return target;
}

::size_t RecordDataSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.RecordDataSize)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required double size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RecordDataSize::_class_data_ = {
    RecordDataSize::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RecordDataSize::GetClassData() const {
  return &_class_data_;
}

void RecordDataSize::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RecordDataSize*>(&to_msg);
  auto& from = static_cast<const RecordDataSize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.RecordDataSize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordDataSize::CopyFrom(const RecordDataSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.RecordDataSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RecordDataSize::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RecordDataSize::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RecordDataSize::InternalSwap(RecordDataSize* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata RecordDataSize::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[12]);
}
// ===================================================================

class CollData::_Internal {
 public:
  using HasBits = decltype(std::declval<CollData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CollData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alias(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_topic(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_owner(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_notes(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

CollData::CollData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.CollData)
}
inline PROTOBUF_NDEBUG_INLINE CollData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        alias_(arena, from.alias_),
        desc_(arena, from.desc_),
        topic_(arena, from.topic_),
        owner_(arena, from.owner_),
        creator_(arena, from.creator_),
        parent_id_(arena, from.parent_id_) {}

CollData::CollData(
    ::google::protobuf::Arena* arena,
    const CollData& from)
    : ::google::protobuf::Message(arena) {
  CollData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ct_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ct_),
           offsetof(Impl_, notes_) -
               offsetof(Impl_, ct_) +
               sizeof(Impl_::notes_));

  // @@protoc_insertion_point(copy_constructor:SDMS.CollData)
}
inline PROTOBUF_NDEBUG_INLINE CollData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        id_(arena),
        title_(arena),
        alias_(arena),
        desc_(arena),
        topic_(arena),
        owner_(arena),
        creator_(arena),
        parent_id_(arena) {}

inline void CollData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ct_),
           0,
           offsetof(Impl_, notes_) -
               offsetof(Impl_, ct_) +
               sizeof(Impl_::notes_));
}
CollData::~CollData() {
  // @@protoc_insertion_point(destructor:SDMS.CollData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CollData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.alias_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.topic_.Destroy();
  _impl_.owner_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CollData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.CollData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.topic_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.creator_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.ct_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.notes_) -
        reinterpret_cast<char*>(&_impl_.ct_)) + sizeof(_impl_.notes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CollData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 76, 2> CollData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CollData, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CollData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.title_)}},
    // optional string alias = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.alias_)}},
    // optional string desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.desc_)}},
    // repeated string tags = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.tags_)}},
    // optional string topic = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.topic_)}},
    // optional string owner = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.owner_)}},
    // optional string creator = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 6, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.creator_)}},
    // optional uint32 ct = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollData, _impl_.ct_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.ct_)}},
    // optional uint32 ut = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollData, _impl_.ut_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.ut_)}},
    // optional string parent_id = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 7, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.parent_id_)}},
    // optional uint32 notes = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CollData, _impl_.notes_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(CollData, _impl_.notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alias = 3;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.alias_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 4;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string tags = 5;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional string topic = 6;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.topic_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string owner = 7;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.owner_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string creator = 8;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.creator_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ct = 9;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.ct_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ut = 10;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.ut_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string parent_id = 11;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.parent_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 notes = 12;
    {PROTOBUF_FIELD_OFFSET(CollData, _impl_.notes_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\2\5\5\4\4\5\5\7\0\0\11\0\0\0\0"
    "SDMS.CollData"
    "id"
    "title"
    "alias"
    "desc"
    "tags"
    "topic"
    "owner"
    "creator"
    "parent_id"
  }},
};

::uint8_t* CollData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.CollData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string alias = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_alias();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.alias");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string desc = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.desc");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.tags");
    target = stream->WriteString(5, s, target);
  }

  // optional string topic = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_topic();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.topic");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string owner = 7;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_owner();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.owner");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string creator = 8;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_creator();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.creator");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional uint32 ct = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_ct(), target);
  }

  // optional uint32 ut = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_ut(), target);
  }

  // optional string parent_id = 11;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_parent_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.CollData.parent_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // optional uint32 notes = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_notes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.CollData)
  return target;
}

::size_t CollData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.CollData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x000000fcu) {
    // optional string alias = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_alias());
    }

    // optional string desc = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string topic = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_topic());
    }

    // optional string owner = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_owner());
    }

    // optional string creator = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_creator());
    }

    // optional string parent_id = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_parent_id());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional uint32 ct = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // optional uint32 ut = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

    // optional uint32 notes = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_notes());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CollData::_class_data_ = {
    CollData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CollData::GetClassData() const {
  return &_class_data_;
}

void CollData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CollData*>(&to_msg);
  auto& from = static_cast<const CollData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.CollData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_topic(from._internal_topic());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_owner(from._internal_owner());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_creator(from._internal_creator());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_parent_id(from._internal_parent_id());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.notes_ = from._impl_.notes_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CollData::CopyFrom(const CollData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.CollData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CollData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* CollData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CollData::InternalSwap(CollData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.topic_, &other->_impl_.topic_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollData, _impl_.notes_)
      + sizeof(CollData::_impl_.notes_)
      - PROTOBUF_FIELD_OFFSET(CollData, _impl_.ct_)>(
          reinterpret_cast<char*>(&_impl_.ct_),
          reinterpret_cast<char*>(&other->_impl_.ct_));
}

::google::protobuf::Metadata CollData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[13]);
}
// ===================================================================

class GroupData::_Internal {
 public:
  using HasBits = decltype(std::declval<GroupData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GroupData, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GroupData::GroupData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.GroupData)
}
inline PROTOBUF_NDEBUG_INLINE GroupData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        member_{visibility, arena, from.member_},
        uid_(arena, from.uid_),
        gid_(arena, from.gid_),
        title_(arena, from.title_),
        desc_(arena, from.desc_) {}

GroupData::GroupData(
    ::google::protobuf::Arena* arena,
    const GroupData& from)
    : ::google::protobuf::Message(arena) {
  GroupData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:SDMS.GroupData)
}
inline PROTOBUF_NDEBUG_INLINE GroupData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        member_{visibility, arena},
        uid_(arena),
        gid_(arena),
        title_(arena),
        desc_(arena) {}

inline void GroupData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GroupData::~GroupData() {
  // @@protoc_insertion_point(destructor:SDMS.GroupData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GroupData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uid_.Destroy();
  _impl_.gid_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GroupData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.GroupData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.member_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.gid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GroupData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 44, 2> GroupData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GroupData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string uid = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GroupData, _impl_.uid_)}},
    // required string gid = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GroupData, _impl_.gid_)}},
    // optional string title = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GroupData, _impl_.title_)}},
    // optional string desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(GroupData, _impl_.desc_)}},
    // repeated string member = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GroupData, _impl_.member_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string uid = 1;
    {PROTOBUF_FIELD_OFFSET(GroupData, _impl_.uid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string gid = 2;
    {PROTOBUF_FIELD_OFFSET(GroupData, _impl_.gid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 3;
    {PROTOBUF_FIELD_OFFSET(GroupData, _impl_.title_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 4;
    {PROTOBUF_FIELD_OFFSET(GroupData, _impl_.desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string member = 5;
    {PROTOBUF_FIELD_OFFSET(GroupData, _impl_.member_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\16\3\3\5\4\6\0\0"
    "SDMS.GroupData"
    "uid"
    "gid"
    "title"
    "desc"
    "member"
  }},
};

::uint8_t* GroupData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.GroupData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string uid = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.GroupData.uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string gid = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_gid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.GroupData.gid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string title = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.GroupData.title");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string desc = 4;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.GroupData.desc");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string member = 5;
  for (int i = 0, n = this->_internal_member_size(); i < n; ++i) {
    const auto& s = this->_internal_member().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.GroupData.member");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.GroupData)
  return target;
}

::size_t GroupData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.GroupData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string member = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_member().size());
  for (int i = 0, n = _internal_member().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_member().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string uid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uid());
    }

    // required string gid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gid());
    }

  }
  if (cached_has_bits & 0x0000000cu) {
    // optional string title = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GroupData::_class_data_ = {
    GroupData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GroupData::GetClassData() const {
  return &_class_data_;
}

void GroupData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GroupData*>(&to_msg);
  auto& from = static_cast<const GroupData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.GroupData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_member()->MergeFrom(from._internal_member());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uid(from._internal_uid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_gid(from._internal_gid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_desc(from._internal_desc());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupData::CopyFrom(const GroupData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.GroupData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GroupData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GroupData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GroupData::InternalSwap(GroupData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.member_.InternalSwap(&other->_impl_.member_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gid_, &other->_impl_.gid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
}

::google::protobuf::Metadata GroupData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[14]);
}
// ===================================================================

class ACLRule::_Internal {
 public:
  using HasBits = decltype(std::declval<ACLRule>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ACLRule, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_grant(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_inhgrant(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ACLRule::ACLRule(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.ACLRule)
}
inline PROTOBUF_NDEBUG_INLINE ACLRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

ACLRule::ACLRule(
    ::google::protobuf::Arena* arena,
    const ACLRule& from)
    : ::google::protobuf::Message(arena) {
  ACLRule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, grant_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, grant_),
           offsetof(Impl_, inhgrant_) -
               offsetof(Impl_, grant_) +
               sizeof(Impl_::inhgrant_));

  // @@protoc_insertion_point(copy_constructor:SDMS.ACLRule)
}
inline PROTOBUF_NDEBUG_INLINE ACLRule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void ACLRule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, grant_),
           0,
           offsetof(Impl_, inhgrant_) -
               offsetof(Impl_, grant_) +
               sizeof(Impl_::inhgrant_));
}
ACLRule::~ACLRule() {
  // @@protoc_insertion_point(destructor:SDMS.ACLRule)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ACLRule::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ACLRule::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.ACLRule)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.grant_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.inhgrant_) -
        reinterpret_cast<char*>(&_impl_.grant_)) + sizeof(_impl_.inhgrant_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ACLRule::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 23, 2> ACLRule::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ACLRule, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ACLRule_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.id_)}},
    // optional uint32 grant = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ACLRule, _impl_.grant_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.grant_)}},
    // optional uint32 inhgrant = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ACLRule, _impl_.inhgrant_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.inhgrant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 grant = 2;
    {PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.grant_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 inhgrant = 3;
    {PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.inhgrant_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\14\2\0\0\0\0\0\0"
    "SDMS.ACLRule"
    "id"
  }},
};

::uint8_t* ACLRule::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.ACLRule)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.ACLRule.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 grant = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_grant(), target);
  }

  // optional uint32 inhgrant = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_inhgrant(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.ACLRule)
  return target;
}

::size_t ACLRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.ACLRule)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional uint32 grant = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_grant());
    }

    // optional uint32 inhgrant = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_inhgrant());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ACLRule::_class_data_ = {
    ACLRule::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ACLRule::GetClassData() const {
  return &_class_data_;
}

void ACLRule::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ACLRule*>(&to_msg);
  auto& from = static_cast<const ACLRule&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.ACLRule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.grant_ = from._impl_.grant_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.inhgrant_ = from._impl_.inhgrant_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ACLRule::CopyFrom(const ACLRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.ACLRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ACLRule::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ACLRule::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ACLRule::InternalSwap(ACLRule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.inhgrant_)
      + sizeof(ACLRule::_impl_.inhgrant_)
      - PROTOBUF_FIELD_OFFSET(ACLRule, _impl_.grant_)>(
          reinterpret_cast<char*>(&_impl_.grant_),
          reinterpret_cast<char*>(&other->_impl_.grant_));
}

::google::protobuf::Metadata ACLRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[15]);
}
// ===================================================================

class TopicData::_Internal {
 public:
  using HasBits = decltype(std::declval<TopicData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TopicData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_admin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_coll_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000023) ^ 0x00000023) != 0;
  }
};

TopicData::TopicData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.TopicData)
}
inline PROTOBUF_NDEBUG_INLINE TopicData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_{visibility, arena, from.path_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        creator_(arena, from.creator_) {}

TopicData::TopicData(
    ::google::protobuf::Arena* arena,
    const TopicData& from)
    : ::google::protobuf::Message(arena) {
  TopicData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, admin_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, admin_),
           offsetof(Impl_, coll_cnt_) -
               offsetof(Impl_, admin_) +
               sizeof(Impl_::coll_cnt_));

  // @@protoc_insertion_point(copy_constructor:SDMS.TopicData)
}
inline PROTOBUF_NDEBUG_INLINE TopicData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        creator_(arena) {}

inline void TopicData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, admin_),
           0,
           offsetof(Impl_, coll_cnt_) -
               offsetof(Impl_, admin_) +
               sizeof(Impl_::coll_cnt_));
}
TopicData::~TopicData() {
  // @@protoc_insertion_point(destructor:SDMS.TopicData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TopicData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.TopicData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.creator_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.admin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.coll_cnt_) -
        reinterpret_cast<char*>(&_impl_.admin_)) + sizeof(_impl_.coll_cnt_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TopicData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 41, 2> TopicData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TopicData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TopicData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.id_)}},
    // required string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.title_)}},
    // repeated .SDMS.TopicData path = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.path_)}},
    // optional string desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.desc_)}},
    // optional string creator = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.creator_)}},
    // optional bool admin = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TopicData, _impl_.admin_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.admin_)}},
    // required uint32 coll_cnt = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicData, _impl_.coll_cnt_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(TopicData, _impl_.coll_cnt_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 2;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .SDMS.TopicData path = 3;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string desc = 4;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string creator = 5;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.creator_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool admin = 6;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.admin_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required uint32 coll_cnt = 7;
    {PROTOBUF_FIELD_OFFSET(TopicData, _impl_.coll_cnt_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::TopicData>()},
  }}, {{
    "\16\2\5\0\4\7\0\0"
    "SDMS.TopicData"
    "id"
    "title"
    "desc"
    "creator"
  }},
};

::uint8_t* TopicData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.TopicData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TopicData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TopicData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .SDMS.TopicData path = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_path_size()); i < n; i++) {
    const auto& repfield = this->_internal_path().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string desc = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TopicData.desc");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string creator = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_creator();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TopicData.creator");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional bool admin = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_admin(), target);
  }

  // required uint32 coll_cnt = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_coll_cnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.TopicData)
  return target;
}

::size_t TopicData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.TopicData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.TopicData path = 3;
  total_size += 1UL * this->_internal_path_size();
  for (const auto& msg : this->_internal_path()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  if (cached_has_bits & 0x0000001cu) {
    // optional string desc = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string creator = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_creator());
    }

    // optional bool admin = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  // required uint32 coll_cnt = 7;
  if (cached_has_bits & 0x00000020u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_coll_cnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TopicData::_class_data_ = {
    TopicData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TopicData::GetClassData() const {
  return &_class_data_;
}

void TopicData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TopicData*>(&to_msg);
  auto& from = static_cast<const TopicData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.TopicData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_creator(from._internal_creator());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.admin_ = from._impl_.admin_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.coll_cnt_ = from._impl_.coll_cnt_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicData::CopyFrom(const TopicData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.TopicData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TopicData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_path()))
    return false;
  return true;
}

::_pbi::CachedSize* TopicData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TopicData::InternalSwap(TopicData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TopicData, _impl_.coll_cnt_)
      + sizeof(TopicData::_impl_.coll_cnt_)
      - PROTOBUF_FIELD_OFFSET(TopicData, _impl_.admin_)>(
          reinterpret_cast<char*>(&_impl_.admin_),
          reinterpret_cast<char*>(&other->_impl_.admin_));
}

::google::protobuf::Metadata TopicData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[16]);
}
// ===================================================================

class RepoData::_Internal {
 public:
  using HasBits = decltype(std::declval<RepoData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RepoData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_capacity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_pub_key(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_address(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_endpoint(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_domain(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_exp_path(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

RepoData::RepoData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.RepoData)
}
inline PROTOBUF_NDEBUG_INLINE RepoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_{visibility, arena, from.admin_},
        id_(arena, from.id_),
        title_(arena, from.title_),
        desc_(arena, from.desc_),
        pub_key_(arena, from.pub_key_),
        address_(arena, from.address_),
        endpoint_(arena, from.endpoint_),
        path_(arena, from.path_),
        domain_(arena, from.domain_),
        exp_path_(arena, from.exp_path_) {}

RepoData::RepoData(
    ::google::protobuf::Arena* arena,
    const RepoData& from)
    : ::google::protobuf::Message(arena) {
  RepoData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.capacity_ = from._impl_.capacity_;

  // @@protoc_insertion_point(copy_constructor:SDMS.RepoData)
}
inline PROTOBUF_NDEBUG_INLINE RepoData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_{visibility, arena},
        id_(arena),
        title_(arena),
        desc_(arena),
        pub_key_(arena),
        address_(arena),
        endpoint_(arena),
        path_(arena),
        domain_(arena),
        exp_path_(arena) {}

inline void RepoData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.capacity_ = {};
}
RepoData::~RepoData() {
  // @@protoc_insertion_point(destructor:SDMS.RepoData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RepoData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.pub_key_.Destroy();
  _impl_.address_.Destroy();
  _impl_.endpoint_.Destroy();
  _impl_.path_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.exp_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RepoData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.RepoData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.pub_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.endpoint_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _impl_.exp_path_.ClearNonDefaultToEmpty();
  }
  _impl_.capacity_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RepoData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 86, 2> RepoData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepoData, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RepoData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.title_)}},
    // optional string desc = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.desc_)}},
    // optional uint64 capacity = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RepoData, _impl_.capacity_), 9>(),
     {32, 9, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.capacity_)}},
    // optional string pub_key = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.pub_key_)}},
    // optional string address = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.address_)}},
    // optional string endpoint = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.endpoint_)}},
    // optional string path = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 6, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.path_)}},
    // optional string domain = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 7, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.domain_)}},
    // optional string exp_path = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 8, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.exp_path_)}},
    // repeated string admin = 11;
    {::_pbi::TcParser::FastSR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(RepoData, _impl_.admin_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.title_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 3;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 capacity = 4;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.capacity_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string pub_key = 5;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.pub_key_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string address = 6;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.address_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string endpoint = 7;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.endpoint_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string path = 8;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.path_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string domain = 9;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.domain_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string exp_path = 10;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.exp_path_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string admin = 11;
    {PROTOBUF_FIELD_OFFSET(RepoData, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\15\2\5\4\0\7\7\10\4\6\10\5\0\0\0\0"
    "SDMS.RepoData"
    "id"
    "title"
    "desc"
    "pub_key"
    "address"
    "endpoint"
    "path"
    "domain"
    "exp_path"
    "admin"
  }},
};

::uint8_t* RepoData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.RepoData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string desc = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.desc");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint64 capacity = 4;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_capacity(), target);
  }

  // optional string pub_key = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_pub_key();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.pub_key");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string address = 6;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.address");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string endpoint = 7;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_endpoint();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.endpoint");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string path = 8;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.path");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string domain = 9;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.domain");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string exp_path = 10;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_exp_path();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.exp_path");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated string admin = 11;
  for (int i = 0, n = this->_internal_admin_size(); i < n; ++i) {
    const auto& s = this->_internal_admin().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.RepoData.admin");
    target = stream->WriteString(11, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.RepoData)
  return target;
}

::size_t RepoData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.RepoData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string admin = 11;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_admin().size());
  for (int i = 0, n = _internal_admin().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_admin().Get(i));
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x000000feu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string desc = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string pub_key = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pub_key());
    }

    // optional string address = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_address());
    }

    // optional string endpoint = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_endpoint());
    }

    // optional string path = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_path());
    }

    // optional string domain = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_domain());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional string exp_path = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_exp_path());
    }

    // optional uint64 capacity = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_capacity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RepoData::_class_data_ = {
    RepoData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RepoData::GetClassData() const {
  return &_class_data_;
}

void RepoData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RepoData*>(&to_msg);
  auto& from = static_cast<const RepoData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.RepoData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_admin()->MergeFrom(from._internal_admin());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_pub_key(from._internal_pub_key());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_address(from._internal_address());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_endpoint(from._internal_endpoint());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_domain(from._internal_domain());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_exp_path(from._internal_exp_path());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.capacity_ = from._impl_.capacity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepoData::CopyFrom(const RepoData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.RepoData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RepoData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RepoData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RepoData::InternalSwap(RepoData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.admin_.InternalSwap(&other->_impl_.admin_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pub_key_, &other->_impl_.pub_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endpoint_, &other->_impl_.endpoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exp_path_, &other->_impl_.exp_path_, arena);
        swap(_impl_.capacity_, other->_impl_.capacity_);
}

::google::protobuf::Metadata RepoData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[17]);
}
// ===================================================================

class NoteComment::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteComment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteComment, _impl_._has_bits_);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_comment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

NoteComment::NoteComment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.NoteComment)
}
inline PROTOBUF_NDEBUG_INLINE NoteComment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_(arena, from.user_),
        comment_(arena, from.comment_) {}

NoteComment::NoteComment(
    ::google::protobuf::Arena* arena,
    const NoteComment& from)
    : ::google::protobuf::Message(arena) {
  NoteComment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_),
           offsetof(Impl_, state_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::state_));

  // @@protoc_insertion_point(copy_constructor:SDMS.NoteComment)
}
inline PROTOBUF_NDEBUG_INLINE NoteComment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_(arena),
        comment_(arena) {}

inline void NoteComment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::state_));
}
NoteComment::~NoteComment() {
  // @@protoc_insertion_point(destructor:SDMS.NoteComment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteComment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_.Destroy();
  _impl_.comment_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteComment::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.NoteComment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.user_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.comment_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.state_) -
        reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteComment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 36, 2> NoteComment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteComment, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoteComment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string user = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.user_)}},
    // required uint32 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NoteComment, _impl_.time_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.time_)}},
    // required string comment = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.comment_)}},
    // optional .SDMS.NoteType type = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 3, 3, PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.type_)}},
    // optional .SDMS.NoteState state = 5;
    {::_pbi::TcParser::FastEr0S1,
     {40, 4, 2, PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string user = 1;
    {PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 time = 2;
    {PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required string comment = 3;
    {PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.comment_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .SDMS.NoteType type = 4;
    {PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .SDMS.NoteState state = 5;
    {PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.state_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 4},
    {0, 3},
  }}, {{
    "\20\4\0\7\0\0\0\0"
    "SDMS.NoteComment"
    "user"
    "comment"
  }},
};

::uint8_t* NoteComment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.NoteComment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string user = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteComment.user");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_time(), target);
  }

  // required string comment = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_comment();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteComment.comment");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .SDMS.NoteType type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_type(), target);
  }

  // optional .SDMS.NoteState state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.NoteComment)
  return target;
}

::size_t NoteComment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.NoteComment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string user = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_user());
    }

    // required string comment = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_comment());
    }

    // required uint32 time = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_time());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // optional .SDMS.NoteType type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional .SDMS.NoteState state = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteComment::_class_data_ = {
    NoteComment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteComment::GetClassData() const {
  return &_class_data_;
}

void NoteComment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteComment*>(&to_msg);
  auto& from = static_cast<const NoteComment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.NoteComment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_user(from._internal_user());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_comment(from._internal_comment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteComment::CopyFrom(const NoteComment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.NoteComment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteComment::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* NoteComment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteComment::InternalSwap(NoteComment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comment_, &other->_impl_.comment_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.state_)
      + sizeof(NoteComment::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(NoteComment, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata NoteComment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[18]);
}
// ===================================================================

class NoteData::_Internal {
 public:
  using HasBits = decltype(std::declval<NoteData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoteData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_subject_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_parent_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_has_child(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000f7) ^ 0x000000f7) != 0;
  }
};

NoteData::NoteData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.NoteData)
}
inline PROTOBUF_NDEBUG_INLINE NoteData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        comment_{visibility, arena, from.comment_},
        id_(arena, from.id_),
        subject_id_(arena, from.subject_id_),
        title_(arena, from.title_),
        parent_id_(arena, from.parent_id_) {}

NoteData::NoteData(
    ::google::protobuf::Arena* arena,
    const NoteData& from)
    : ::google::protobuf::Message(arena) {
  NoteData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, has_child_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::has_child_));

  // @@protoc_insertion_point(copy_constructor:SDMS.NoteData)
}
inline PROTOBUF_NDEBUG_INLINE NoteData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        comment_{visibility, arena},
        id_(arena),
        subject_id_(arena),
        title_(arena),
        parent_id_(arena) {}

inline void NoteData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, has_child_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::has_child_));
}
NoteData::~NoteData() {
  // @@protoc_insertion_point(destructor:SDMS.NoteData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoteData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.subject_id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.parent_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoteData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.NoteData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.comment_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.subject_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ut_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.ut_));
  }
  _impl_.has_child_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoteData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 56, 2> NoteData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteData, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoteData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.id_)}},
    // required .SDMS.NoteType type = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 4, 3, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.type_)}},
    // required .SDMS.NoteState state = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 5, 2, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.state_)}},
    // required string subject_id = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.subject_id_)}},
    // required string title = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.title_)}},
    // repeated .SDMS.NoteComment comment = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.comment_)}},
    // required uint32 ct = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NoteData, _impl_.ct_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.ct_)}},
    // required uint32 ut = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NoteData, _impl_.ut_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.ut_)}},
    // optional string parent_id = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.parent_id_)}},
    // optional bool has_child = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NoteData, _impl_.has_child_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(NoteData, _impl_.has_child_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .SDMS.NoteType type = 2;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required .SDMS.NoteState state = 3;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.state_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required string subject_id = 4;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.subject_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string title = 5;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.title_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .SDMS.NoteComment comment = 6;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.comment_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required uint32 ct = 7;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.ct_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 ut = 8;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.ut_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string parent_id = 9;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.parent_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool has_child = 10;
    {PROTOBUF_FIELD_OFFSET(NoteData, _impl_.has_child_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {0, 4},
    {0, 3},
    {::_pbi::TcParser::GetTable<::SDMS::NoteComment>()},
  }}, {{
    "\15\2\0\0\12\5\0\0\0\11\0\0\0\0\0\0"
    "SDMS.NoteData"
    "id"
    "subject_id"
    "title"
    "parent_id"
  }},
};

::uint8_t* NoteData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.NoteData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .SDMS.NoteType type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // required .SDMS.NoteState state = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_state(), target);
  }

  // required string subject_id = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_subject_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteData.subject_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required string title = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteData.title");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .SDMS.NoteComment comment = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_comment_size()); i < n; i++) {
    const auto& repfield = this->_internal_comment().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // required uint32 ct = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_ct(), target);
  }

  // required uint32 ut = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_ut(), target);
  }

  // optional string parent_id = 9;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_parent_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.NoteData.parent_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional bool has_child = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_has_child(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.NoteData)
  return target;
}

::size_t NoteData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.NoteData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.NoteComment comment = 6;
  total_size += 1UL * this->_internal_comment_size();
  for (const auto& msg : this->_internal_comment()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string subject_id = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject_id());
    }

    // required string title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

  }
  // optional string parent_id = 9;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_parent_id());
  }

  if (cached_has_bits & 0x000000f0u) {
    // required .SDMS.NoteType type = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required .SDMS.NoteState state = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
    }

    // required uint32 ct = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // required uint32 ut = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

  }
  // optional bool has_child = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoteData::_class_data_ = {
    NoteData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoteData::GetClassData() const {
  return &_class_data_;
}

void NoteData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoteData*>(&to_msg);
  auto& from = static_cast<const NoteData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.NoteData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_comment()->MergeFrom(
      from._internal_comment());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_subject_id(from._internal_subject_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_parent_id(from._internal_parent_id());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_has_child(from._internal_has_child());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteData::CopyFrom(const NoteData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.NoteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoteData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_comment()))
    return false;
  return true;
}

::_pbi::CachedSize* NoteData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoteData::InternalSwap(NoteData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.comment_.InternalSwap(&other->_impl_.comment_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_id_, &other->_impl_.subject_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NoteData, _impl_.has_child_)
      + sizeof(NoteData::_impl_.has_child_)
      - PROTOBUF_FIELD_OFFSET(NoteData, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata NoteData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[19]);
}
// ===================================================================

class TaskData::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TaskData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_client(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_step(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_steps(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ct(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_ut(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dest(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000007e7) ^ 0x000007e7) != 0;
  }
};

TaskData::TaskData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.TaskData)
}
inline PROTOBUF_NDEBUG_INLINE TaskData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        client_(arena, from.client_),
        msg_(arena, from.msg_),
        source_(arena, from.source_),
        dest_(arena, from.dest_) {}

TaskData::TaskData(
    ::google::protobuf::Arena* arena,
    const TaskData& from)
    : ::google::protobuf::Message(arena) {
  TaskData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, ut_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::ut_));

  // @@protoc_insertion_point(copy_constructor:SDMS.TaskData)
}
inline PROTOBUF_NDEBUG_INLINE TaskData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        client_(arena),
        msg_(arena),
        source_(arena),
        dest_(arena) {}

inline void TaskData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, ut_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::ut_));
}
TaskData::~TaskData() {
  // @@protoc_insertion_point(destructor:SDMS.TaskData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.client_.Destroy();
  _impl_.msg_.Destroy();
  _impl_.source_.Destroy();
  _impl_.dest_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.TaskData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.client_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.dest_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.step_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.step_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.steps_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ut_) -
        reinterpret_cast<char*>(&_impl_.steps_)) + sizeof(_impl_.ut_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 51, 2> TaskData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskData, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TaskData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.id_)}},
    // required .SDMS.TaskType type = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 5, 9, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.type_)}},
    // required .SDMS.TaskStatus status = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 6, 4, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.status_)}},
    // required string client = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.client_)}},
    // required uint32 step = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskData, _impl_.step_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.step_)}},
    // required uint32 steps = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskData, _impl_.steps_), 8>(),
     {48, 8, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.steps_)}},
    // required string msg = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.msg_)}},
    // required uint32 ct = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskData, _impl_.ct_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.ct_)}},
    // required uint32 ut = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskData, _impl_.ut_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.ut_)}},
    // optional string source = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 3, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.source_)}},
    // optional string dest = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 4, 0, PROTOBUF_FIELD_OFFSET(TaskData, _impl_.dest_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .SDMS.TaskType type = 2;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.type_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required .SDMS.TaskStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.status_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required string client = 4;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.client_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 step = 5;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.step_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 steps = 6;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.steps_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required string msg = 7;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.msg_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 ct = 8;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.ct_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 ut = 9;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.ut_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string source = 10;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.source_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string dest = 11;
    {PROTOBUF_FIELD_OFFSET(TaskData, _impl_.dest_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 10},
    {0, 5},
  }}, {{
    "\15\2\0\0\6\0\0\3\0\0\6\4\0\0\0\0"
    "SDMS.TaskData"
    "id"
    "client"
    "msg"
    "source"
    "dest"
  }},
};

::uint8_t* TaskData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.TaskData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TaskData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required .SDMS.TaskType type = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // required .SDMS.TaskStatus status = 3;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_status(), target);
  }

  // required string client = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_client();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TaskData.client");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required uint32 step = 5;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_step(), target);
  }

  // required uint32 steps = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_steps(), target);
  }

  // required string msg = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TaskData.msg");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // required uint32 ct = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_ct(), target);
  }

  // required uint32 ut = 9;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_ut(), target);
  }

  // optional string source = 10;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_source();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TaskData.source");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string dest = 11;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_dest();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.TaskData.dest");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.TaskData)
  return target;
}

::size_t TaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.TaskData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required string client = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_client());
    }

    // required string msg = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_msg());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // optional string source = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_source());
    }

    // optional string dest = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_dest());
    }

  }
  if (cached_has_bits & 0x000000e0u) {
    // required .SDMS.TaskType type = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required .SDMS.TaskStatus status = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
    }

    // required uint32 step = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_step());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // required uint32 steps = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_steps());
    }

    // required uint32 ct = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ct());
    }

    // required uint32 ut = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ut());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskData::_class_data_ = {
    TaskData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TaskData::GetClassData() const {
  return &_class_data_;
}

void TaskData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskData*>(&to_msg);
  auto& from = static_cast<const TaskData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.TaskData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_client(from._internal_client());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_msg(from._internal_msg());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_source(from._internal_source());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_dest(from._internal_dest());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.step_ = from._impl_.step_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.steps_ = from._impl_.steps_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.ct_ = from._impl_.ct_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.ut_ = from._impl_.ut_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskData::CopyFrom(const TaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.TaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TaskData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TaskData::InternalSwap(TaskData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_, &other->_impl_.client_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dest_, &other->_impl_.dest_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskData, _impl_.ut_)
      + sizeof(TaskData::_impl_.ut_)
      - PROTOBUF_FIELD_OFFSET(TaskData, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata TaskData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[20]);
}
// ===================================================================

class SchemaData::_Internal {
 public:
  using HasBits = decltype(std::declval<SchemaData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SchemaData, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ver(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_depr(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ref(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_own_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_own_nm(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pub(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_def(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000021) ^ 0x00000021) != 0;
  }
};

SchemaData::SchemaData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SDMS.SchemaData)
}
inline PROTOBUF_NDEBUG_INLINE SchemaData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uses_{visibility, arena, from.uses_},
        used_by_{visibility, arena, from.used_by_},
        id_(arena, from.id_),
        own_id_(arena, from.own_id_),
        own_nm_(arena, from.own_nm_),
        desc_(arena, from.desc_),
        def_(arena, from.def_) {}

SchemaData::SchemaData(
    ::google::protobuf::Arena* arena,
    const SchemaData& from)
    : ::google::protobuf::Message(arena) {
  SchemaData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ver_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ver_),
           offsetof(Impl_, pub_) -
               offsetof(Impl_, ver_) +
               sizeof(Impl_::pub_));

  // @@protoc_insertion_point(copy_constructor:SDMS.SchemaData)
}
inline PROTOBUF_NDEBUG_INLINE SchemaData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uses_{visibility, arena},
        used_by_{visibility, arena},
        id_(arena),
        own_id_(arena),
        own_nm_(arena),
        desc_(arena),
        def_(arena) {}

inline void SchemaData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ver_),
           0,
           offsetof(Impl_, pub_) -
               offsetof(Impl_, ver_) +
               sizeof(Impl_::pub_));
}
SchemaData::~SchemaData() {
  // @@protoc_insertion_point(destructor:SDMS.SchemaData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SchemaData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.own_id_.Destroy();
  _impl_.own_nm_.Destroy();
  _impl_.desc_.Destroy();
  _impl_.def_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SchemaData::Clear() {
// @@protoc_insertion_point(message_clear_start:SDMS.SchemaData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uses_.Clear();
  _impl_.used_by_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.own_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.own_nm_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.def_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.ver_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.depr_) -
        reinterpret_cast<char*>(&_impl_.ver_)) + sizeof(_impl_.depr_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.ref_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pub_) -
        reinterpret_cast<char*>(&_impl_.ref_)) + sizeof(_impl_.pub_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SchemaData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 2, 53, 2> SchemaData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SchemaData, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SchemaData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.id_)}},
    // required uint32 ver = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaData, _impl_.ver_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.ver_)}},
    // optional bool depr = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaData, _impl_.depr_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.depr_)}},
    // optional uint32 cnt = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SchemaData, _impl_.cnt_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.cnt_)}},
    // optional bool ref = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaData, _impl_.ref_), 8>(),
     {40, 8, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.ref_)}},
    // optional string own_id = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.own_id_)}},
    // optional string own_nm = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.own_nm_)}},
    // optional string desc = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.desc_)}},
    // optional bool pub = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SchemaData, _impl_.pub_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.pub_)}},
    // optional string def = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.def_)}},
    // repeated .SDMS.SchemaData uses = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.uses_)}},
    // repeated .SDMS.SchemaData used_by = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 1, PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.used_by_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint32 ver = 2;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.ver_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool depr = 3;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.depr_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 cnt = 4;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.cnt_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool ref = 5;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.ref_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string own_id = 6;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.own_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string own_nm = 7;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.own_nm_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string desc = 8;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool pub = 9;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.pub_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string def = 10;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.def_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .SDMS.SchemaData uses = 11;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.uses_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .SDMS.SchemaData used_by = 12;
    {PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.used_by_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::SDMS::SchemaData>()},
    {::_pbi::TcParser::GetTable<::SDMS::SchemaData>()},
  }}, {{
    "\17\2\0\0\0\0\6\6\4\0\3\0\0\0\0\0"
    "SDMS.SchemaData"
    "id"
    "own_id"
    "own_nm"
    "desc"
    "def"
  }},
};

::uint8_t* SchemaData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SDMS.SchemaData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.SchemaData.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required uint32 ver = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_ver(), target);
  }

  // optional bool depr = 3;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_depr(), target);
  }

  // optional uint32 cnt = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_cnt(), target);
  }

  // optional bool ref = 5;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_ref(), target);
  }

  // optional string own_id = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_own_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.SchemaData.own_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string own_nm = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_own_nm();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.SchemaData.own_nm");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string desc = 8;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_desc();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.SchemaData.desc");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional bool pub = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_pub(), target);
  }

  // optional string def = 10;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_def();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SDMS.SchemaData.def");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated .SDMS.SchemaData uses = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_uses_size()); i < n; i++) {
    const auto& repfield = this->_internal_uses().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .SDMS.SchemaData used_by = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_used_by_size()); i < n; i++) {
    const auto& repfield = this->_internal_used_by().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SDMS.SchemaData)
  return target;
}

::size_t SchemaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SDMS.SchemaData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SDMS.SchemaData uses = 11;
  total_size += 1UL * this->_internal_uses_size();
  for (const auto& msg : this->_internal_uses()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .SDMS.SchemaData used_by = 12;
  total_size += 1UL * this->_internal_used_by_size();
  for (const auto& msg : this->_internal_used_by()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional string own_id = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_own_id());
    }

    // optional string own_nm = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_own_nm());
    }

    // optional string desc = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_desc());
    }

    // optional string def = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_def());
    }

  }
  // required uint32 ver = 2;
  if (cached_has_bits & 0x00000020u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ver());
  }

  if (cached_has_bits & 0x000000c0u) {
    // optional uint32 cnt = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_cnt());
    }

    // optional bool depr = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool ref = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // optional bool pub = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SchemaData::_class_data_ = {
    SchemaData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SchemaData::GetClassData() const {
  return &_class_data_;
}

void SchemaData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SchemaData*>(&to_msg);
  auto& from = static_cast<const SchemaData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SDMS.SchemaData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_uses()->MergeFrom(
      from._internal_uses());
  _this->_internal_mutable_used_by()->MergeFrom(
      from._internal_used_by());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_own_id(from._internal_own_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_own_nm(from._internal_own_nm());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_desc(from._internal_desc());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_def(from._internal_def());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ver_ = from._impl_.ver_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.cnt_ = from._impl_.cnt_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.depr_ = from._impl_.depr_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.ref_ = from._impl_.ref_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.pub_ = from._impl_.pub_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SchemaData::CopyFrom(const SchemaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SDMS.SchemaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SchemaData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_uses()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_used_by()))
    return false;
  return true;
}

::_pbi::CachedSize* SchemaData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SchemaData::InternalSwap(SchemaData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.uses_.InternalSwap(&other->_impl_.uses_);
  _impl_.used_by_.InternalSwap(&other->_impl_.used_by_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.own_id_, &other->_impl_.own_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.own_nm_, &other->_impl_.own_nm_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desc_, &other->_impl_.desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.def_, &other->_impl_.def_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.pub_)
      + sizeof(SchemaData::_impl_.pub_)
      - PROTOBUF_FIELD_OFFSET(SchemaData, _impl_.ver_)>(
          reinterpret_cast<char*>(&_impl_.ver_),
          reinterpret_cast<char*>(&other->_impl_.ver_));
}

::google::protobuf::Metadata SchemaData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SDMS_2eproto_getter, &descriptor_table_SDMS_2eproto_once,
      file_level_metadata_SDMS_2eproto[21]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace SDMS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
